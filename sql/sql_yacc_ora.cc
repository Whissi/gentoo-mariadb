/* A Bison parser, made by GNU Bison 3.0.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         ORAparse
#define yylex           ORAlex
#define yyerror         ORAerror
#define yydebug         ORAdebug
#define yynerrs         ORAnerrs


/* Copy the first part of user declarations.  */
#line 25 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:339  */

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"
#include "sql_type_json.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                          \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


static Item* escape(THD *thd)
{
  thd->lex->escape_used= false;
  const char *esc= thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES ? "" : "\\";
  return new (thd->mem_root) Item_string_ascii(thd, esc, MY_TEST(esc[0]));
}


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void ORAerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}




#define bincmp_collation(X,Y)           \
  do                                    \
  {                                     \
     if (unlikely(Lex->set_bincmp(X,Y))) \
       MYSQL_YYABORT;                   \
  } while(0)


#line 221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc_ora.hh".  */
#ifndef YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED
# define YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int ORAdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ADD = 260,
    ALL = 261,
    ALTER = 262,
    ANALYZE_SYM = 263,
    AND_AND_SYM = 264,
    AND_SYM = 265,
    AS = 266,
    ASC = 267,
    ASENSITIVE_SYM = 268,
    BEFORE_SYM = 269,
    BETWEEN_SYM = 270,
    BIGINT = 271,
    BINARY = 272,
    BIN_NUM = 273,
    BIT_AND = 274,
    BIT_OR = 275,
    BIT_XOR = 276,
    BLOB_MARIADB_SYM = 277,
    BLOB_ORACLE_SYM = 278,
    BODY_ORACLE_SYM = 279,
    BOTH = 280,
    BY = 281,
    CALL_SYM = 282,
    CASCADE = 283,
    CASE_SYM = 284,
    CAST_SYM = 285,
    CHANGE = 286,
    CHAR_SYM = 287,
    CHECK_SYM = 288,
    COLLATE_SYM = 289,
    CONDITION_SYM = 290,
    CONSTRAINT = 291,
    CONTINUE_MARIADB_SYM = 292,
    CONTINUE_ORACLE_SYM = 293,
    CONVERT_SYM = 294,
    COUNT_SYM = 295,
    CREATE = 296,
    CROSS = 297,
    CUME_DIST_SYM = 298,
    CURDATE = 299,
    CURRENT_USER = 300,
    CURRENT_ROLE = 301,
    CURSOR_SYM = 302,
    CURTIME = 303,
    DATABASE = 304,
    DATABASES = 305,
    DATE_ADD_INTERVAL = 306,
    DATE_SUB_INTERVAL = 307,
    DAY_HOUR_SYM = 308,
    DAY_MICROSECOND_SYM = 309,
    DAY_MINUTE_SYM = 310,
    DAY_SECOND_SYM = 311,
    DECIMAL_NUM = 312,
    DECIMAL_SYM = 313,
    DECLARE_MARIADB_SYM = 314,
    DECLARE_ORACLE_SYM = 315,
    DEFAULT = 316,
    DELETE_DOMAIN_ID_SYM = 317,
    DELETE_SYM = 318,
    DENSE_RANK_SYM = 319,
    DESC = 320,
    DESCRIBE = 321,
    DETERMINISTIC_SYM = 322,
    DISTINCT = 323,
    DIV_SYM = 324,
    DOUBLE_SYM = 325,
    DO_DOMAIN_IDS_SYM = 326,
    DOT_DOT_SYM = 327,
    DROP = 328,
    DUAL_SYM = 329,
    EACH_SYM = 330,
    ELSE = 331,
    ELSEIF_MARIADB_SYM = 332,
    ELSIF_ORACLE_SYM = 333,
    ENCLOSED = 334,
    END_OF_INPUT = 335,
    EQUAL_SYM = 336,
    ESCAPED = 337,
    EXCEPT_SYM = 338,
    EXISTS = 339,
    EXTRACT_SYM = 340,
    FALSE_SYM = 341,
    FETCH_SYM = 342,
    FIRST_VALUE_SYM = 343,
    FLOAT_NUM = 344,
    FLOAT_SYM = 345,
    FOREIGN = 346,
    FOR_SYM = 347,
    FOR_SYSTEM_TIME_SYM = 348,
    FROM = 349,
    FULLTEXT_SYM = 350,
    GE = 351,
    GOTO_ORACLE_SYM = 352,
    GRANT = 353,
    GROUP_SYM = 354,
    GROUP_CONCAT_SYM = 355,
    LAG_SYM = 356,
    LEAD_SYM = 357,
    HAVING = 358,
    HEX_NUM = 359,
    HEX_STRING = 360,
    HOUR_MICROSECOND_SYM = 361,
    HOUR_MINUTE_SYM = 362,
    HOUR_SECOND_SYM = 363,
    IDENT = 364,
    IDENT_QUOTED = 365,
    IF_SYM = 366,
    IGNORE_DOMAIN_IDS_SYM = 367,
    IGNORE_SYM = 368,
    INDEX_SYM = 369,
    INFILE = 370,
    INNER_SYM = 371,
    INOUT_SYM = 372,
    INSENSITIVE_SYM = 373,
    INSERT = 374,
    INTERSECT_SYM = 375,
    INTERVAL_SYM = 376,
    INTO = 377,
    INT_SYM = 378,
    IN_SYM = 379,
    IS = 380,
    ITERATE_SYM = 381,
    JOIN_SYM = 382,
    KEYS = 383,
    KEY_SYM = 384,
    KILL_SYM = 385,
    LE = 386,
    LEADING = 387,
    LEAVE_SYM = 388,
    LEFT = 389,
    LEFT_PAREN_ALT = 390,
    LEFT_PAREN_WITH = 391,
    LEFT_PAREN_LIKE = 392,
    LEX_HOSTNAME = 393,
    LIKE = 394,
    LIMIT = 395,
    LINEAR_SYM = 396,
    LINES = 397,
    LOAD = 398,
    LOCATOR_SYM = 399,
    LOCK_SYM = 400,
    LONGBLOB = 401,
    LONGTEXT = 402,
    LONG_NUM = 403,
    LONG_SYM = 404,
    LOOP_SYM = 405,
    LOW_PRIORITY = 406,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 407,
    MATCH = 408,
    MAX_SYM = 409,
    MAXVALUE_SYM = 410,
    MEDIAN_SYM = 411,
    MEDIUMBLOB = 412,
    MEDIUMINT = 413,
    MEDIUMTEXT = 414,
    MINUTE_MICROSECOND_SYM = 415,
    MINUTE_SECOND_SYM = 416,
    MIN_SYM = 417,
    MODIFIES_SYM = 418,
    MOD_SYM = 419,
    MYSQL_CONCAT_SYM = 420,
    NATURAL = 421,
    NCHAR_STRING = 422,
    NE = 423,
    NEG = 424,
    NOT2_SYM = 425,
    NOT_SYM = 426,
    NOW_SYM = 427,
    NO_WRITE_TO_BINLOG = 428,
    NTILE_SYM = 429,
    NULL_SYM = 430,
    NUM = 431,
    NUMERIC_SYM = 432,
    NTH_VALUE_SYM = 433,
    ON = 434,
    OPTIMIZE = 435,
    OPTIONALLY = 436,
    ORACLE_CONCAT_SYM = 437,
    OR2_SYM = 438,
    ORDER_SYM = 439,
    OR_SYM = 440,
    OTHERS_ORACLE_SYM = 441,
    OUTER = 442,
    OUTFILE = 443,
    OUT_SYM = 444,
    OVER_SYM = 445,
    PACKAGE_ORACLE_SYM = 446,
    PAGE_CHECKSUM_SYM = 447,
    PARAM_MARKER = 448,
    PARSE_VCOL_EXPR_SYM = 449,
    PARTITION_SYM = 450,
    PERCENT_ORACLE_SYM = 451,
    PERCENT_RANK_SYM = 452,
    PERCENTILE_CONT_SYM = 453,
    PERCENTILE_DISC_SYM = 454,
    PORTION_SYM = 455,
    POSITION_SYM = 456,
    PRECISION = 457,
    PRIMARY_SYM = 458,
    PROCEDURE_SYM = 459,
    PURGE = 460,
    RAISE_ORACLE_SYM = 461,
    RANGE_SYM = 462,
    RANK_SYM = 463,
    READS_SYM = 464,
    READ_SYM = 465,
    READ_WRITE_SYM = 466,
    REAL = 467,
    RECURSIVE_SYM = 468,
    REF_SYSTEM_ID_SYM = 469,
    REFERENCES = 470,
    REGEXP = 471,
    RELEASE_SYM = 472,
    RENAME = 473,
    REPEAT_SYM = 474,
    REPLACE = 475,
    REQUIRE_SYM = 476,
    RESIGNAL_SYM = 477,
    RESTRICT = 478,
    RETURNING_SYM = 479,
    RETURN_MARIADB_SYM = 480,
    RETURN_ORACLE_SYM = 481,
    REVOKE = 482,
    RIGHT = 483,
    ROWS_SYM = 484,
    ROWTYPE_ORACLE_SYM = 485,
    ROW_NUMBER_SYM = 486,
    SECOND_MICROSECOND_SYM = 487,
    SELECT_SYM = 488,
    SENSITIVE_SYM = 489,
    SEPARATOR_SYM = 490,
    SERVER_OPTIONS = 491,
    SET = 492,
    SET_VAR = 493,
    SHIFT_LEFT = 494,
    SHIFT_RIGHT = 495,
    SHOW = 496,
    SIGNAL_SYM = 497,
    SMALLINT = 498,
    SPATIAL_SYM = 499,
    SPECIFIC_SYM = 500,
    SQLEXCEPTION_SYM = 501,
    SQLSTATE_SYM = 502,
    SQLWARNING_SYM = 503,
    SQL_BIG_RESULT = 504,
    SQL_SMALL_RESULT = 505,
    SQL_SYM = 506,
    SSL_SYM = 507,
    STARTING = 508,
    STATS_AUTO_RECALC_SYM = 509,
    STATS_PERSISTENT_SYM = 510,
    STATS_SAMPLE_PAGES_SYM = 511,
    STDDEV_SAMP_SYM = 512,
    STD_SYM = 513,
    STRAIGHT_JOIN = 514,
    SUBSTRING = 515,
    SUM_SYM = 516,
    SYSDATE = 517,
    TABLE_REF_PRIORITY = 518,
    TABLE_SYM = 519,
    TERMINATED = 520,
    TEXT_STRING = 521,
    THEN_SYM = 522,
    TINYBLOB = 523,
    TINYINT = 524,
    TINYTEXT = 525,
    TO_SYM = 526,
    TRAILING = 527,
    TRIGGER_SYM = 528,
    TRIM = 529,
    TRUE_SYM = 530,
    ULONGLONG_NUM = 531,
    UNDERSCORE_CHARSET = 532,
    UNDO_SYM = 533,
    UNION_SYM = 534,
    UNIQUE_SYM = 535,
    UNLOCK_SYM = 536,
    UNSIGNED = 537,
    UPDATE_SYM = 538,
    USAGE = 539,
    USE_SYM = 540,
    USING = 541,
    UTC_DATE_SYM = 542,
    UTC_TIMESTAMP_SYM = 543,
    UTC_TIME_SYM = 544,
    VALUES = 545,
    VALUES_IN_SYM = 546,
    VALUES_LESS_SYM = 547,
    VARBINARY = 548,
    VARCHAR = 549,
    VARIANCE_SYM = 550,
    VARYING = 551,
    VAR_SAMP_SYM = 552,
    WHEN_SYM = 553,
    WHERE = 554,
    WHILE_SYM = 555,
    WITH = 556,
    WITH_CUBE_SYM = 557,
    WITH_ROLLUP_SYM = 558,
    WITH_SYSTEM_SYM = 559,
    XOR = 560,
    YEAR_MONTH_SYM = 561,
    ZEROFILL = 562,
    IMPOSSIBLE_ACTION = 563,
    BODY_MARIADB_SYM = 564,
    ELSEIF_ORACLE_SYM = 565,
    ELSIF_MARIADB_SYM = 566,
    EXCEPTION_ORACLE_SYM = 567,
    GOTO_MARIADB_SYM = 568,
    OTHERS_MARIADB_SYM = 569,
    PACKAGE_MARIADB_SYM = 570,
    RAISE_MARIADB_SYM = 571,
    ROWTYPE_MARIADB_SYM = 572,
    ACCOUNT_SYM = 573,
    ACTION = 574,
    ADMIN_SYM = 575,
    ADDDATE_SYM = 576,
    AFTER_SYM = 577,
    AGAINST = 578,
    AGGREGATE_SYM = 579,
    ALGORITHM_SYM = 580,
    ALWAYS_SYM = 581,
    ANY_SYM = 582,
    ASCII_SYM = 583,
    AT_SYM = 584,
    ATOMIC_SYM = 585,
    AUTHORS_SYM = 586,
    AUTOEXTEND_SIZE_SYM = 587,
    AUTO_INC = 588,
    AUTO_SYM = 589,
    AVG_ROW_LENGTH = 590,
    AVG_SYM = 591,
    BACKUP_SYM = 592,
    BEGIN_MARIADB_SYM = 593,
    BEGIN_ORACLE_SYM = 594,
    BINLOG_SYM = 595,
    BIT_SYM = 596,
    BLOCK_SYM = 597,
    BOOL_SYM = 598,
    BOOLEAN_SYM = 599,
    BTREE_SYM = 600,
    BYTE_SYM = 601,
    CACHE_SYM = 602,
    CASCADED = 603,
    CATALOG_NAME_SYM = 604,
    CHAIN_SYM = 605,
    CHANGED = 606,
    CHARSET = 607,
    CHECKPOINT_SYM = 608,
    CHECKSUM_SYM = 609,
    CIPHER_SYM = 610,
    CLASS_ORIGIN_SYM = 611,
    CLIENT_SYM = 612,
    CLOB_MARIADB_SYM = 613,
    CLOB_ORACLE_SYM = 614,
    CLOSE_SYM = 615,
    COALESCE = 616,
    CODE_SYM = 617,
    COLLATION_SYM = 618,
    COLON_ORACLE_SYM = 619,
    COLUMNS = 620,
    COLUMN_ADD_SYM = 621,
    COLUMN_CHECK_SYM = 622,
    COLUMN_CREATE_SYM = 623,
    COLUMN_DELETE_SYM = 624,
    COLUMN_GET_SYM = 625,
    COLUMN_SYM = 626,
    COLUMN_NAME_SYM = 627,
    COMMENT_SYM = 628,
    COMMITTED_SYM = 629,
    COMMIT_SYM = 630,
    COMPACT_SYM = 631,
    COMPLETION_SYM = 632,
    COMPRESSED_SYM = 633,
    CONCURRENT = 634,
    CONNECTION_SYM = 635,
    CONSISTENT_SYM = 636,
    CONSTRAINT_CATALOG_SYM = 637,
    CONSTRAINT_NAME_SYM = 638,
    CONSTRAINT_SCHEMA_SYM = 639,
    CONTAINS_SYM = 640,
    CONTEXT_SYM = 641,
    CONTRIBUTORS_SYM = 642,
    CPU_SYM = 643,
    CUBE_SYM = 644,
    CURRENT_SYM = 645,
    CURRENT_POS_SYM = 646,
    CURSOR_NAME_SYM = 647,
    CYCLE_SYM = 648,
    DATAFILE_SYM = 649,
    DATA_SYM = 650,
    DATETIME = 651,
    DATE_FORMAT_SYM = 652,
    DATE_SYM = 653,
    DAY_SYM = 654,
    DEALLOCATE_SYM = 655,
    DECODE_MARIADB_SYM = 656,
    DECODE_ORACLE_SYM = 657,
    DEFINER_SYM = 658,
    DELAYED_SYM = 659,
    DELAY_KEY_WRITE_SYM = 660,
    DES_KEY_FILE = 661,
    DIAGNOSTICS_SYM = 662,
    DIRECTORY_SYM = 663,
    DISABLE_SYM = 664,
    DISCARD = 665,
    DISK_SYM = 666,
    DO_SYM = 667,
    DUMPFILE = 668,
    DUPLICATE_SYM = 669,
    DYNAMIC_SYM = 670,
    ENABLE_SYM = 671,
    END = 672,
    ENDS_SYM = 673,
    ENGINES_SYM = 674,
    ENGINE_SYM = 675,
    ENUM = 676,
    ERROR_SYM = 677,
    ERRORS = 678,
    ESCAPE_SYM = 679,
    EVENTS_SYM = 680,
    EVENT_SYM = 681,
    EVERY_SYM = 682,
    EXCHANGE_SYM = 683,
    EXAMINED_SYM = 684,
    EXCLUDE_SYM = 685,
    EXECUTE_SYM = 686,
    EXCEPTION_MARIADB_SYM = 687,
    EXIT_MARIADB_SYM = 688,
    EXIT_ORACLE_SYM = 689,
    EXPANSION_SYM = 690,
    EXPIRE_SYM = 691,
    EXPORT_SYM = 692,
    EXTENDED_SYM = 693,
    EXTENT_SIZE_SYM = 694,
    FAST_SYM = 695,
    FAULTS_SYM = 696,
    FILE_SYM = 697,
    FIRST_SYM = 698,
    FIXED_SYM = 699,
    FLUSH_SYM = 700,
    FOLLOWS_SYM = 701,
    FOLLOWING_SYM = 702,
    FORCE_SYM = 703,
    FORMAT_SYM = 704,
    FOUND_SYM = 705,
    FULL = 706,
    FUNCTION_SYM = 707,
    GENERAL = 708,
    GENERATED_SYM = 709,
    GEOMETRYCOLLECTION = 710,
    GEOMETRY_SYM = 711,
    GET_FORMAT = 712,
    GET_SYM = 713,
    GLOBAL_SYM = 714,
    GRANTS = 715,
    HANDLER_SYM = 716,
    HARD_SYM = 717,
    HASH_SYM = 718,
    HELP_SYM = 719,
    HIGH_PRIORITY = 720,
    HISTORY_SYM = 721,
    HOST_SYM = 722,
    HOSTS_SYM = 723,
    HOUR_SYM = 724,
    ID_SYM = 725,
    IDENTIFIED_SYM = 726,
    IGNORE_SERVER_IDS_SYM = 727,
    IMMEDIATE_SYM = 728,
    IMPORT = 729,
    INCREMENT_SYM = 730,
    INDEXES = 731,
    INITIAL_SIZE_SYM = 732,
    INSERT_METHOD = 733,
    INSTALL_SYM = 734,
    INVOKER_SYM = 735,
    IO_SYM = 736,
    IPC_SYM = 737,
    ISOLATION = 738,
    ISOPEN_SYM = 739,
    ISSUER_SYM = 740,
    INVISIBLE_SYM = 741,
    JSON_SYM = 742,
    KEY_BLOCK_SIZE = 743,
    LANGUAGE_SYM = 744,
    LAST_SYM = 745,
    LAST_VALUE = 746,
    LASTVAL_SYM = 747,
    LEAVES = 748,
    LESS_SYM = 749,
    LEVEL_SYM = 750,
    LINESTRING = 751,
    LIST_SYM = 752,
    LOCAL_SYM = 753,
    LOCKS_SYM = 754,
    LOGFILE_SYM = 755,
    LOGS_SYM = 756,
    MASTER_CONNECT_RETRY_SYM = 757,
    MASTER_DELAY_SYM = 758,
    MASTER_GTID_POS_SYM = 759,
    MASTER_HOST_SYM = 760,
    MASTER_LOG_FILE_SYM = 761,
    MASTER_LOG_POS_SYM = 762,
    MASTER_PASSWORD_SYM = 763,
    MASTER_PORT_SYM = 764,
    MASTER_SERVER_ID_SYM = 765,
    MASTER_SSL_CAPATH_SYM = 766,
    MASTER_SSL_CA_SYM = 767,
    MASTER_SSL_CERT_SYM = 768,
    MASTER_SSL_CIPHER_SYM = 769,
    MASTER_SSL_CRL_SYM = 770,
    MASTER_SSL_CRLPATH_SYM = 771,
    MASTER_SSL_KEY_SYM = 772,
    MASTER_SSL_SYM = 773,
    MASTER_SYM = 774,
    MASTER_USER_SYM = 775,
    MASTER_USE_GTID_SYM = 776,
    MASTER_HEARTBEAT_PERIOD_SYM = 777,
    MAX_CONNECTIONS_PER_HOUR = 778,
    MAX_QUERIES_PER_HOUR = 779,
    MAX_ROWS = 780,
    MAX_SIZE_SYM = 781,
    MAX_UPDATES_PER_HOUR = 782,
    MAX_STATEMENT_TIME_SYM = 783,
    MAX_USER_CONNECTIONS_SYM = 784,
    MEDIUM_SYM = 785,
    MEMORY_SYM = 786,
    MERGE_SYM = 787,
    MESSAGE_TEXT_SYM = 788,
    MICROSECOND_SYM = 789,
    MIGRATE_SYM = 790,
    MINUTE_SYM = 791,
    MINVALUE_SYM = 792,
    MIN_ROWS = 793,
    MODE_SYM = 794,
    MODIFY_SYM = 795,
    MONTH_SYM = 796,
    MULTILINESTRING = 797,
    MULTIPOINT = 798,
    MULTIPOLYGON = 799,
    MUTEX_SYM = 800,
    MYSQL_SYM = 801,
    MYSQL_ERRNO_SYM = 802,
    NAMES_SYM = 803,
    NAME_SYM = 804,
    NATIONAL_SYM = 805,
    NCHAR_SYM = 806,
    NEVER_SYM = 807,
    NEW_SYM = 808,
    NEXT_SYM = 809,
    NEXTVAL_SYM = 810,
    NOCACHE_SYM = 811,
    NOCYCLE_SYM = 812,
    NODEGROUP_SYM = 813,
    NONE_SYM = 814,
    NOTFOUND_SYM = 815,
    NO_SYM = 816,
    NOMAXVALUE_SYM = 817,
    NOMINVALUE_SYM = 818,
    NO_WAIT_SYM = 819,
    NOWAIT_SYM = 820,
    NUMBER_MARIADB_SYM = 821,
    NUMBER_ORACLE_SYM = 822,
    NVARCHAR_SYM = 823,
    OF_SYM = 824,
    OFFSET_SYM = 825,
    OLD_PASSWORD_SYM = 826,
    ONE_SYM = 827,
    ONLY_SYM = 828,
    ONLINE_SYM = 829,
    OPEN_SYM = 830,
    OPTIONS_SYM = 831,
    OPTION = 832,
    OWNER_SYM = 833,
    PACK_KEYS_SYM = 834,
    PAGE_SYM = 835,
    PARSER_SYM = 836,
    PARTIAL = 837,
    PARTITIONS_SYM = 838,
    PARTITIONING_SYM = 839,
    PASSWORD_SYM = 840,
    PERIOD_SYM = 841,
    PERSISTENT_SYM = 842,
    PHASE_SYM = 843,
    PLUGINS_SYM = 844,
    PLUGIN_SYM = 845,
    POINT_SYM = 846,
    POLYGON = 847,
    PORT_SYM = 848,
    PRECEDES_SYM = 849,
    PRECEDING_SYM = 850,
    PREPARE_SYM = 851,
    PRESERVE_SYM = 852,
    PREV_SYM = 853,
    PREVIOUS_SYM = 854,
    PRIVILEGES = 855,
    PROCESS = 856,
    PROCESSLIST_SYM = 857,
    PROFILE_SYM = 858,
    PROFILES_SYM = 859,
    PROXY_SYM = 860,
    QUARTER_SYM = 861,
    QUERY_SYM = 862,
    QUICK = 863,
    RAW_MARIADB_SYM = 864,
    RAW_ORACLE_SYM = 865,
    READ_ONLY_SYM = 866,
    REBUILD_SYM = 867,
    RECOVER_SYM = 868,
    REDOFILE_SYM = 869,
    REDO_BUFFER_SIZE_SYM = 870,
    REDUNDANT_SYM = 871,
    RELAY = 872,
    RELAYLOG_SYM = 873,
    RELAY_LOG_FILE_SYM = 874,
    RELAY_LOG_POS_SYM = 875,
    RELAY_THREAD = 876,
    RELOAD = 877,
    REMOVE_SYM = 878,
    REORGANIZE_SYM = 879,
    REPAIR = 880,
    REPEATABLE_SYM = 881,
    REPLICATION = 882,
    RESET_SYM = 883,
    RESTART_SYM = 884,
    RESOURCES = 885,
    RESTORE_SYM = 886,
    RESUME_SYM = 887,
    RETURNED_SQLSTATE_SYM = 888,
    RETURNS_SYM = 889,
    REUSE_SYM = 890,
    REVERSE_SYM = 891,
    ROLE_SYM = 892,
    ROLLBACK_SYM = 893,
    ROLLUP_SYM = 894,
    ROUTINE_SYM = 895,
    ROWCOUNT_SYM = 896,
    ROW_SYM = 897,
    ROW_COUNT_SYM = 898,
    ROW_FORMAT_SYM = 899,
    RTREE_SYM = 900,
    SAVEPOINT_SYM = 901,
    SCHEDULE_SYM = 902,
    SCHEMA_NAME_SYM = 903,
    SECOND_SYM = 904,
    SECURITY_SYM = 905,
    SEQUENCE_SYM = 906,
    SERIALIZABLE_SYM = 907,
    SERIAL_SYM = 908,
    SESSION_SYM = 909,
    SERVER_SYM = 910,
    SETVAL_SYM = 911,
    SHARE_SYM = 912,
    SHUTDOWN = 913,
    SIGNED_SYM = 914,
    SIMPLE_SYM = 915,
    SLAVE = 916,
    SLAVES = 917,
    SLAVE_POS_SYM = 918,
    SLOW = 919,
    SNAPSHOT_SYM = 920,
    SOCKET_SYM = 921,
    SOFT_SYM = 922,
    SONAME_SYM = 923,
    SOUNDS_SYM = 924,
    SOURCE_SYM = 925,
    SQL_BUFFER_RESULT = 926,
    SQL_CACHE_SYM = 927,
    SQL_CALC_FOUND_ROWS = 928,
    SQL_NO_CACHE_SYM = 929,
    SQL_THREAD = 930,
    STAGE_SYM = 931,
    STARTS_SYM = 932,
    START_SYM = 933,
    STATEMENT_SYM = 934,
    STATUS_SYM = 935,
    STOP_SYM = 936,
    STORAGE_SYM = 937,
    STORED_SYM = 938,
    STRING_SYM = 939,
    SUBCLASS_ORIGIN_SYM = 940,
    SUBDATE_SYM = 941,
    SUBJECT_SYM = 942,
    SUBPARTITIONS_SYM = 943,
    SUBPARTITION_SYM = 944,
    SUPER_SYM = 945,
    SUSPEND_SYM = 946,
    SWAPS_SYM = 947,
    SWITCHES_SYM = 948,
    SYSTEM = 949,
    SYSTEM_TIME_SYM = 950,
    TABLES = 951,
    TABLESPACE = 952,
    TABLE_CHECKSUM_SYM = 953,
    TABLE_NAME_SYM = 954,
    TEMPORARY = 955,
    TEMPTABLE_SYM = 956,
    TEXT_SYM = 957,
    THAN_SYM = 958,
    TIES_SYM = 959,
    TIMESTAMP = 960,
    TIMESTAMP_ADD = 961,
    TIMESTAMP_DIFF = 962,
    TIME_SYM = 963,
    TRANSACTION_SYM = 964,
    TRANSACTIONAL_SYM = 965,
    TRIGGERS_SYM = 966,
    TRIM_ORACLE = 967,
    TRUNCATE_SYM = 968,
    TYPES_SYM = 969,
    TYPE_SYM = 970,
    UDF_RETURNS_SYM = 971,
    UNBOUNDED_SYM = 972,
    UNCOMMITTED_SYM = 973,
    UNDEFINED_SYM = 974,
    UNDOFILE_SYM = 975,
    UNDO_BUFFER_SIZE_SYM = 976,
    UNICODE_SYM = 977,
    UNINSTALL_SYM = 978,
    UNKNOWN_SYM = 979,
    UNTIL_SYM = 980,
    UPGRADE_SYM = 981,
    USER_SYM = 982,
    USE_FRM = 983,
    VALUE_SYM = 984,
    VARCHAR2_MARIADB_SYM = 985,
    VARCHAR2_ORACLE_SYM = 986,
    VARIABLES = 987,
    VERSIONING_SYM = 988,
    VIA_SYM = 989,
    VIEW_SYM = 990,
    VIRTUAL_SYM = 991,
    WAIT_SYM = 992,
    WARNINGS = 993,
    WEEK_SYM = 994,
    WEIGHT_STRING_SYM = 995,
    WINDOW_SYM = 996,
    WITHIN = 997,
    WITHOUT = 998,
    WORK_SYM = 999,
    WRAPPER_SYM = 1000,
    WRITE_SYM = 1001,
    X509_SYM = 1002,
    XA_SYM = 1003,
    XML_SYM = 1004,
    YEAR_SYM = 1005,
    CONDITIONLESS_JOIN = 1006,
    ON_SYM = 1007,
    PREC_BELOW_NOT = 1008,
    SUBQUERY_AS_EXPR = 1009,
    PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 1010,
    USER = 1011,
    PREC_BELOW_CONTRACTION_TOKEN2 = 1012,
    EMPTY_FROM_CLAUSE = 1013
  };
#endif

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE YYSTYPE;
union YYSTYPE
{
#line 173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:355  */

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  uint sp_instr_addr;

  /* structs */
  LEX_CSTRING lex_str;
  Lex_ident_cli_st kwd;
  Lex_ident_cli_st ident_cli;
  Lex_ident_sys_st ident_sys;
  Lex_string_with_metadata_st lex_string_with_metadata;
  Lex_spblock_st spblock;
  Lex_spblock_handlers_st spblock_handlers;
  Lex_length_and_dec_st Lex_length_and_dec;
  Lex_cast_type_st Lex_cast_type;
  Lex_field_type_st Lex_field_type;
  Lex_dyncol_type_st Lex_dyncol_type;
  Lex_for_loop_st for_loop;
  Lex_for_loop_bounds_st for_loop_bounds;
  Lex_trim_st trim;
  vers_history_point_t vers_history_point;
  struct
  {
    enum sub_select_type unit_type;
    bool distinct;
  } unit_operation;
  struct
  {
    SELECT_LEX *first;
    SELECT_LEX *prev_last;
  } select_list;
  SQL_I_List<ORDER> *select_order;
  Lex_select_lock select_lock;
  Lex_select_limit select_limit;
  Lex_order_limit_lock *order_limit_lock;

  /* pointers */
  Create_field *create_field;
  Spvar_definition *spvar_definition;
  Row_definition_list *spvar_definition_list;
  const Type_handler *type_handler;
  CHARSET_INFO *charset;
  Condition_information_item *cond_info_item;
  DYNCALL_CREATE_DEF *dyncol_def;
  Diagnostics_information *diag_info;
  Item *item;
  Item_num *item_num;
  Item_param *item_param;
  Item_basic_constant *item_basic_constant;
  Key_part_spec *key_part;
  LEX *lex;
  sp_assignment_lex *assignment_lex;
  class sp_lex_cursor *sp_cursor_stmt;
  LEX_CSTRING *lex_str_ptr;
  LEX_USER *lex_user;
  USER_AUTH *user_auth;
  List<Condition_information_item> *cond_info_list;
  List<DYNCALL_CREATE_DEF> *dyncol_def_list;
  List<Item> *item_list;
  List<sp_assignment_lex> *sp_assignment_lex_list;
  List<Statement_information_item> *stmt_info_list;
  List<String> *string_list;
  List<LEX_CSTRING> *lex_str_list;
  Statement_information_item *stmt_info_item;
  String *string;
  TABLE_LIST *table_list;
  Table_ident *table;
  Qualified_column_ident *qualified_column_ident;
  char *simple_string;
  const char *const_simple_string;
  chooser_compare_func_creator boolfunc2creator;
  class my_var *myvar;
  class sp_condition_value *spcondvalue;
  class sp_head *sphead;
  class sp_name *spname;
  class sp_variable *spvar;
  class With_clause *with_clause;
  class Virtual_column_info *virtual_column;

  handlerton *db_type;
  st_select_lex *select_lex;
  st_select_lex_unit *select_lex_unit;
  struct p_elem_val *p_elem_value;
  class Window_frame *window_frame;
  class Window_frame_bound *window_frame_bound;
  udf_func *udf;
  st_trg_execution_order trg_execution_order;

  /* enums */
  enum enum_sp_suid_behaviour sp_suid;
  enum enum_sp_aggregate_type sp_aggregate_type;
  enum enum_view_suid view_suid;
  enum Condition_information_item::Name cond_info_item_name;
  enum enum_diag_condition_item_name diag_condition_item_name;
  enum Diagnostics_information::Which_area diag_area;
  enum Field::geometry_type geom_type;
  enum enum_fk_option m_fk_option;
  enum Item_udftype udf_type;
  enum Key::Keytype key_type;
  enum Statement_information_item::Name stmt_info_item_name;
  enum enum_filetype filetype;
  enum enum_tx_isolation tx_isolation;
  enum enum_var_type var_type;
  enum enum_yes_no_unknown m_yes_no_unk;
  enum ha_choice choice;
  enum ha_key_alg key_alg;
  enum ha_rkey_function ha_rkey_mode;
  enum index_hint_type index_hint;
  enum interval_type interval, interval_time_st;
  enum row_type row_type;
  enum sp_variable::enum_mode spvar_mode;
  enum thr_lock_type lock_type;
  enum enum_mysql_timestamp_type date_time_type;
  enum Window_frame_bound::Bound_precedence_type bound_precedence_type;
  enum Window_frame::Frame_units frame_units;
  enum Window_frame::Frame_exclusion frame_exclusion;
  enum trigger_order_type trigger_action_order_type;
  DDL_options_st object_ddl_options;
  enum vers_sys_type_t vers_range_unit;
  enum Column_definition::enum_column_versioning vers_column_versioning;
  enum plsql_cursor_attr_t plsql_cursor_attr;

#line 1145 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:355  */
};
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif



int ORAparse (THD *thd);

#endif /* !YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED  */

/* Copy the second part of user declarations.  */
#line 298 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:358  */

bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 1162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  754
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   93275

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  780
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1281
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3536
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  6116

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1013

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   774,     2,     2,     2,   763,   758,     2,
     770,   771,   761,   760,   773,   759,   778,   762,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,   777,
     756,   754,   755,     2,   779,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   764,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   775,   757,   776,   765,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   766,
     767,   768,   769,   772
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1724,  1724,  1734,  1733,  1758,  1765,  1767,  1771,  1772,
    1773,  1778,  1779,  1780,  1781,  1782,  1783,  1784,  1785,  1786,
    1787,  1788,  1789,  1790,  1791,  1792,  1793,  1794,  1795,  1796,
    1797,  1798,  1799,  1800,  1801,  1802,  1803,  1804,  1805,  1806,
    1807,  1808,  1809,  1810,  1811,  1812,  1813,  1814,  1815,  1816,
    1817,  1818,  1819,  1820,  1821,  1822,  1823,  1824,  1825,  1826,
    1827,  1828,  1829,  1830,  1831,  1832,  1833,  1834,  1835,  1836,
    1837,  1841,  1848,  1849,  1854,  1853,  1864,  1870,  1872,  1869,
    1881,  1883,  1882,  1892,  1897,  1909,  1908,  1925,  1924,  1933,
    1934,  1938,  1942,  1946,  1950,  1954,  1958,  1968,  1973,  1977,
    1981,  1985,  1989,  1993,  1998,  2002,  2007,  2035,  2039,  2043,
    2048,  2051,  2053,  2054,  2058,  2064,  2066,  2067,  2071,  2077,
    2079,  2080,  2084,  2091,  2095,  2110,  2114,  2120,  2126,  2132,
    2142,  2146,  2150,  2164,  2176,  2163,  2199,  2198,  2254,  2261,
    2253,  2273,  2279,  2272,  2291,  2297,  2290,  2309,  2308,  2323,
    2321,  2336,  2334,  2347,  2346,  2357,  2356,  2366,  2365,  2377,
    2375,  2390,  2388,  2404,  2402,  2417,  2415,  2429,  2436,  2443,
    2450,  2454,  2458,  2458,  2465,  2461,  2485,  2497,  2502,  2481,
    2515,  2521,  2529,  2530,  2531,  2537,  2538,  2544,  2545,  2551,
    2562,  2561,  2589,  2588,  2615,  2624,  2633,  2639,  2638,  2657,
    2656,  2675,  2678,  2680,  2684,  2685,  2689,  2696,  2707,  2708,
    2712,  2713,  2717,  2722,  2728,  2734,  2742,  2748,  2754,  2762,
    2770,  2778,  2786,  2794,  2802,  2814,  2831,  2830,  2842,  2843,
    2847,  2852,  2857,  2862,  2867,  2872,  2877,  2885,  2884,  2917,
    2916,  2923,  2930,  2931,  2937,  2943,  2953,  2959,  2965,  2967,
    2974,  2975,  2979,  2989,  2990,  2998,  2998,  3040,  3052,  3053,
    3057,  3062,  3070,  3071,  3075,  3076,  3080,  3081,  3086,  3088,
    3090,  3092,  3094,  3096,  3098,  3103,  3105,  3110,  3111,  3114,
    3116,  3120,  3120,  3126,  3127,  3131,  3132,  3137,  3136,  3145,
    3147,  3150,  3152,  3156,  3160,  3169,  3174,  3174,  3184,  3185,
    3189,  3197,  3202,  3207,  3212,  3217,  3222,  3230,  3232,  3236,
    3237,  3241,  3247,  3253,  3259,  3265,  3271,  3280,  3281,  3282,
    3283,  3284,  3289,  3288,  3301,  3308,  3309,  3313,  3314,  3318,
    3319,  3323,  3324,  3328,  3328,  3340,  3343,  3348,  3347,  3356,
    3360,  3361,  3368,  3369,  3376,  3377,  3381,  3387,  3393,  3402,
    3410,  3414,  3419,  3427,  3431,  3438,  3448,  3456,  3464,  3475,
    3476,  3483,  3494,  3493,  3512,  3511,  3525,  3527,  3532,  3542,
    3541,  3560,  3561,  3562,  3563,  3568,  3570,  3575,  3590,  3598,
    3602,  3622,  3623,  3627,  3631,  3637,  3643,  3649,  3655,  3665,
    3670,  3678,  3686,  3701,  3707,  3708,  3714,  3717,  3721,  3729,
    3746,  3748,  3766,  3772,  3774,  3776,  3778,  3780,  3782,  3784,
    3786,  3788,  3790,  3792,  3794,  3799,  3807,  3823,  3824,  3829,
    3835,  3844,  3851,  3860,  3869,  3874,  3883,  3885,  3887,  3896,
    3901,  3908,  3917,  3926,  3928,  3930,  3932,  3934,  3936,  3938,
    3940,  3942,  3944,  3946,  3948,  3950,  3955,  3956,  3964,  3976,
    3991,  3992,  3993,  3997,  3998,  3999,  4000,  4001,  4002,  4006,
    4007,  4008,  4009,  4010,  4011,  4012,  4013,  4014,  4015,  4016,
    4017,  4018,  4022,  4023,  4024,  4025,  4030,  4029,  4040,  4042,
    4041,  4049,  4048,  4057,  4057,  4079,  4080,  4085,  4084,  4100,
    4111,  4111,  4124,  4129,  4134,  4140,  4149,  4154,  4159,  4165,
    4175,  4183,  4191,  4200,  4206,  4216,  4215,  4237,  4236,  4257,
    4263,  4271,  4272,  4276,  4284,  4289,  4294,  4302,  4303,  4311,
    4329,  4344,  4362,  4368,  4385,  4362,  4404,  4406,  4407,  4412,
    4411,  4481,  4487,  4481,  4497,  4502,  4503,  4507,  4508,  4513,
    4519,  4512,  4540,  4546,  4539,  4565,  4575,  4579,  4580,  4584,
    4595,  4593,  4609,  4613,  4607,  4628,  4630,  4635,  4634,  4649,
    4655,  4648,  4670,  4674,  4678,  4684,  4674,  4695,  4693,  4708,
    4709,  4713,  4714,  4719,  4718,  4734,  4735,  4740,  4739,  4753,
    4758,  4765,  4774,  4789,  4788,  4808,  4807,  4832,  4841,  4840,
    4848,  4847,  4858,  4863,  4872,  4857,  4882,  4881,  4892,  4891,
    4901,  4900,  4913,  4920,  4912,  4937,  4936,  4948,  4950,  4955,
    4957,  4959,  4976,  4981,  4987,  4994,  4995,  5003,  5009,  5018,
    5024,  5030,  5031,  5035,  5035,  5040,  5041,  5042,  5046,  5047,
    5048,  5052,  5056,  5057,  5058,  5062,  5063,  5064,  5065,  5066,
    5067,  5068,  5069,  5073,  5077,  5078,  5079,  5083,  5084,  5085,
    5086,  5087,  5091,  5095,  5096,  5097,  5101,  5102,  5103,  5104,
    5105,  5106,  5107,  5111,  5115,  5116,  5117,  5121,  5122,  5123,
    5128,  5136,  5144,  5152,  5165,  5178,  5183,  5188,  5196,  5204,
    5212,  5220,  5228,  5236,  5244,  5254,  5264,  5274,  5276,  5280,
    5285,  5295,  5296,  5309,  5308,  5311,  5312,  5326,  5327,  5331,
    5332,  5336,  5341,  5352,  5389,  5390,  5395,  5394,  5410,  5425,
    5424,  5447,  5446,  5452,  5460,  5459,  5462,  5464,  5467,  5466,
    5475,  5478,  5477,  5486,  5487,  5493,  5494,  5511,  5512,  5516,
    5517,  5521,  5535,  5545,  5556,  5565,  5566,  5579,  5581,  5580,
    5585,  5583,  5594,  5595,  5599,  5613,  5625,  5626,  5639,  5648,
    5670,  5671,  5676,  5675,  5699,  5711,  5727,  5726,  5741,  5740,
    5754,  5759,  5764,  5784,  5802,  5806,  5833,  5845,  5846,  5851,
    5860,  5850,  5885,  5886,  5890,  5901,  5920,  5933,  5959,  5960,
    5965,  5964,  6001,  6010,  6011,  6015,  6016,  6020,  6022,  6028,
    6034,  6036,  6038,  6040,  6042,  6044,  6049,  6050,  6056,  6072,
    6075,  6092,  6093,  6097,  6098,  6102,  6103,  6107,  6108,  6113,
    6116,  6124,  6127,  6134,  6138,  6144,  6146,  6150,  6151,  6155,
    6156,  6157,  6161,  6176,  6181,  6186,  6191,  6196,  6201,  6206,
    6221,  6227,  6242,  6247,  6262,  6268,  6286,  6291,  6296,  6301,
    6306,  6311,  6317,  6316,  6342,  6343,  6344,  6349,  6354,  6359,
    6361,  6363,  6365,  6371,  6376,  6381,  6390,  6399,  6405,  6411,
    6416,  6419,  6421,  6425,  6444,  6452,  6467,  6477,  6488,  6489,
    6490,  6491,  6492,  6493,  6494,  6498,  6499,  6500,  6504,  6505,
    6506,  6507,  6512,  6519,  6526,  6527,  6531,  6532,  6533,  6534,
    6535,  6539,  6541,  6547,  6546,  6554,  6553,  6561,  6560,  6568,
    6567,  6577,  6574,  6585,  6583,  6592,  6591,  6630,  6638,  6646,
    6654,  6655,  6659,  6669,  6670,  6674,  6675,  6679,  6684,  6683,
    6721,  6721,  6724,  6723,  6733,  6734,  6738,  6739,  6743,  6744,
    6748,  6749,  6753,  6754,  6755,  6756,  6758,  6757,  6763,  6768,
    6776,  6777,  6782,  6785,  6789,  6793,  6800,  6801,  6805,  6806,
    6810,  6816,  6822,  6823,  6831,  6830,  6852,  6853,  6863,  6871,
    6883,  6883,  6886,  6887,  6895,  6899,  6907,  6908,  6909,  6910,
    6911,  6916,  6917,  6918,  6919,  6920,  6925,  6926,  6927,  6943,
    6947,  6951,  6955,  6957,  6964,  6966,  6971,  6973,  6974,  6975,
    6979,  6983,  6988,  6993,  6997,  7001,  7006,  7011,  7020,  7024,
    7029,  7034,  7038,  7042,  7047,  7052,  7061,  7079,  7080,  7087,
    7094,  7102,  7107,  7112,  7117,  7122,  7133,  7138,  7143,  7148,
    7150,  7152,  7154,  7156,  7158,  7160,  7162,  7170,  7172,  7177,
    7178,  7179,  7180,  7181,  7182,  7183,  7184,  7188,  7192,  7193,
    7197,  7198,  7202,  7203,  7204,  7205,  7206,  7210,  7211,  7212,
    7213,  7214,  7218,  7224,  7225,  7230,  7232,  7239,  7240,  7241,
    7245,  7249,  7250,  7251,  7252,  7253,  7254,  7258,  7259,  7260,
    7261,  7265,  7266,  7270,  7271,  7292,  7293,  7297,  7298,  7302,
    7303,  7308,  7309,  7313,  7314,  7315,  7322,  7323,  7329,  7336,
    7340,  7341,  7345,  7346,  7350,  7358,  7366,  7375,  7379,  7385,
    7389,  7390,  7399,  7408,  7414,  7420,  7433,  7439,  7449,  7463,
    7477,  7478,  7482,  7487,  7491,  7492,  7496,  7497,  7501,  7508,
    7512,  7513,  7517,  7525,  7526,  7530,  7531,  7535,  7536,  7540,
    7541,  7542,  7550,  7551,  7555,  7556,  7557,  7558,  7562,  7563,
    7568,  7567,  7580,  7581,  7585,  7588,  7589,  7590,  7591,  7595,
    7603,  7610,  7611,  7615,  7625,  7626,  7630,  7631,  7634,  7636,
    7640,  7652,  7653,  7657,  7664,  7677,  7678,  7680,  7682,  7688,
    7693,  7699,  7705,  7712,  7722,  7723,  7724,  7725,  7726,  7730,
    7731,  7735,  7736,  7740,  7741,  7745,  7746,  7747,  7751,  7752,
    7756,  7760,  7772,  7773,  7777,  7778,  7782,  7783,  7787,  7788,
    7792,  7793,  7797,  7798,  7802,  7803,  7808,  7809,  7810,  7814,
    7816,  7821,  7826,  7828,  7836,  7844,  7850,  7859,  7860,  7864,
    7868,  7869,  7879,  7880,  7881,  7885,  7889,  7896,  7902,  7914,
    7915,  7919,  7921,  7931,  7947,  7930,  7969,  7968,  7985,  7994,
    7993,  8014,  8013,  8034,  8033,  8052,  8046,  8065,  8064,  8103,
    8108,  8113,  8118,  8124,  8123,  8130,  8137,  8149,  8136,  8171,
    8172,  8176,  8182,  8183,  8187,  8191,  8195,  8204,  8205,  8206,
    8207,  8211,  8212,  8224,  8225,  8229,  8230,  8233,  8235,  8243,
    8251,  8253,  8255,  8256,  8264,  8265,  8271,  8280,  8278,  8291,
    8304,  8303,  8316,  8314,  8327,  8334,  8344,  8345,  8354,  8361,
    8365,  8371,  8369,  8386,  8388,  8393,  8401,  8400,  8414,  8418,
    8417,  8429,  8430,  8434,  8447,  8448,  8452,  8456,  8463,  8468,
    8472,  8479,  8486,  8490,  8495,  8503,  8511,  8521,  8532,  8542,
    8553,  8563,  8569,  8575,  8582,  8588,  8602,  8616,  8621,  8625,
    8630,  8631,  8632,  8637,  8642,  8646,  8656,  8658,  8659,  8660,
    8661,  8665,  8670,  8678,  8683,  8691,  8692,  8696,  8697,  8701,
    8701,  8704,  8706,  8710,  8711,  8715,  8716,  8724,  8725,  8726,
    8730,  8731,  8736,  8745,  8746,  8747,  8748,  8753,  8752,  8762,
    8761,  8769,  8776,  8786,  8803,  8806,  8813,  8817,  8824,  8828,
    8832,  8839,  8839,  8845,  8846,  8850,  8851,  8852,  8856,  8857,
    8866,  8873,  8874,  8879,  8878,  8890,  8891,  8892,  8896,  8898,
    8897,  8904,  8903,  8924,  8925,  8929,  8930,  8934,  8935,  8936,
    8940,  8941,  8946,  8945,  8966,  8967,  8971,  8976,  8977,  8984,
    8986,  8991,  8993,  8992,  9005,  9007,  9006,  9020,  9021,  9026,
    9035,  9036,  9037,  9041,  9048,  9058,  9066,  9075,  9077,  9076,
    9082,  9081,  9104,  9105,  9109,  9110,  9114,  9115,  9116,  9117,
    9118,  9119,  9123,  9124,  9129,  9128,  9149,  9150,  9151,  9156,
    9155,  9165,  9172,  9178,  9187,  9188,  9192,  9208,  9207,  9220,
    9221,  9225,  9226,  9230,  9241,  9252,  9253,  9258,  9257,  9272,
    9273,  9277,  9278,  9282,  9293,  9305,  9304,  9312,  9312,  9321,
    9322,  9327,  9328,  9337,  9336,  9351,  9350,  9370,  9369,  9386,
    9384,  9406,  9407,  9412,  9411,  9425,  9435,  9424,  9445,  9457,
    9521,  9526,  9541,  9542,  9557,  9556,  9572,  9571,  9584,  9586,
    9601,  9609,  9607,  9623,  9641,  9643,  9653,  9657,  9698,  9707,
    9717,  9718,  9722,  9726,  9732,  9739,  9741,  9750,  9754,  9758,
    9765,  9774,  9778,  9785,  9802,  9805,  9813,  9816,  9823,  9827,
    9831,  9835,  9842,  9843,  9847,  9848,  9857,  9870,  9876,  9886,
    9889,  9897,  9900,  9905,  9913,  9914,  9915,  9929,  9934,  9956,
    9962,  9968,  9974,  9983,  9984,  9985,  9986,  9987,  9991,  9992,
    9993,  9997,  9998,  9999, 10003, 10004, 10009, 10060, 10067, 10110,
   10116, 10122, 10128, 10134, 10140, 10146, 10152, 10158, 10164, 10168,
   10174, 10180, 10186, 10190, 10196, 10205, 10211, 10219, 10225, 10234,
   10240, 10248, 10258, 10264, 10271, 10278, 10286, 10292, 10301, 10305,
   10311, 10317, 10323, 10329, 10336, 10342, 10348, 10354, 10360, 10367,
   10373, 10379, 10385, 10391, 10397, 10403, 10409, 10415, 10419, 10420,
   10424, 10425, 10429, 10430, 10434, 10435, 10439, 10440, 10441, 10442,
   10443, 10444, 10448, 10449, 10454, 10458, 10462, 10463, 10464, 10468,
   10469, 10470, 10471, 10472, 10473, 10477, 10478, 10479, 10484, 10483,
   10489, 10497, 10520, 10527, 10536, 10537, 10538, 10539, 10543, 10552,
   10553, 10554, 10555, 10556, 10557, 10558, 10559, 10591, 10592, 10593,
   10594, 10595, 10596, 10597, 10598, 10599, 10607, 10615, 10616, 10623,
   10629, 10634, 10644, 10649, 10654, 10660, 10665, 10671, 10682, 10689,
   10694, 10699, 10704, 10709, 10714, 10719, 10727, 10728, 10729, 10730,
   10738, 10739, 10747, 10748, 10754, 10758, 10764, 10770, 10779, 10780,
   10789, 10796, 10810, 10816, 10822, 10831, 10840, 10846, 10852, 10858,
   10864, 10879, 10890, 10896, 10902, 10908, 10914, 10920, 10928, 10935,
   10939, 10944, 10952, 10973, 10980, 10986, 10993, 11000, 11006, 11012,
   11018, 11024, 11030, 11036, 11042, 11048, 11055, 11061, 11068, 11074,
   11079, 11084, 11089, 11094, 11112, 11118, 11124, 11129, 11136, 11143,
   11151, 11158, 11165, 11172, 11179, 11196, 11202, 11208, 11214, 11220,
   11227, 11233, 11239, 11248, 11259, 11266, 11272, 11278, 11285, 11293,
   11299, 11305, 11310, 11316, 11324, 11330, 11336, 11342, 11348, 11356,
   11368, 11375, 11390, 11396, 11403, 11410, 11417, 11424, 11431, 11435,
   11442, 11460, 11459, 11527, 11535, 11537, 11542, 11543, 11547, 11548,
   11552, 11553, 11557, 11564, 11572, 11599, 11605, 11611, 11617, 11623,
   11629, 11638, 11645, 11647, 11644, 11654, 11665, 11671, 11677, 11683,
   11689, 11695, 11701, 11707, 11713, 11720, 11719, 11744, 11753, 11771,
   11773, 11778, 11795, 11802, 11809, 11816, 11823, 11830, 11837, 11844,
   11851, 11858, 11869, 11876, 11887, 11898, 11918, 11917, 11923, 11940,
   11946, 11955, 11964, 11974, 11973, 11985, 11995, 12003, 12008, 12016,
   12017, 12022, 12027, 12030, 12032, 12036, 12041, 12049, 12050, 12054,
   12058, 12065, 12072, 12079, 12092, 12091, 12108, 12111, 12110, 12115,
   12114, 12119, 12118, 12122, 12127, 12128, 12132, 12133, 12134, 12135,
   12136, 12137, 12138, 12139, 12143, 12144, 12145, 12146, 12153, 12154,
   12158, 12163, 12171, 12172, 12176, 12183, 12191, 12200, 12210, 12211,
   12220, 12229, 12241, 12242, 12254, 12265, 12266, 12272, 12277, 12291,
   12299, 12297, 12317, 12315, 12328, 12340, 12338, 12358, 12357, 12369,
   12382, 12380, 12401, 12400, 12413, 12427, 12428, 12429, 12433, 12434,
   12442, 12443, 12447, 12456, 12457, 12458, 12463, 12467, 12468, 12472,
   12473, 12477, 12478, 12486, 12494, 12502, 12503, 12516, 12534, 12544,
   12545, 12550, 12553, 12554, 12555, 12559, 12560, 12565, 12564, 12570,
   12569, 12577, 12578, 12581, 12583, 12583, 12587, 12587, 12592, 12593,
   12597, 12599, 12604, 12605, 12609, 12620, 12634, 12635, 12636, 12637,
   12638, 12639, 12640, 12641, 12642, 12643, 12644, 12645, 12649, 12650,
   12651, 12652, 12653, 12654, 12655, 12656, 12657, 12661, 12662, 12663,
   12664, 12667, 12669, 12670, 12674, 12675, 12679, 12687, 12689, 12693,
   12695, 12694, 12708, 12711, 12710, 12728, 12730, 12734, 12739, 12747,
   12748, 12765, 12788, 12789, 12795, 12796, 12800, 12813, 12812, 12821,
   12822, 12831, 12832, 12836, 12837, 12841, 12842, 12856, 12857, 12861,
   12871, 12880, 12887, 12894, 12904, 12905, 12912, 12922, 12923, 12925,
   12927, 12929, 12931, 12940, 12944, 12945, 12949, 12963, 12964, 12970,
   12969, 12980, 12986, 12995, 12996, 12997, 13002, 13003, 13008, 13015,
   13021, 13031, 13040, 13046, 13052, 13061, 13066, 13071, 13075, 13081,
   13087, 13096, 13105, 13109, 13116, 13117, 13121, 13126, 13131, 13143,
   13147, 13151, 13155, 13160, 13163, 13167, 13181, 13189, 13202, 13204,
   13208, 13209, 13213, 13214, 13215, 13216, 13217, 13218, 13222, 13223,
   13224, 13225, 13226, 13230, 13231, 13232, 13233, 13237, 13238, 13239,
   13240, 13241, 13245, 13246, 13247, 13248, 13249, 13253, 13258, 13259,
   13263, 13264, 13268, 13269, 13270, 13275, 13274, 13306, 13307, 13311,
   13312, 13316, 13326, 13326, 13338, 13339, 13342, 13362, 13366, 13371,
   13379, 13385, 13396, 13384, 13398, 13413, 13425, 13424, 13445, 13444,
   13454, 13453, 13476, 13482, 13490, 13498, 13512, 13527, 13535, 13539,
   13544, 13543, 13552, 13557, 13563, 13568, 13573, 13580, 13578, 13592,
   13593, 13597, 13609, 13622, 13623, 13627, 13641, 13645, 13654, 13657,
   13664, 13665, 13673, 13684, 13672, 13699, 13709, 13698, 13724, 13732,
   13733, 13740, 13744, 13745, 13754, 13755, 13759, 13759, 13772, 13773,
   13775, 13774, 13787, 13793, 13795, 13799, 13801, 13807, 13811, 13812,
   13816, 13817, 13821, 13831, 13832, 13836, 13837, 13841, 13842, 13846,
   13847, 13852, 13851, 13867, 13866, 13881, 13882, 13886, 13887, 13891,
   13896, 13904, 13912, 13923, 13924, 13930, 13938, 13940, 13942, 13940,
   13952, 13966, 13973, 13983, 13972, 14012, 14013, 14017, 14026, 14027,
   14031, 14041, 14042, 14049, 14048, 14065, 14068, 14075, 14076, 14084,
   14099, 14107, 14118, 14117, 14132, 14131, 14147, 14149, 14153, 14154,
   14158, 14173, 14191, 14192, 14196, 14197, 14201, 14202, 14203, 14208,
   14219, 14207, 14229, 14231, 14232, 14235, 14237, 14240, 14242, 14245,
   14246, 14249, 14253, 14257, 14261, 14265, 14269, 14273, 14277, 14281,
   14289, 14292, 14302, 14301, 14320, 14327, 14335, 14343, 14351, 14359,
   14367, 14374, 14381, 14387, 14389, 14391, 14400, 14404, 14409, 14408,
   14415, 14414, 14420, 14429, 14436, 14441, 14446, 14451, 14456, 14461,
   14463, 14465, 14467, 14474, 14482, 14484, 14492, 14499, 14506, 14514,
   14520, 14525, 14533, 14541, 14549, 14553, 14558, 14565, 14570, 14577,
   14584, 14590, 14596, 14602, 14610, 14615, 14622, 14629, 14636, 14643,
   14648, 14653, 14658, 14663, 14670, 14692, 14694, 14696, 14701, 14702,
   14705, 14707, 14711, 14712, 14716, 14717, 14721, 14722, 14726, 14727,
   14731, 14732, 14736, 14737, 14745, 14757, 14756, 14775, 14774, 14784,
   14785, 14786, 14787, 14788, 14789, 14793, 14794, 14798, 14805, 14806,
   14808, 14809, 14813, 14814, 14827, 14828, 14829, 14844, 14843, 14855,
   14854, 14866, 14871, 14872, 14887, 14890, 14889, 14902, 14903, 14908,
   14910, 14912, 14914, 14916, 14918, 14926, 14928, 14930, 14932, 14937,
   14939, 14947, 14949, 14951, 14953, 14955, 14972, 14973, 14977, 14981,
   14994, 14993, 15006, 15014, 15015, 15018, 15020, 15021, 15025, 15041,
   15042, 15047, 15046, 15056, 15057, 15061, 15061, 15065, 15064, 15070,
   15074, 15075, 15079, 15080, 15087, 15092, 15091, 15106, 15105, 15120,
   15121, 15122, 15126, 15127, 15128, 15129, 15137, 15141, 15150, 15150,
   15155, 15156, 15164, 15176, 15190, 15201, 15214, 15175, 15227, 15228,
   15232, 15233, 15237, 15238, 15246, 15250, 15251, 15252, 15255, 15257,
   15261, 15262, 15266, 15271, 15278, 15283, 15290, 15292, 15296, 15297,
   15301, 15306, 15314, 15315, 15319, 15321, 15329, 15330, 15334, 15335,
   15336, 15340, 15342, 15347, 15348, 15357, 15358, 15362, 15363, 15367,
   15380, 15385, 15390, 15395, 15403, 15411, 15416, 15424, 15432, 15447,
   15454, 15460, 15470, 15471, 15479, 15480, 15481, 15482, 15496, 15502,
   15508, 15514, 15520, 15526, 15545, 15555, 15565, 15571, 15578, 15588,
   15595, 15602, 15613, 15612, 15635, 15636, 15641, 15642, 15649, 15647,
   15673, 15674, 15680, 15685, 15694, 15709, 15710, 15714, 15719, 15727,
   15732, 15740, 15745, 15750, 15755, 15761, 15766, 15774, 15779, 15784,
   15789, 15795, 15803, 15804, 15815, 15823, 15827, 15833, 15839, 15849,
   15855, 15864, 15874, 15875, 15879, 15880, 15881, 15885, 15893, 15901,
   15909, 15917, 15918, 15926, 15927, 15935, 15936, 15941, 15950, 15951,
   15959, 15960, 15969, 15970, 15978, 15979, 15983, 15992, 15993, 15994,
   15998, 16009, 16038, 16047, 16047, 16049, 16059, 16060, 16061, 16062,
   16063, 16064, 16065, 16066, 16067, 16072, 16073, 16074, 16075, 16076,
   16077, 16078, 16079, 16080, 16081, 16089, 16090, 16091, 16092, 16093,
   16094, 16098, 16099, 16100, 16101, 16102, 16103, 16104, 16105, 16106,
   16110, 16111, 16112, 16113, 16114, 16115, 16116, 16120, 16121, 16122,
   16123, 16124, 16125, 16126, 16127, 16128, 16132, 16133, 16134, 16135,
   16136, 16137, 16138, 16151, 16152, 16153, 16154, 16155, 16156, 16157,
   16158, 16159, 16160, 16161, 16162, 16163, 16164, 16165, 16166, 16167,
   16168, 16169, 16170, 16171, 16172, 16173, 16174, 16175, 16176, 16177,
   16178, 16179, 16180, 16181, 16182, 16183, 16184, 16185, 16186, 16187,
   16188, 16189, 16190, 16191, 16192, 16193, 16194, 16195, 16196, 16197,
   16198, 16199, 16200, 16201, 16202, 16203, 16204, 16205, 16246, 16247,
   16248, 16249, 16250, 16251, 16262, 16263, 16264, 16265, 16266, 16267,
   16268, 16269, 16270, 16271, 16275, 16276, 16277, 16284, 16285, 16286,
   16290, 16291, 16292, 16301, 16302, 16303, 16304, 16305, 16306, 16307,
   16308, 16309, 16310, 16311, 16312, 16313, 16314, 16315, 16316, 16317,
   16318, 16319, 16320, 16321, 16322, 16323, 16324, 16325, 16326, 16327,
   16328, 16329, 16330, 16331, 16332, 16333, 16334, 16342, 16343, 16344,
   16345, 16346, 16347, 16348, 16349, 16350, 16351, 16352, 16353, 16354,
   16355, 16356, 16357, 16358, 16359, 16360, 16361, 16362, 16363, 16364,
   16365, 16366, 16367, 16368, 16369, 16370, 16371, 16372, 16373, 16374,
   16375, 16376, 16377, 16378, 16379, 16380, 16381, 16382, 16383, 16384,
   16385, 16386, 16387, 16388, 16393, 16394, 16395, 16396, 16397, 16398,
   16399, 16400, 16401, 16402, 16403, 16404, 16405, 16406, 16407, 16408,
   16409, 16410, 16411, 16412, 16413, 16414, 16415, 16416, 16417, 16418,
   16419, 16420, 16421, 16422, 16423, 16424, 16425, 16426, 16427, 16428,
   16429, 16430, 16431, 16432, 16433, 16434, 16435, 16436, 16437, 16438,
   16439, 16440, 16441, 16442, 16443, 16444, 16445, 16446, 16447, 16448,
   16449, 16450, 16451, 16452, 16453, 16454, 16455, 16456, 16457, 16458,
   16459, 16460, 16461, 16462, 16463, 16464, 16465, 16466, 16467, 16468,
   16469, 16470, 16471, 16472, 16473, 16474, 16475, 16476, 16477, 16478,
   16479, 16480, 16481, 16482, 16483, 16484, 16485, 16486, 16487, 16488,
   16489, 16490, 16491, 16492, 16493, 16494, 16495, 16496, 16497, 16498,
   16499, 16500, 16501, 16502, 16503, 16504, 16505, 16506, 16507, 16508,
   16509, 16510, 16511, 16512, 16513, 16514, 16515, 16516, 16517, 16518,
   16519, 16520, 16521, 16522, 16523, 16524, 16525, 16526, 16527, 16528,
   16529, 16530, 16531, 16532, 16533, 16534, 16535, 16536, 16537, 16538,
   16539, 16540, 16541, 16542, 16543, 16544, 16545, 16546, 16547, 16548,
   16549, 16550, 16551, 16552, 16553, 16554, 16555, 16556, 16557, 16558,
   16559, 16560, 16561, 16562, 16563, 16564, 16565, 16566, 16567, 16568,
   16569, 16570, 16571, 16572, 16573, 16574, 16575, 16576, 16577, 16578,
   16579, 16580, 16581, 16582, 16583, 16584, 16585, 16586, 16587, 16588,
   16589, 16590, 16591, 16592, 16593, 16594, 16595, 16596, 16597, 16598,
   16599, 16600, 16601, 16602, 16603, 16604, 16605, 16606, 16607, 16608,
   16609, 16610, 16611, 16612, 16613, 16614, 16615, 16616, 16617, 16618,
   16619, 16620, 16621, 16622, 16623, 16624, 16625, 16626, 16627, 16628,
   16629, 16630, 16631, 16632, 16633, 16634, 16635, 16636, 16637, 16638,
   16639, 16640, 16641, 16642, 16643, 16644, 16645, 16646, 16647, 16648,
   16649, 16650, 16651, 16652, 16653, 16654, 16655, 16656, 16657, 16658,
   16659, 16660, 16661, 16673, 16672, 16689, 16695, 16688, 16711, 16710,
   16725, 16724, 16741, 16740, 16768, 16769, 16775, 16774, 16781, 16780,
   16790, 16789, 16800, 16799, 16805, 16813, 16815, 16820, 16820, 16830,
   16829, 16844, 16843, 16848, 16852, 16853, 16854, 16858, 16859, 16860,
   16861, 16865, 16866, 16867, 16868, 16873, 16878, 16883, 16892, 16897,
   16902, 16907, 16912, 16917, 16922, 16927, 16941, 16952, 16971, 16989,
   17001, 17009, 17014, 17030, 17031, 17032, 17033, 17037, 17056, 17074,
   17075, 17079, 17080, 17081, 17082, 17086, 17100, 17104, 17109, 17114,
   17125, 17126, 17127, 17133, 17139, 17151, 17150, 17164, 17165, 17171,
   17180, 17181, 17185, 17186, 17190, 17209, 17210, 17211, 17216, 17217,
   17222, 17221, 17239, 17238, 17250, 17259, 17269, 17268, 17309, 17310,
   17314, 17315, 17319, 17320, 17321, 17322, 17324, 17323, 17336, 17337,
   17338, 17339, 17340, 17346, 17351, 17357, 17363, 17369, 17376, 17383,
   17387, 17394, 17403, 17405, 17410, 17415, 17422, 17429, 17436, 17443,
   17450, 17457, 17469, 17470, 17474, 17475, 17479, 17484, 17492, 17502,
   17521, 17524, 17526, 17530, 17531, 17538, 17540, 17544, 17545, 17550,
   17549, 17553, 17552, 17556, 17555, 17559, 17558, 17561, 17562, 17563,
   17564, 17565, 17566, 17567, 17568, 17569, 17570, 17571, 17572, 17573,
   17574, 17575, 17576, 17577, 17578, 17579, 17580, 17581, 17582, 17583,
   17584, 17585, 17586, 17587, 17591, 17592, 17596, 17597, 17601, 17608,
   17615, 17625, 17635, 17644, 17653, 17666, 17671, 17679, 17684, 17692,
   17697, 17704, 17704, 17705, 17705, 17708, 17714, 17720, 17725, 17732,
   17738, 17745, 17754, 17758, 17764, 17774, 17778, 17782, 17783, 17787,
   17815, 17817, 17821, 17825, 17829, 17836, 17841, 17846, 17851, 17856,
   17864, 17865, 17869, 17870, 17875, 17876, 17880, 17881, 17885, 17886,
   17890, 17891, 17896, 17895, 17905, 17914, 17915, 17919, 17920, 17925,
   17926, 17927, 17932, 17933, 17934, 17938, 17950, 17959, 17965, 17974,
   17983, 17996, 17998, 18000, 18008, 18009, 18010, 18014, 18015, 18021,
   18022, 18023, 18024, 18025, 18026, 18027, 18037, 18038, 18043, 18056,
   18070, 18071, 18072, 18076, 18077, 18081, 18082, 18087, 18088, 18092,
   18098, 18107, 18107, 18121, 18122, 18123, 18124, 18134, 18136, 18142,
   18148, 18158, 18167, 18173, 18178, 18182, 18156, 18230, 18230, 18246,
   18245, 18261, 18269, 18260, 18284, 18285, 18289, 18290, 18296, 18300,
   18304, 18308, 18312, 18316, 18324, 18325, 18341, 18348, 18355, 18365,
   18366, 18367, 18371, 18372, 18373, 18377, 18378, 18383, 18385, 18384,
   18390, 18391, 18395, 18400, 18407, 18412, 18421
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ADD",
  "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "AS", "ASC",
  "ASENSITIVE_SYM", "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY",
  "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_XOR", "BLOB_MARIADB_SYM",
  "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM", "BOTH", "BY", "CALL_SYM",
  "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE", "CHAR_SYM", "CHECK_SYM",
  "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT", "CONTINUE_MARIADB_SYM",
  "CONTINUE_ORACLE_SYM", "CONVERT_SYM", "COUNT_SYM", "CREATE", "CROSS",
  "CUME_DIST_SYM", "CURDATE", "CURRENT_USER", "CURRENT_ROLE", "CURSOR_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_NUM", "DECIMAL_SYM",
  "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESC",
  "DESCRIBE", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM",
  "DO_DOMAIN_IDS_SYM", "DOT_DOT_SYM", "DROP", "DUAL_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_MARIADB_SYM", "ELSIF_ORACLE_SYM", "ENCLOSED",
  "END_OF_INPUT", "EQUAL_SYM", "ESCAPED", "EXCEPT_SYM", "EXISTS",
  "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM", "FIRST_VALUE_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FOREIGN", "FOR_SYM", "FOR_SYSTEM_TIME_SYM", "FROM",
  "FULLTEXT_SYM", "GE", "GOTO_ORACLE_SYM", "GRANT", "GROUP_SYM",
  "GROUP_CONCAT_SYM", "LAG_SYM", "LEAD_SYM", "HAVING", "HEX_NUM",
  "HEX_STRING", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "IDENT", "IDENT_QUOTED", "IF_SYM",
  "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "INTERSECT_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "IN_SYM", "IS", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM", "LE", "LEADING", "LEAVE_SYM",
  "LEFT", "LEFT_PAREN_ALT", "LEFT_PAREN_WITH", "LEFT_PAREN_LIKE",
  "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LOAD",
  "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MIN_SYM", "MODIFIES_SYM",
  "MOD_SYM", "MYSQL_CONCAT_SYM", "NATURAL", "NCHAR_STRING", "NE", "NEG",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_WRITE_TO_BINLOG", "NTILE_SYM",
  "NULL_SYM", "NUM", "NUMERIC_SYM", "NTH_VALUE_SYM", "ON", "OPTIMIZE",
  "OPTIONALLY", "ORACLE_CONCAT_SYM", "OR2_SYM", "ORDER_SYM", "OR_SYM",
  "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARAM_MARKER",
  "PARSE_VCOL_EXPR_SYM", "PARTITION_SYM", "PERCENT_ORACLE_SYM",
  "PERCENT_RANK_SYM", "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM",
  "PORTION_SYM", "POSITION_SYM", "PRECISION", "PRIMARY_SYM",
  "PROCEDURE_SYM", "PURGE", "RAISE_ORACLE_SYM", "RANGE_SYM", "RANK_SYM",
  "READS_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "RECURSIVE_SYM",
  "REF_SYSTEM_ID_SYM", "REFERENCES", "REGEXP", "RELEASE_SYM", "RENAME",
  "REPEAT_SYM", "REPLACE", "REQUIRE_SYM", "RESIGNAL_SYM", "RESTRICT",
  "RETURNING_SYM", "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM", "REVOKE",
  "RIGHT", "ROWS_SYM", "ROWTYPE_ORACLE_SYM", "ROW_NUMBER_SYM",
  "SECOND_MICROSECOND_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERVER_OPTIONS", "SET", "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW",
  "SIGNAL_SYM", "SMALLINT", "SPATIAL_SYM", "SPECIFIC_SYM",
  "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM", "SQL_BIG_RESULT",
  "SQL_SMALL_RESULT", "SQL_SYM", "SSL_SYM", "STARTING",
  "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUBSTRING", "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TERMINATED", "TEXT_STRING", "THEN_SYM", "TINYBLOB", "TINYINT",
  "TINYTEXT", "TO_SYM", "TRAILING", "TRIGGER_SYM", "TRIM", "TRUE_SYM",
  "ULONGLONG_NUM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNION_SYM",
  "UNIQUE_SYM", "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM",
  "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES",
  "VALUES_IN_SYM", "VALUES_LESS_SYM", "VARBINARY", "VARCHAR",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM",
  "WITH_SYSTEM_SYM", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "IMPOSSIBLE_ACTION", "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM",
  "ELSIF_MARIADB_SYM", "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM",
  "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM",
  "ROWTYPE_MARIADB_SYM", "ACCOUNT_SYM", "ACTION", "ADMIN_SYM",
  "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM",
  "ALWAYS_SYM", "ANY_SYM", "ASCII_SYM", "AT_SYM", "ATOMIC_SYM",
  "AUTHORS_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM",
  "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM",
  "BEGIN_ORACLE_SYM", "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM",
  "BOOLEAN_SYM", "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGED", "CHARSET", "CHECKPOINT_SYM",
  "CHECKSUM_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM",
  "CLOB_MARIADB_SYM", "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE",
  "CODE_SYM", "COLLATION_SYM", "COLON_ORACLE_SYM", "COLUMNS",
  "COLUMN_ADD_SYM", "COLUMN_CHECK_SYM", "COLUMN_CREATE_SYM",
  "COLUMN_DELETE_SYM", "COLUMN_GET_SYM", "COLUMN_SYM", "COLUMN_NAME_SYM",
  "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM",
  "COMPLETION_SYM", "COMPRESSED_SYM", "CONCURRENT", "CONNECTION_SYM",
  "CONSISTENT_SYM", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM",
  "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM", "CURRENT_SYM",
  "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_FORMAT_SYM", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DECODE_MARIADB_SYM", "DECODE_ORACLE_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DES_KEY_FILE",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DO_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "ENABLE_SYM",
  "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "ERROR_SYM",
  "ERRORS", "ESCAPE_SYM", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM",
  "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM", "EXECUTE_SYM",
  "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM", "EXIT_ORACLE_SYM",
  "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "FAST_SYM", "FAULTS_SYM", "FILE_SYM", "FIRST_SYM",
  "FIXED_SYM", "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FULL", "FUNCTION_SYM", "GENERAL",
  "GENERATED_SYM", "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT",
  "GET_SYM", "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LINESTRING", "LIST_SYM", "LOCAL_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONTH_SYM",
  "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM",
  "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NCHAR_SYM", "NEVER_SYM", "NEW_SYM", "NEXT_SYM", "NEXTVAL_SYM",
  "NOCACHE_SYM", "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOTFOUND_SYM", "NO_SYM", "NOMAXVALUE_SYM", "NOMINVALUE_SYM",
  "NO_WAIT_SYM", "NOWAIT_SYM", "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM",
  "NVARCHAR_SYM", "OF_SYM", "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM",
  "ONLY_SYM", "ONLINE_SYM", "OPEN_SYM", "OPTIONS_SYM", "OPTION",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARSER_SYM", "PARTIAL",
  "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD_SYM", "PERIOD_SYM",
  "PERSISTENT_SYM", "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM", "POINT_SYM",
  "POLYGON", "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STAGE_SYM", "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM",
  "SWITCHES_SYM", "SYSTEM", "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TEXT_SYM", "THAN_SYM", "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD",
  "TIMESTAMP_DIFF", "TIME_SYM", "TRANSACTION_SYM", "TRANSACTIONAL_SYM",
  "TRIGGERS_SYM", "TRIM_ORACLE", "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM",
  "UDF_RETURNS_SYM", "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM",
  "UNDOFILE_SYM", "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNKNOWN_SYM", "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM",
  "VALUE_SYM", "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VIRTUAL_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM", "WITHIN",
  "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM",
  "XML_SYM", "YEAR_SYM", "CONDITIONLESS_JOIN", "ON_SYM", "PREC_BELOW_NOT",
  "'='", "'>'", "'<'", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "SUBQUERY_AS_EXPR",
  "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_CONTRACTION_TOKEN2", "'('", "')'", "EMPTY_FROM_CLAUSE",
  "','", "'!'", "'{'", "'}'", "';'", "'.'", "'@'", "$accept", "query",
  "$@1", "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "$@2", "execute", "$@3", "$@4",
  "execute_using", "$@5", "execute_params", "help", "$@6", "change", "$@7",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "do_domain_id_list", "do_domain_id", "ignore_domain_id_list",
  "ignore_domain_id", "master_file_def", "optional_connection_name",
  "connection_name", "create", "$@8", "$@9", "$@10", "$@11", "$@12",
  "$@13", "$@14", "$@15", "$@16", "$@17", "$@18", "$@19", "$@20", "$@21",
  "$@22", "$@23", "$@24", "$@25", "$@26", "$@27", "$@28", "$@29", "$@30",
  "$@31", "package_implementation_executable_section",
  "package_implementation_declare_section",
  "package_implementation_declare_section_list1",
  "package_implementation_declare_section_list2", "package_routine_lex",
  "package_specification_function", "$@32",
  "package_specification_procedure", "$@33",
  "package_implementation_routine_definition",
  "package_implementation_function_body", "$@34",
  "package_implementation_procedure_body", "$@35",
  "package_implementation_item_declaration",
  "opt_package_specification_element_list",
  "package_specification_element_list", "package_specification_element",
  "opt_sequence", "sequence_defs", "sequence_def", "server_def", "$@36",
  "server_options_list", "server_option", "event_tail", "$@37",
  "ev_schedule_time", "$@38", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@39", "clear_privileges", "opt_aggregate", "sp_name",
  "opt_sp_name", "sp_a_chistics", "sp_c_chistics", "sp_chistic",
  "create_package_chistic", "create_package_chistics",
  "opt_create_package_chistics", "opt_create_package_chistics_init",
  "$@40", "sp_c_chistic", "sp_suid", "call", "$@41", "opt_sp_cparam_list",
  "opt_sp_cparams", "sp_cparams", "sp_fdparam_list", "$@42", "sp_fdparams",
  "sp_param_name", "sp_param_name_and_type", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_parenthesized_pdparam_list", "$@43", "sp_no_param",
  "opt_sp_parenthesized_fdparam_list", "opt_sp_parenthesized_pdparam_list",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_proc_stmts1_implicit_block",
  "$@44", "opt_sp_decl_body_list", "sp_decl_body_list", "$@45",
  "sp_decl_non_handler_list", "sp_decl_handler_list",
  "opt_sp_decl_handler_list", "optionally_qualified_column_ident",
  "row_field_name", "row_field_definition", "row_field_definition_list",
  "row_type_body", "sp_decl_idents_init_vars", "sp_decl_vars",
  "sp_decl_non_handler", "$@46", "sp_decl_handler", "$@47",
  "opt_parenthesized_cursor_formal_parameters", "sp_cursor_stmt_lex",
  "sp_cursor_stmt", "$@48", "sp_handler_type", "sp_hcond_list",
  "sp_hcond_element", "sp_cond", "sqlstate", "opt_value", "sp_hcond",
  "raise_stmt_oracle", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_ident", "sp_decl_idents",
  "sp_opt_default", "sp_proc_stmt", "sp_labelable_stmt",
  "sp_proc_stmt_compound_ok", "sp_proc_stmt_if", "$@49", "sp_statement",
  "$@50", "$@51", "sp_proc_stmt_statement", "$@52", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "$@53", "reset_lex_expr", "$@54",
  "sp_proc_stmt_exit_oracle", "sp_proc_stmt_continue_oracle",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle",
  "remember_lex", "assignment_source_lex", "assignment_source_expr",
  "$@55", "for_loop_bound_expr", "$@56", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch", "sp_proc_stmt_close",
  "sp_fetch_list", "sp_if", "$@57", "$@58", "$@59", "sp_elseifs",
  "case_stmt_specification", "$@60", "case_stmt_body", "$@61", "$@62",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@63", "$@64", "searched_when_clause", "$@65",
  "$@66", "else_clause_opt", "sp_opt_label", "sp_block_label",
  "sp_labeled_block", "$@67", "$@68", "$@69", "opt_not_atomic",
  "sp_unlabeled_block", "$@70", "$@71", "$@72", "sp_instr_addr", "sp_body",
  "$@73", "$@74", "$@75", "sp_block_statements_and_exceptions", "$@76",
  "opt_exception_clause", "exception_handlers", "exception_handler",
  "$@77", "opt_sp_for_loop_direction", "sp_for_loop_index_and_bounds",
  "$@78", "sp_for_loop_bounds", "loop_body", "while_body", "$@79",
  "repeat_body", "$@80", "pop_sp_loop_label", "sp_labeled_control", "$@81",
  "$@82", "$@83", "$@84", "$@85", "$@86", "sp_unlabeled_control", "$@87",
  "$@88", "$@89", "$@90", "$@91", "trg_action_time", "trg_event",
  "change_tablespace_access", "change_tablespace_info", "tablespace_info",
  "opt_logfile_group_name", "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@92", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create_body",
  "$@93", "create_like", "opt_create_select",
  "create_select_query_expression", "opt_create_partitioning",
  "opt_partitioning", "partitioning", "$@94", "have_partitioning",
  "partition_entry", "$@95", "partition", "$@96", "part_type_def", "$@97",
  "$@98", "$@99", "opt_linear", "opt_key_algo", "part_field_list",
  "part_field_item_list", "part_field_item", "part_column_list",
  "part_func", "sub_part_func", "opt_num_parts", "opt_sub_part", "$@100",
  "$@101", "sub_part_field_list", "sub_part_field_item", "part_func_expr",
  "opt_num_subparts", "part_defs", "part_def_list", "part_definition",
  "$@102", "part_name", "opt_part_values", "$@103", "$@104",
  "part_func_max", "part_values_in", "part_value_list", "part_value_item",
  "$@105", "$@106", "part_value_item_list", "part_value_expr_item",
  "opt_sub_partition", "sub_part_list", "sub_part_definition", "$@107",
  "sub_name", "opt_part_options", "opt_part_option_list",
  "opt_part_option", "opt_versioning_rotation",
  "opt_versioning_interval_start", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option",
  "opt_if_not_exists_table_element", "opt_if_not_exists",
  "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@108", "opt_versioning_option",
  "versioning_option", "default_charset", "default_collation",
  "storage_engines", "known_storage_engines", "row_types",
  "merge_insert_types", "udf_type", "create_field_list",
  "create_field_list_parens", "field_list", "field_list_item",
  "column_def", "key_def", "$@109", "$@110", "$@111", "$@112", "$@113",
  "$@114", "$@115", "constraint_def", "period_for_system_time",
  "period_for_application_time", "opt_check_constraint",
  "check_constraint", "opt_constraint_no_id", "opt_constraint",
  "constraint", "field_spec", "@116", "field_type_or_serial", "$@117",
  "$@118", "opt_serial_attribute", "opt_serial_attribute_list",
  "opt_asrow_attribute", "opt_asrow_attribute_list", "field_def", "$@119",
  "opt_generated_always", "vcol_opt_specifier", "vcol_opt_attribute",
  "vcol_opt_attribute_list", "vcol_attribute", "parse_vcol_expr", "$@120",
  "parenthesized_expr", "virtual_column_func", "expr_or_literal",
  "column_default_expr", "qualified_field_type", "field_type",
  "sp_param_field_type", "field_type_numeric",
  "opt_binary_and_compression", "field_type_string",
  "sp_param_field_type_string", "field_type_temporal", "field_type_lob",
  "field_type_misc", "spatial_type", "char", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "srid_option", "float_options",
  "precision", "field_options", "field_length", "opt_field_length",
  "opt_field_length_default_1",
  "opt_field_length_default_sp_param_varchar",
  "opt_field_length_default_sp_param_char", "opt_precision",
  "attribute_list", "attribute", "opt_compression_method",
  "opt_compressed", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "type_with_opt_collate",
  "sp_param_type_with_opt_collate", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "charset_or_alias", "opt_binary", "binary", "opt_bin_mod",
  "ws_nweights", "$@121", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "opt_unique", "fulltext", "spatial",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "opt_USING_key_algorithm", "opt_key_algorithm_clause", "key_using_alg",
  "all_key_opt", "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "string_list",
  "alter", "$@122", "$@123", "$@124", "$@125", "$@126", "$@127", "$@128",
  "$@129", "$@130", "$@131", "$@132", "opt_account_locking",
  "opt_password_expiration", "ev_alter_on_schedule_completion",
  "opt_ev_rename_to", "opt_ev_sql_stmt", "ident_or_empty",
  "alter_commands", "$@133", "$@134", "$@135", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@136",
  "add_part_extra", "reorg_partition_rule", "$@137", "reorg_parts_rule",
  "$@138", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "opt_index_lock_algorithm",
  "alter_algorithm_option", "alter_lock_option", "opt_column",
  "opt_ignore", "alter_options", "$@139", "alter_options_part2",
  "alter_option_list", "alter_option", "opt_restrict", "opt_place",
  "opt_to", "slave", "$@140", "$@141", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_thread_opts", "$@142",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "checksum", "$@143", "opt_checksum_type",
  "repair_table_or_view", "$@144", "repair", "$@145", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "opt_view_repair_type", "analyze",
  "$@146", "analyze_table_list", "analyze_table_elem_spec",
  "opt_persistent_stat_clause", "persistent_stat_spec",
  "persistent_column_stat_spec", "$@147", "persistent_index_stat_spec",
  "$@148", "table_column_list", "table_index_list", "table_index_name",
  "binlog_base64_event", "check_view_or_table", "$@149", "check", "$@150",
  "opt_mi_check_type", "mi_check_types", "mi_check_type",
  "opt_view_check_type", "optimize", "$@151", "opt_no_write_to_binlog",
  "rename", "$@152", "rename_list", "table_to_table_list",
  "table_to_table", "keycache", "$@153", "keycache_list_or_parts",
  "keycache_list", "assign_to_keycache", "assign_to_keycache_parts",
  "key_cache_name", "preload", "$@154", "preload_list_or_parts",
  "preload_list", "preload_keys", "preload_keys_parts", "adm_partition",
  "$@155", "cache_keys_spec", "$@156", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "$@157", "$@158", "select_into", "$@159",
  "$@160", "simple_table", "table_value_constructor", "$@161",
  "query_specification_start", "$@162", "$@163", "query_specification",
  "select_into_query_specification", "query_expression",
  "query_expression_no_with_clause", "query_expression_body_ext", "$@164",
  "$@165", "query_expression_body_ext_parens", "query_expression_body",
  "$@166", "query_primary", "query_simple", "subselect", "subquery",
  "opt_from_clause", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "for_portion_of_time_clause", "opt_for_portion_of_time_clause",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "select_lock_type", "opt_select_lock_type",
  "opt_lock_wait_timeout_new", "select_item_list", "select_item",
  "remember_tok_start", "remember_name", "remember_end",
  "remember_end_opt", "select_alias", "opt_default_time_precision",
  "opt_time_precision", "optional_braces", "expr", "bool_pri", "predicate",
  "bit_expr", "or", "and", "not", "not2", "comp_op", "all_or_any",
  "opt_dyncol_type", "dyncol_type", "numeric_dyncol_type",
  "temporal_dyncol_type", "string_dyncol_type", "$@167",
  "dyncall_create_element", "dyncall_create_list", "plsql_cursor_attr",
  "explicit_cursor_attr", "trim_operands",
  "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@168", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@169", "$@170", "$@171",
  "window_func_expr", "window_func", "simple_window_func",
  "inverse_distribution_function", "percentile_function", "$@172",
  "inverse_distribution_function_def", "order_by_single_element_list",
  "window_name", "variable", "$@173", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "opt_glimit_clause", "glimit_clause_init", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@174", "cast_type", "$@175", "$@176",
  "$@177", "cast_type_numeric", "cast_type_temporal", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "when_list",
  "when_list_opt_else", "decode_when_list_oracle", "table_ref",
  "join_table_list", "esc_table_ref", "derived_table_list", "join_table",
  "$@178", "$@179", "$@180", "$@181", "$@182", "$@183", "inner_join",
  "normal_join", "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident_opt_parens", "table_primary_derived_opt_parens",
  "table_reference_list_parens", "nested_table_reference_list",
  "join_table_parens", "table_primary_ident", "table_primary_derived",
  "opt_outer", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "$@184", "$@185", "index_hints_list",
  "opt_index_hints_list", "$@186", "opt_key_definition", "$@187",
  "opt_key_usage_list", "key_usage_element", "key_usage_list",
  "using_list", "interval", "interval_time_stamp", "date_time_type",
  "table_alias", "opt_table_alias_clause", "table_alias_clause", "opt_all",
  "opt_where_clause", "$@188", "opt_having_clause", "$@189",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@190",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@191", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause", "opt_global_limit_clause", "limit_options",
  "limit_option", "limit_rows_option", "delete_limit_clause",
  "order_limit_lock", "opt_order_limit_lock", "query_expression_tail",
  "opt_query_expression_tail", "opt_procedure_or_into", "order_or_limit",
  "opt_plus", "int_num", "ulong_num", "real_ulong_num", "longlong_num",
  "ulonglong_num", "real_ulonglong_num", "dec_num_error", "dec_num",
  "choice", "bool", "procedure_clause", "$@192", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "$@193",
  "select_var_list", "select_var_ident", "select_outvar", "into",
  "into_destination", "$@194", "$@195", "do", "$@196", "drop", "$@197",
  "$@198", "$@199", "$@200", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "opt_if_exists_table_element", "opt_if_exists",
  "opt_temporary", "insert", "$@201", "$@202", "replace", "$@203", "$@204",
  "insert_lock_option", "replace_lock_option", "insert2", "insert_table",
  "$@205", "insert_field_spec", "$@206", "insert_field_list", "opt_fields",
  "fields", "insert_values", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "opt_with", "opt_by",
  "no_braces", "$@207", "no_braces_with_names", "$@208", "opt_values",
  "opt_values_with_names", "values", "values_with_names",
  "expr_or_default", "opt_insert_update", "$@209", "$@210",
  "update_table_list", "update", "$@211", "$@212", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@213", "opt_delete_system_time",
  "delete_part2", "delete_single_table", "delete_single_table_for_period",
  "single_multi", "$@214", "$@215", "opt_select_expressions",
  "table_wild_list", "table_wild_one", "opt_wild", "opt_delete_options",
  "opt_delete_option", "truncate", "$@216", "$@217",
  "opt_truncate_table_storage_clause", "opt_table_sym", "opt_profile_defs",
  "profile_defs", "profile_def", "opt_profile_args", "show", "$@218",
  "show_param", "$@219", "$@220", "show_engine_param", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "from_or_in", "binlog_in",
  "binlog_from", "wild_and_where", "describe", "$@221", "$@222",
  "explainable_command", "describe_command", "analyze_stmt_command",
  "opt_extended_describe", "opt_format_json", "opt_describe_column",
  "flush", "$@223", "flush_options", "$@224", "opt_flush_lock",
  "flush_lock", "$@225", "flush_options_list", "flush_option",
  "opt_table_list", "backup", "backup_statements", "$@226",
  "opt_delete_gtid_domain", "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@227", "reset_options",
  "reset_option", "$@228", "$@229", "slave_reset_options",
  "master_reset_options", "purge", "$@230", "kill", "$@231", "kill_type",
  "kill_option", "kill_expr", "shutdown", "$@232", "shutdown_option",
  "use", "load", "$@233", "$@234", "$@235", "$@236", "data_or_xml",
  "opt_local", "load_data_lock", "opt_duplicate", "opt_field_term",
  "field_term_list", "field_term", "opt_line_term", "line_term_list",
  "line_term", "opt_xml_rows_identified_by", "opt_ignore_lines",
  "lines_or_rows", "opt_field_or_var_spec", "fields_or_vars",
  "field_or_var", "opt_load_data_set_spec", "load_data_set_list",
  "load_data_set_elem", "text_literal", "text_string", "hex_or_bin_String",
  "param_marker", "signed_literal", "literal", "NUM_literal",
  "temporal_literal", "with_clause", "$@237", "opt_recursive", "with_list",
  "with_list_element", "$@238", "opt_with_column_list", "with_column_list",
  "query_name", "insert_ident", "table_wild",
  "select_sublist_qualified_asterisk", "order_ident", "simple_ident",
  "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident_table_alias", "ident_set_usual_case",
  "ident_sysvar_name", "ident", "ident_directly_assignable", "label_ident",
  "labels_declaration_oracle", "label_declaration_oracle", "ident_or_text",
  "user_maybe_role", "user_or_role", "user", "keyword_table_alias",
  "keyword_ident", "keyword_label", "keyword_sysvar_name",
  "keyword_sp_decl", "keyword_set_usual_case",
  "keyword_directly_assignable", "keyword_sp_var_not_label",
  "keyword_sp_head", "keyword_verb_clause", "keyword_set_special_case",
  "keyword_sp_block_section", "keyword_sysvar_type", "keyword_data_type",
  "keyword_sp_var_and_label", "set", "$@239", "$@240", "$@241",
  "set_assign", "$@242", "$@243", "$@244",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@245", "$@246", "$@247",
  "start_option_value_list_following_option_type", "$@248",
  "option_value_list_continued", "option_value_list", "$@249", "$@250",
  "option_value", "$@251", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "transaction_characteristics",
  "transaction_access_mode", "isolation_level",
  "transaction_access_mode_types", "isolation_types", "opt_for_user",
  "text_or_password", "set_expr_or_default", "lock", "$@252",
  "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@253", "handler", "$@254",
  "handler_tail", "$@255", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@256", "handler_rkey_mode", "revoke",
  "revoke_command", "admin_option_for_role", "grant", "grant_command",
  "opt_with_admin", "opt_with_admin_option", "role_list", "current_role",
  "grant_role", "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "$@257", "$@258", "$@259",
  "$@260", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "user_and_role_list",
  "via_or_with", "using_or_as", "grant_user", "auth_expression",
  "auth_token", "opt_auth_str", "opt_column_list", "column_list",
  "column_list_id", "opt_require_clause", "resource_option",
  "resource_option_list", "opt_resource_options", "opt_grant_options",
  "opt_grant_option", "grant_option_list", "grant_option",
  "begin_stmt_mariadb", "$@261", "compound_statement", "opt_not",
  "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_option",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@262", "view_check_option",
  "trigger_action_order", "trigger_follows_precedes_clause",
  "trigger_tail", "$@263", "$@264", "$@265", "$@266", "$@267",
  "sf_return_type", "$@268", "sf_c_chistics_and_body_standalone", "$@269",
  "sp_tail_standalone", "$@270", "$@271", "opt_package_routine_end_name",
  "sp_tail_is", "xa", "opt_format_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "$@272",
  "opt_migrate", "install", "uninstall", "keep_gcc_happy", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1000,  1001,  1002,  1003,  1004,
    1005,  1006,  1007,  1008,    61,    62,    60,   124,    38,    45,
      43,    42,    47,    37,    94,   126,  1009,  1010,  1011,  1012,
      40,    41,  1013,    44,    33,   123,   125,    59,    46,    64
};
# endif

#define YYPACT_NINF -5306

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-5306)))

#define YYTABLE_NINF -3474

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
   16782,  4872,  1722, 85909, -5306,    18, -5306,   675, -5306, -5306,
   -5306, -5306,  4747, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306,   420,   131, -5306,   224, -5306, -5306,   683, 81415,   866,
     123, -5306, -5306, 82699, -5306, -5306,   948, -5306, 82699, -5306,
   -5306, 85909, -5306, -5306,  1428, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,   530, -5306,  2455,   385, -5306, -5306, -5306,
   -5306, -5306, -5306,  1789, -5306, -5306, -5306, -5306, -5306,   131,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, 85909, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,  1271, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306,  1774, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, 86551, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,   682, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,  2241, -5306, -5306, -5306, -5306, -5306,
     330, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,   -64, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, 85909, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306,   224, -5306, -5306,  1812,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,  1271,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, 85909, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,   252, -5306,
   -5306,   294, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  1740, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306,  2791, -5306, -5306,
     435,  2399,  2340, -5306, -5306,  1849, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306,  4928, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
    2212, -5306, -5306, -5306, -5306,  4402,  2013, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, 70481, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306,   435, -5306, -5306,
     290, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, 85909, 85909,  1724,  1760, 85909,  2457,
    2528, 82057, 85909,  2528, -5306,   461, -5306, -5306,  2139, -5306,
    1969, -5306,   131,   997, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  1959, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  2459,  2493,   648,  2546,  2672, 85909, 49854,
    1155,  2528, -5306,  2388,  2528,  2528,  2528,  2528,  2684,  2528,
    2528, 85909, -5306,  2528,  2528,  1040, 90403, 37206, -5306,  1121,
      16,  2676, -5306, -5306, -5306, -5306, -5306, -5306,  7690,   131,
   24163,  2767, -5306, -5306,  2319,  5297,  2094, -5306,  2595, -5306,
   -5306, 85909, -5306, -5306,  7690,  1432, -5306,  2595, 37951,  3710,
   -5306, 35747,  6849,  2595,   131,  2664, -5306,  2084, 24163, -5306,
   -5306, -5306, -5306, 85909, -5306,  1271, -5306, -5306, -5306,  2513,
   -5306, 82057, -5306, -5306, -5306,  2081, -5306,  2859, 24163,   300,
    2607, -5306, -5306,  2497, 71123, 82057,  2808,  2493,  2853, -5306,
    1961,  1361, -5306,  2170,  2312,  2493,   307,  2315,  2493,  2722,
    2528,  2528, -5306, -5306,  2172,  2172,  2172,  2543,  2172, -5306,
    2172,  2906,  2238,   243, -5306, -5306,  2236, 85909,  2808, -5306,
   -5306, -5306,  2808,  2808,  2363,  2913,  2934,  2940,   989,  1976,
    1647,  1647,  2139, 51933,  1474,  2724, -5306,  2906,  2560,   416,
   -5306, -5306,  1639,  2560,   435,  2560, -5306,   256,  1969,  1778,
   85909, -5306, -5306, -5306,  2289, -5306, -5306, -5306, 85909, -5306,
    2345, -5306,  1586, 50560, -5306, 85909,  2994, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306,  1300, -5306, -5306,  2822,   650,
    2461,  2690,  2355, -5306,  2885, 82057, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,  2358, 85909, -5306,  3073, 24163,  2459,
   -5306,  2884, -5306, -5306, -5306, -5306, 71123, -5306, 85909, -5306,
    3153, -5306, -5306, 90403, -5306, -5306,   434, -5306, -5306, 53332,
    1264, 42832, -5306,  2385,  2396,  2718, -5306,  2410,  1434,  1491,
   -5306,  1550, -5306, -5306,  1588,  1725,  1729, -5306, -5306,  3093,
   -5306, -5306, 74353,   646, 85909,  3082,  2528, 85909, 85909, 85909,
   85909, 85909, 85909, -5306, 82057,  2514, -5306, -5306,  2528,  2528,
   -5306, -5306,  2611,  2596,  1737,  2478,  2788, -5306,  2688, -5306,
   -5306,  2585, -5306, -5306,   188, -5306, -5306, -5306,    89,   122,
     202,   301,  3108,   370,    66,   394,   398, -5306, -5306, -5306,
    3003,  3109,  2531, -5306,  2891, 24163, -5306, -5306, -5306,  3199,
   -5306, -5306,   130,  2968,  1536, 71123, 91045, 73701, 91977, 91977,
   91977, -5306, -5306,   181, 91977, 85909, 91511, 85909,  7532,  2539,
   -5306, -5306, -5306, 18270, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, 85909, -5306, -5306, -5306,  1349, -5306, -5306, -5306,
   -5306, -5306,  8808, -5306, -5306, 28585, -5306,  2558,  2559,  2571,
   20478,  2575,  2583,  2591,  2592,  2620,  2478,  2478,  2478,  2625,
    2637,  2643,  2648, -5306,  2656,  2668,  2679,  2685, -5306,  2691,
   -5306,  2692,  2696,  2697, -5306, -5306,   128,   170,  2704,  2706,
   24900,  2732, -5306, 65345,  2736,  2737,  2741,  2744, -5306, -5306,
   24163,  2625,  2745, -5306, -5306,  2750, -5306,  2754,  2760,  2763,
    2770,  2774,  2778,  2781,  2782,  2800,  3140,  2810,  2814,  2818,
    2819,  2625, -5306,  2850, -5306, -5306,  2249,  2478,  2625,  2625,
    2851,  2869,  2872,  2879,  2883,  2888,  2893,  2897, 83341,  2898,
    2904,  2907,  2914,  2922,  2928,  2937,   437,  2944,  2949,  2952,
    2958,  2977,  2980,  2983,  2986,  2990,  3013,  3016,  3020,  3028,
    3031,  3032,  3047,  2650,  3050,  3054,  3058,  3062,  3070,  2705,
    3079,  3110,  3118,  3119,  3130,  3133,  3144,   444,  3148,  3151,
     476,  3161,  3168,  3169,  3172,  3173,  3177,  3179,  3182, 29322,
   30059, 28585, 19004, -5306, 85909, 87193, -5306, -5306, -5306,  4845,
     725,  1359,  3639, 28585, -5306, -5306, -5306,  3323, -5306,  3201,
   -5306, -5306, -5306, -5306, -5306,  3195,  3283, -5306,  3292, -5306,
   -5306,  3297,  2752, -5306,  3311, -5306, -5306, -5306, -5306, -5306,
    2830,  3183,  3396,  3406, -5306, -5306,  1429, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,  2862,
    2858, -5306,  3311, -5306, -5306, 51261, 71123,  4433, -5306, -5306,
   -5306,  3588, -5306, -5306,  2611,  3156,  3561, -5306,  3731, -5306,
    3686, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  3710, -5306, -5306, 56784,  3673,  -141,   503,
    3115,   537,   539, 42097,   275, 78847,   543,   325,  3178, 61493,
   45750,  3186,   132,  3187, -5306,  3188,  3190,  3193,  3197,  3200,
    3204,  3205, -5306, -5306, -5306,  3295,  3207,  1991,  1314, -5306,
   -5306,   254,   894,  3305, -5306,  3563, -5306,  1314, -5306, 38618,
    3849,   459, -5306,  1026, -5306,  3899, -5306, -5306,  3312,  3302,
    3325, -5306,  2391, -5306,  2493, -5306,   995, -5306,  3849,  1314,
     459, -5306,  3498,  3582,   975,  3910, -5306,  1769, -5306, -5306,
    3199, -5306,  3233, -5306, -5306,  4023, 85909, 71123, -5306, -5306,
   -5306, -5306,  3234, 71123, 71123, 85909,  1046,   233,  4845,  3235,
   24163, -5306, -5306,  6237, 39329,  3436,   293,  1338, -5306, -5306,
    2455, 85909, -5306, -5306,  1015, -5306,  3665, -5306,  3246, -5306,
   87835,   233,  3928, -5306, -5306, -5306,   -61,  3640, -5306,  3251,
   -5306, -5306, -5306, -5306, 71123, 85909,  2493, -5306, -5306, -5306,
   -5306,  3255, -5306, -5306,  3457,  3339, -5306,  3281, -5306, -5306,
     238, -5306, -5306,  3957, -5306, 85909, -5306, -5306,  2808, -5306,
    2808, -5306, -5306,  2808,  2808,  2400,  2808, -5306, -5306,  3303,
   -5306,  3590,  3591,  2885, -5306, 64703, 85909,  3946, -5306,  2842,
   -5306, -5306,  3267, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306,  3850,  3781,  3781, -5306, 62135, -5306, -5306,  3949,  2724,
    3766, 79489,  3927,  4026, -5306,  3849, -5306, -5306, -5306,  1492,
   85909, -5306,  1492,  1492, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,   435, -5306, -5306,   997, 47790, 85909,
    2560,   416, 15265,  3820,  4006,  3666, -5306, -5306, -5306, -5306,
    2478,  3299, -5306, -5306, -5306, -5306, -5306,  4069, -5306, -5306,
   71123,  3503,  3687,  3687,  3687,  4076, -5306, -5306, -5306, 50560,
   71123, -5306, -5306, -5306,   650, -5306,  2033, 85909, 71123,  3347,
   -5306, 71123, 24163, -5306, -5306, 24163, -5306,  3669,  4845, -5306,
   -5306, 71123,  1405, -5306, -5306, -5306,  4069,  3687, -5306,  3744,
    1264,  3315,  3324, -5306,  3318,  3318,    10, -5306,  3333,  3907,
    3333, -5306,  3726,   897,   367,  3726, -5306,   897,  3333, -5306,
    3335, -5306,  3726, -5306,   897,  3318, -5306,  3318, -5306, -5306,
     897,  3318, -5306,  3343,  3333, -5306, -5306,  3726, -5306, -5306,
   -5306, -5306,  1396,   285,  3333, -5306, -5306, -5306,  3318,  3353,
    3318,  3318,  3318,  3318, -5306,  3318,  3931,  3350,  4096, -5306,
   -5306, -5306, -5306, -5306,  3333,   406,  3318,  3318,  3318,  3318,
    3361,  1911, -5306, -5306, -5306, -5306, -5306, -5306, -5306,  4042,
   85909,  4047, -5306, 71123,  4126, 71123,  4054,  2724, -5306,  3376,
   -5306,  3369, -5306, -5306,  4073, 85909, 85909, -5306, -5306, -5306,
   -5306,  3382,  2514, 52633, -5306,  1357,  3741, 51261, 71123, -5306,
   -5306,  4012,  4040, -5306, -5306, -5306, -5306, -5306,  3470, -5306,
   -5306,  3398, -5306, -5306, -5306,  3397, -5306,  3397,  3397, -5306,
   -5306,  3397, 51261, -5306, -5306, 50560,  1816,  7014,  4060,  4186,
   -5306,  3588, -5306,  3702, 25637, -5306, -5306, -5306,  3676,   309,
    1226, -5306, -5306, -5306, -5306, -5306,  3884, -5306, -5306, -5306,
   -5306, -5306, 85909,  3632,  4094,  4072, -5306, -5306, -5306,  3951,
   -5306, -5306,  3900,  3429,  4051,  3426, -5306, -5306, -5306,   411,
   24163,  3437, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, 71123,  3442, 28585, 28585, -5306,  4208,  4208,  4208, 24163,
    4209,   432,  3798, 24163, 24163, 24163,  1954,  3446, -5306, -5306,
   -5306,   493, -5306,  3450, 24163, 24163, 66629,  3451,  1063,  4172,
   24163,  4155, 24163, 24163, 24163, 24163, 19004,  6323, 24163, -5306,
   -5306, 87193, 66629,  3901,  3456, -5306,  3453, -5306,  2518, 24163,
    2519, 24163,  4107, -5306, 24163, 24163,  3466, 24163, 24163, 30796,
    3467, 24163, 24163, 24163,  3468,  3600,  4208,  4208, 24163,  2604,
   -5306, 19741, -5306, -5306, -5306, -5306, -5306,  4208,  4208, 24163,
   24163,  2617, 24163, 24163, 24163, -5306,  3480, 24163, 24163, 24163,
   24163, 24163, 24163, 24163, -5306, 24163, 24163, 24163, 24163, 24163,
   24163,  1495, 24163, 24163, 71123, 24163, 24163, 24163, 24163, 24163,
   24163, 24163,  4152, 71123, 24163, 24163, 24163, 24163,  4153, 24163,
   24163, 24163,  3477, 24163, 71123, 24163, -5306, 24163,  2923,  2923,
   -5306, 24163, 19741, 24163,  3491, 67271, 24163, 24163, 24163, 24163,
   24900, -5306, 24900, -5306, -5306,  3492,  1486,   426,   435, 24163,
    3487, 62777, -5306, -5306,  2123, -5306, -5306, 24163, 24163, 24163,
   30796, -5306, -5306, -5306, -5306, -5306, -5306, 16028, 30796,  3499,
   30796, 30796,  4129,  2067, 30796, 30796, 30796, 30796, 30796, 30796,
   30796, 31533, 32270, 30796, 30796, 30796, 30796, -5306, 82057, 28585,
   72407,  3501,  4173, -5306, 87193, -5306,  1916,   617, -5306,  2493,
    5297, 33735, -5306,  3500, -5306,  4003,  3508, -5306,  1387, -5306,
   -5306, -5306, -5306, 71123,  3513,  4196, 51261, 50560,  2074,  3533,
   -5306,  3515,   546,  3531, -5306, -5306, 52633, 85909, -5306, -5306,
   -5306, -5306, -5306,  4096, 24163, -5306, 51261, -5306,  1068, 15265,
   -5306,  1283,  1494,   132, -5306, -5306, -5306, -5306, -5306, 15265,
   85909, 57469,  3541,  3626,  3554,  2808, 48439, 85909, 71123, 85909,
   85909, 85909, 71123, 51261, 71123, -5306, -5306, -5306,  1037,  1314,
   85909,  1314,   459,  4194, -5306,  1653,  1653, -5306, -5306, -5306,
   -5306, -5306, -5306,  1314, 85909, 85909,  1314, 50560, -5306,   459,
    1997, -5306,  3840,  3631, -5306, -5306, -5306,  3885, -5306, -5306,
    4237,  3557, -5306,  3906, -5306, -5306,  3658, -5306, -5306, 71123,
   -5306, -5306,   459, -5306,   459,   459, 24163,  1314,  1314,  1314,
   65987,  3565,  3571, -5306,  3566, -5306,  3583, -5306, -5306, -5306,
    3938,  3584,  4238,  3594, -5306, -5306,  4175,  1039,  4130, -5306,
    4024, -5306,  4158, -5306, 24163,  4845, 21215,  3875, -5306, -5306,
    3877,  3878,  3886, -5306, -5306, -5306, -5306,  4039,  3887, -5306,
    2493,  3888, -5306, -5306,  3617, -5306, -5306, -5306, 33735, 82057,
   -5306,  3618, -5306,  3641, -5306,   183, -5306, -5306,  4309,  3738,
   24163, -5306, -5306, 71123,  4136, -5306,  2493,  1961, 85909, -5306,
   -5306,  4404, -5306,   -74, -5306, -5306, -5306,  3747,   307, -5306,
   -5306,  1387, -5306, -5306,  2172,  3826, -5306, -5306, -5306, 82057,
   -5306, -5306, -5306, -5306, -5306, -5306, 52633, 50560, 82057, -5306,
    2808,  2808, -5306, 71123,  2808, 85909, -5306, -5306, -5306,  2808,
    2808,  2808,  3680,   644,  3645,  3646,  3652,  3657,  2073,  3659,
   67913,  2807,   218,  4304,  4305, -5306,  4247,  2909,  4247, -5306,
   -5306, 67913, 65987,  3667,  3946, -5306, -5306, -5306, -5306, 82057,
    3663, -5306, -5306,  3661, -5306, 24163,  4409,  4340,  3949,  1459,
   -5306, -5306,  4016, -5306, 83341,  4217,  1205, -5306,  3672,  3795,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, 28585,  2656, -5306,  4845,
   -5306, -5306, -5306,   175, -5306, -5306, -5306,  1407,  4046,  1926,
   -5306, 82057,  1926,  1686,  1505, -5306,  3689,  2493,  2576, -5306,
    2576, -5306,  3985, -5306,  3989,   393, -5306,  1387, -5306, -5306,
   -5306, -5306, -5306, 71123,  3690, -5306,  3879,  3693,  3692,  4845,
    4845, -5306,  7690,  4439,  4171,  6030,   242,  3748, -5306, -5306,
   -5306, -5306, -5306, 71123, -5306, -5306,  1502,  3055,  4191,  3707,
   -5306,  1264, -5306, -5306, -5306,  2329, -5306, -5306, -5306,  3726,
     132,  3726, -5306, -5306,  2404,  1286, -5306, -5306, -5306,  1286,
   -5306,   217, -5306, -5306, -5306, -5306,   387, 47135,  4462,  4102,
    3673,  3726, -5306,  4190,   897, -5306, -5306,  1286,  2172, -5306,
   -5306,  3726, -5306, -5306, -5306,  2172,  1286, -5306,  4201, -5306,
   -5306, -5306,  1286,  3726, 90403,  1911,   897, -5306, -5306,   897,
    1286,   561, 85909, 56099, -5306,  4268, -5306,   387,  4462,   897,
    3726,  1286,  4307, -5306,  1286, 24163, 24163, -5306, -5306, -5306,
     378,  3850,  3805, -5306,  3717, -5306, -5306,   536,  4301, -5306,
   -5306,  4318, 85909,  4411, 74995, -5306, -5306,  4324, -5306, 85909,
    1357,  3733, -5306, -5306, -5306, -5306, -5306,   132, -5306,  3736,
     198, 71123, 71123,  7690,  3876, -5306, -5306, -5306, 85909, -5306,
   -5306, -5306, -5306,  4242,   512, 34384, 68555, -5306, 68555, 68555,
   -5306, -5306, -5306, -5306, -5306,    66, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, 49140,  4845, -5306, 71123, -5306,  4400, -5306,
   -5306, 89119,   306, -5306, -5306,   282, 71123, -5306, -5306, 24163,
   -5306,  4394,  3889, 85909, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, 85909,  2358,  4845, 85909, 49854, -5306, 90403,  7690,
    7690, 24163,  1371, 24163, -5306,  3746, -5306,  3750,  3756,  4241,
    4112, 24163, 24163, -5306,  4350,   515,   266, -5306,  3763,  3758,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,  3765, -5306,
   -5306, -5306,   449,   465,  3770, -5306, -5306, -5306,  3772,   435,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
    4454, -5306,   359, -5306, -5306,   302,   312,   511,  1052,  1153,
    3794,  1397,  3480,  2145,  3785, 66629, 87193,  4208,  3787,  2458,
    4208,  3790,  1437,  2618,  1721, -5306,  2683,  2689,  4052, -5306,
    1892,  1900,  1910, -5306, -5306,  3791,  3792,   308,  4208,  3799,
   21952, 22689, 23426,  4142,  3802,  3816,  3818,  1921,  2694,  4208,
    3821,  2712,  2164,  2715, 87193,  1924,  2730,  1928, -5306,  2171,
    1934,  1940,  1956,  2009,  2802,  2820,  2088,  2118,  2165,  2209,
   -5306, -5306, -5306, -5306,  3783,  2829,  2839,  3796,  3825,  2222,
    2866,  2873,  2950,  2257,  2284,  2303, 71123,  3827,  2963,  2974,
    2202,  2306, 71123,  2987,  2997,  2231, -5306,  3001,  3803,  2307,
     321,  3831,  3833,  3006,  3828,  2327, -5306, 87193, 85909,  3829,
    3813,   342,   305,  2335,  3022,  6323,  6323, -5306, 24163,  3842,
     260, 87193,  1494, -5306,  4373, -5306, -5306, -5306, -5306,   287,
    2332,  1551,  4107,   417, -5306,  3844,   417,  3847,  1884, 19004,
   -5306,  1481,  4448, 30796, 30796,  3853, 30796, 30796,  3856,  3856,
     615,  3355,  3355,  3336,  4668, 24900,   615, 24900,   615,  3856,
    3856,  3856, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
    4431,  3859,  1272,  3860, -5306, -5306, -5306, -5306, -5306, -5306,
      29,  4269, -5306,  4053,  1200, 24163, -5306,  3881,  4371,  4372,
    4376, -5306, -5306, -5306, -5306, 51261, 51261, 71123,  4368, 24163,
   -5306,   553, -5306,  3850,  4546, 52633,  4553, -5306,  3880, 35033,
   68555, 68555, 68555, -5306,  3894, -5306, 24163, 85909, 85909, 15265,
   56784,  4556,  4558,   132, -5306,  4845,   132, -5306,  3895,  3904,
   -5306, -5306,  1439,  4156, -5306,  3898,  3905, -5306,  3909,  3911,
    3913, 60209, 24163, -5306,   132,  1283, -5306, -5306, -5306, -5306,
   -5306,  3883, 85909, 85909, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  2493, 24163, 85909,  1314, -5306, -5306, -5306,
    1314,  2493,  4582, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  1314, -5306, -5306, -5306, -5306, -5306,  4070,
    3849,  2391,  4194, -5306,   459, 71123,  1314,  1314,  4845, -5306,
   -5306, -5306, -5306,  4442,  3850, 21215,  3914,  3915, -5306, -5306,
    7690, 85909, 85909, -5306,  6926, -5306, 82057, 58154, 71123, -5306,
   -5306, -5306,  2573, -5306, -5306, -5306, -5306, -5306, -5306,  4845,
    2607,  2656, -5306,  3919,  4845, -5306,  4622, -5306, -5306, -5306,
   -5306,  2493, -5306, -5306,  5423, -5306, 71123, -5306, 64061, -5306,
   64061,  1918, -5306, 88477, -5306,  2493,  4845, 71123,   881,   282,
   -5306,  4687, -5306, -5306,  4035, -5306, -5306, -5306,  3926, -5306,
    3973, -5306, -5306, -5306,  3929, -5306,  4609, -5306,   211,   517,
     393, -5306, 85909, 85909, 85909, 71123, -5306, 85909, -5306, 85909,
    2808, -5306, -5306,  2808, 71123, 85909, 85909,  2808, 67913, -5306,
   -5306, -5306, -5306, -5306, 67913, -5306,   469, -5306,  4134,  2151,
    2151, -5306, -5306, -5306, -5306, -5306,  4580,  4247,  4247, 67913,
    4587,  5363, -5306, 85909,  5840,   377, -5306, 62135, 85909,  4845,
   24163, -5306,  3975,  4340, -5306,   282, -5306, 80773, -5306,  4288,
   80773, 80773, 87193,  4179, 24163,  3952, 15265, -5306,   132,   132,
    4177,  4484,  4485,  4088,  2493,  4488,  4489,  4490, -5306, -5306,
   -5306,  2493,  2493, -5306, -5306,   132, -5306,  1818, -5306, -5306,
   -5306, -5306,  2503,  1527, -5306,   132,   132, -5306,  3258, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306,  1730, -5306,   204,  1572,
   50560,  4441, -5306,  4567,  3977, -5306, 71123,  4656, -5306, -5306,
   24163,  4482,  6683, -5306, -5306,  4171, -5306,  4002,  4005,  4007,
    4008,  4009,  4010,  4011,  4014,  4022,  4027,  4028,  4029,  4030,
    4032,  4033,  4034,  4037,  4038,  4041,  4043,  4045,  4048,  4064,
    4066,  3981, -5306, -5306,  4031, -5306, -5306, -5306, -5306,   132,
     132,   132,   132, -5306,  3097, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  4258,  3903, 85909,  4652,  4377,  4036,  4056,
    4057,  4058, -5306, -5306, 85909, -5306,  2314,  4498,  4524, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,   132, -5306,
   -5306, -5306, -5306,  2325, -5306, -5306,  2350, -5306, -5306, -5306,
   -5306,  6552, -5306,  2372, -5306, -5306, -5306, -5306, -5306,  1911,
    1911,  4044, -5306, -5306, -5306,  4077, -5306, -5306, -5306, -5306,
    4462, -5306,  4050, -5306,  4845,  4845, 73049, -5306, -5306, -5306,
   -5306,  2776, -5306, -5306,  2151, 85909,  4538, 74995, -5306,  4267,
    4697, -5306, -5306, 65987, -5306,  4071, 71123, -5306, -5306, 52633,
   -5306, 82057, 51261, -5306, -5306, -5306,  4074,  1371,  7702, -5306,
    4078, -5306,  2390, -5306, 50560,  4531, -5306, 68555,  4075, -5306,
    4079,  4573,  4588,  4591,  4595, -5306,   553, -5306, -5306,  4098,
   -5306, -5306,  4175,  3781, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306,  4140,  4374,  4497, -5306,
   -5306, -5306,  4845, -5306, -5306, -5306,  4758, -5306, -5306, -5306,
    2403,  3820, -5306, -5306, -5306,  4470, -5306, 91977, 91977, 91977,
   -5306,  2354, -5306, 24163, -5306, -5306, 24163, -5306,  4845,  4743,
    4507, 47135, -5306, 47135,  4507, 24163, -5306,  4111, -5306,  4767,
    4768, -5306, -5306, -5306, 24163, -5306, 24163, -5306, 24163, -5306,
   24163, 24163, 24163, 24163, 24163, 24163, -5306, 30796, -5306,  4113,
    4119, -5306, -5306,  4121, -5306, 24163, -5306, 24163, -5306, -5306,
   24163, 24163, 24163, 24163, -5306, -5306, 24163, 24163,  4125, -5306,
   24163,  4714, 24163,  4831, 24163,  4855, 24163, -5306, -5306, -5306,
   26374, -5306,  4131, -5306, -5306, -5306, -5306, -5306, 24163, -5306,
   24163, -5306, 24163, 24163, 24163, 24163, 24163, -5306, -5306, 24163,
   24163, 24163, -5306, 24163, -5306,  4710, 24163, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, 24163,
   -5306, -5306, -5306, -5306, 24163, -5306,   253, 27111, -5306, 24163,
   24163, 24163, -5306, -5306, 24163,  4123,  4137, -5306, 85909, -5306,
   24163,  2703,  2440,   282,  4138, 24163, -5306,  4154,  4159,  3235,
   -5306, -5306, -5306, 89761, 24163, -5306, -5306, -5306, -5306,  1063,
   30796,   438, 30796,  4448,  2902, 19004, -5306,  1508,  4448,  6323,
    6323, 85909,  4886,  4145, -5306, 24163, 87193, 24163,  4147,  4150,
   -5306,  4160, 30796, -5306, -5306,  4165, -5306,  2469,  2440,  4231,
    4599, -5306,  4845, 33735,  4658, -5306, -5306, 71123,  2992, 67271,
    4635, -5306, -5306, -5306, -5306,   519, -5306, -5306,  4363, -5306,
   51261, 50560, 68555,  4847,  4850,  4852,  4853, -5306,  4845, -5306,
    4174,   132,   132, -5306, -5306, 17526, 51261, 15265, -5306,  4688,
    4689, -5306, -5306,  1299,  4474,  4748, -5306, -5306, -5306,  4185,
   -5306, -5306, -5306, -5306,   564, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  4845, 15265, -5306,  3541,  4198, 36461,   944,
   -5306, -5306, -5306,  4845, -5306, -5306, -5306, -5306,  4215, -5306,
   -5306, -5306,  4793, -5306, -5306,  4582,  2724,   459, -5306, -5306,
   67271,  2833, -5306, -5306, -5306, 21215,  7941, -5306,  2417, -5306,
    4965,  4205,  4666, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  4213, -5306, 15265, -5306, 21215,  4230, -5306,
   -5306, -5306,  4074,  1759,  4234,  4212, -5306, -5306, -5306, -5306,
   -5306, -5306,   418,   427,  2201,  2724, -5306, -5306,   163, -5306,
   -5306, -5306, -5306, -5306,  1227, -5306, -5306, -5306, -5306,   -74,
    2890, -5306,   419,   282,  4458, -5306, -5306,   281,  4676, -5306,
    4441,  4907,    97,  4823,  4827, -5306,  2503, -5306,  1521,  1765,
   -5306, -5306, -5306, 85909, -5306,   127,   856,   152, 71123,  2842,
    2842, -5306,  2151,   478, -5306, 30796,  4999, -5306,  4740, 67913,
    4890,  4891, -5306, 67913, -5306, -5306,  2421, -5306, -5306, 46479,
   -5306, -5306, -5306,  4845,  1184,  2263, 24163, 85909, -5306,  3975,
   -5306, -5306, -5306, 80773, -5306, -5306, -5306,  1459,  4239,  2263,
    4250, -5306, 56099, 46479, -5306,  4618,  4627,  2037, -5306, -5306,
   -5306, -5306, -5306, -5306,  4885,  1505, -5306,   132,   132, -5306,
     262,   132, -5306, -5306,   227, -5306, -5306,  2441,   111,  2503,
   -5306,  2493,  2493,  2493,  2493,   282,  2493,  2493,  2431, -5306,
    4885,  4885,  2576, -5306,  1141, -5306, -5306, -5306, -5306,   200,
   -5306, -5306, 82057, -5306,  4759,  4763, -5306,  4766, -5306, -5306,
     297, -5306,  2771,  4706,  4465,   964, -5306,  4821, 85909,  5030,
    3977, -5306,  1263,  4845, -5306, 24163, -5306,  4273,  4275,   282,
    4277,   282,   282,  2493,  2493,  4215,  2493,   282,  2493,  2493,
    2493,  2493,  2493,  2493,  2493,   282,  2493,  1584,  2805,  2493,
     282,  6030, -5306,  2493,  2440,  4885,  4885,  3055, -5306,  4950,
     132, -5306,  4929, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306,  2439, 43567, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  4875, -5306, -5306, -5306,   387,  2172,   387,
   -5306, -5306, 90403, -5306, -5306, 85909,  4876, -5306, -5306, -5306,
   -5306,  5325, -5306, -5306, -5306,  4604, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,  4281, 65987,   577, -5306, 80131,  4838,
    2724,  4294, -5306,  1387, -5306, -5306, -5306, -5306,  1438,  4915,
   -5306, -5306,  4995, -5306, 85909,   534,  4491,  4798,  4313, 75637,
   50560, 50560, 50560, 50560, -5306,  4900, 71123, -5306,  4968, -5306,
   -5306, -5306, -5306, -5306, 24163, -5306, -5306,  2358,  4744, 91977,
    4932, -5306, -5306, -5306, -5306, -5306, 24163,  4845,  4845, 24163,
    3318,  3318,  3333,  3361, -5306,  5029, -5306,  4963,  3318,  3318,
   -5306,  3318,  4969,  3318,  3318,  4320, -5306, -5306,  4325,  4326,
    4327,  3235, -5306, 24163, 24163,  3229,    98,  3364,  3371,  2381,
    2486,   445, -5306,  3374,  5053, -5306, -5306,  3413,  3421,  3433,
    3462,  2499,  3469,   589,   583, -5306,  4845, 24163,  4845, 24163,
    4845, 24163,  4845, 24900,  3518, -5306,  2443,  4955, -5306,  2454,
    5061,  3526,  1145,  3532,  2553,  2490,  1183,  3569,  3572,  3614,
    2500, -5306,  2203,  4919,  2530, 24900,  3650,  3656,  2587,  2605,
    3662, 87193, 85909,  4321,  3721,  4330,  4330,   274, -5306,  4329,
   -5306, -5306, -5306,  4331, -5306,  3739, 24163, 24163,  4328,  4845,
    4332,   417, -5306, 24163,  4448, 30796,  1285, 30796, -5306, -5306,
    4431, -5306, 24163, -5306,  4921,  4336,  3235, -5306,  4845, -5306,
   -5306, 85909,  4337,  3639, -5306, 24163,  4215, -5306, -5306,  5084,
    4341,  4358,  4343,  4165, -5306, 51261, -5306,  4895,  4344,  4345,
   -5306, -5306, -5306,  4339,   435, 67271, -5306,  5025,  3736, -5306,
    5026, 50560, 50560, 50560, 50560, -5306, 41368, -5306, 76279, 15265,
   15265, -5306, -5306, -5306,  4353,  4354,   942,  4911, -5306, -5306,
   -5306, -5306, 85909, 85909, 15265, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  2813, -5306,  3849, -5306, -5306, -5306,  1314,
    4361, -5306,   132,   339, -5306, 21215,  4364,  4366, -5306,  4992,
   -5306, 85909,  4375, -5306,  4846, -5306,  4378, 83983, -5306, -5306,
    4379, -5306,  4933, -5306, -5306,  5006, 64061, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,  3849,  4600,
   -5306, -5306, -5306,  4399, -5306,  4381,  4473,  4475, -5306, -5306,
   -5306, 50560,  4706,  4774,  1339,  1339,  4991, 71123, 71123,  9386,
    7300,  2503,  1521, -5306, -5306, -5306,  2493, -5306,  1765, -5306,
   -5306,  4401, 85909, -5306,  3977, -5306, -5306,   466, -5306, -5306,
   -5306, -5306, -5306,  3639,  2151,  2151,  5142,  4896, 67913, 67913,
    5731,  4901, 24163,  4406, -5306, 85909, -5306,  1323, -5306,  4826,
   -5306, -5306, 24163, -5306, -5306, -5306, -5306,  4845,  5177,  4416,
   -5306, -5306, -5306, -5306, 24163, -5306, 24163,  4430,  4432, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306,   253,   253, -5306, -5306,   253,
     253, -5306, -5306, -5306, -5306,   253,   253, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306,  1527, -5306, -5306, -5306,
    1730, -5306, -5306,  4937,   454, -5306,  5019, -5306, -5306, -5306,
   -5306,   117,   282,   282,   282,  2805,  2191, -5306,  2771,  1803,
    4624,  4169,  4836,  5015,  4836,  5016,  4941,  4487,  4805,   132,
    5021,  5188,   132, -5306,   208,   132,   132,   132,   132,  4492,
     132,   132,   132,   132,  5032,   132,   132,  4810,   132,  5092,
    4527,  5093,   132,  5033, -5306,  4532,   132,   132,   132,   132,
    4836,   132,   132,  5035,  4647,  5037,  5038,   132,   132,  1858,
   85909,   132,   132,  5039, -5306, -5306,  8617, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,   468, 69197, -5306, -5306, -5306, -5306,
     132,  2455,  1986,  4966,  1567, -5306,  2534, -5306,  5225, -5306,
     231, -5306, -5306,  4845,   410,   414, -5306,   471, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, 85909,  4885,  3903, -5306,
   -5306, 85909,  3318,  3318,  3318,  3353,  3318,   109,  4096, -5306,
   -5306, -5306, -5306, -5306,   406,  3318,  3318,  3318, -5306, -5306,
   -5306,  4468, -5306, -5306, -5306, -5306, -5306, -5306, 73049, -5306,
   -5306, 74995,  2724, -5306, 85909,  4811,  5012,  3533, -5306, -5306,
   -5306, -5306, -5306,  4477, 24163, -5306, -5306,  5151, -5306, -5306,
   50560, -5306, -5306,   393,   393,   393,   393,  2671,  4837, -5306,
   -5306, -5306,  4968,  4757, -5306,  2140,  4845, -5306, -5306, -5306,
   -5306,  7690,   445,  4845, -5306, -5306, -5306, -5306,  3318, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
    4481,  6323,  6323, -5306,  5228,  5022, -5306, -5306, 24163, 24163,
   -5306, 24163, -5306,  1330,  4502,  4958, -5306, -5306, -5306, -5306,
   24163, -5306, 24163, -5306, -5306, 24163,  4845,  4845,  4845,  6323,
   -5306, -5306,  4229, -5306, -5306,  4507, -5306, -5306, 24163, -5306,
   24163, -5306, 24163, -5306, 24163, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,   286,  6323, -5306, -5306, 24163, 24163, -5306,
   -5306, -5306, 85909, -5306,  2440,  4503,  4782, -5306, -5306, -5306,
    2440,  4626, -5306, -5306,  2440,   282, -5306, -5306, -5306, 85909,
   -5306,  2552,   417, -5306, 24163,  4448,  5079,  4505,  5253,  4512,
   -5306, 41368, -5306,  4513,  4515, -5306, -5306, -5306,  6323, -5306,
    5144,  5091, -5306,  2440, 85909, -5306, -5306, -5306, -5306, 67271,
   76921,  4518,  4517, -5306,   132, 50560, 50560,  3880,  3880,  3880,
    3880, 84625, -5306, -5306, -5306, -5306,  1868, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,   132,   132, -5306, 36461, 56784, -5306,
   -5306, -5306, -5306, -5306, -5306,  3849, -5306, 67271,  2724, 21215,
   -5306, -5306, -5306, 21215, -5306, -5306,  1063, -5306,  4846, -5306,
   39996, -5306,  4523, -5306,  4522, -5306,  1996,  4860,  5154, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,  4530, -5306, -5306,  2493,  2310, -5306,
   -5306, -5306,  4624,  4559, -5306, -5306, -5306, -5306, -5306, 71123,
   -5306, -5306, 40706,  5162, 71123, -5306, -5306,  5112, -5306,  5743,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
    1509,  5130,  5309, -5306,  4552, -5306, -5306, -5306, -5306,  4660,
   -5306,  4552,  3977, -5306, -5306, -5306,  5040, -5306, -5306, -5306,
    5044,  4845, 85909, -5306, -5306, -5306,  1595,  2273,  5191,  2263,
    4564, 85909,  2263,  4845, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306,  1073, -5306, 82057,
   -5306, -5306, -5306, -5306, -5306,  5159,  5160, -5306, -5306, -5306,
   -5306,  4902, -5306, 69839,  2808, -5306,  2577,  4608, -5306, -5306,
   -5306,  1948, -5306,  2808,  2573,  2573,  5226,  3082,   224,  3082,
   39996,   377,  1830,  5215,  2528,  2584,  4612,  5143,  3082,  3082,
     132, 58839,   224, 67271,   191, -5306, -5306, -5306, -5306, 71123,
     199,   272,   299, -5306, -5306, 59524,  4215,   282,   282,   224,
    2493,  2493,   132,   282, -5306, -5306, -5306, 82057, 85909, -5306,
    2031,   282,  4215,  4215,  3082,   316,  2493,   224, -5306,   224,
     224,  1847,   191, -5306, -5306, -5306,   282,   191, 39996, -5306,
    8108, -5306, -5306, -5306, 40706, 85909,  1915,  5132, -5306,  4570,
   54026, -5306,  4753, 24163, 24163,  5174, 85909,  5178, -5306,  4986,
   -5306, 85909, -5306,  1063, -5306, -5306, -5306,  4889,  5094,  2566,
   -5306, -5306,  2578, -5306, -5306,  2615, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,   387,  5137,
   85909, -5306,   387,  4462,   387,  4462,  1063, -5306, -5306,  4071,
   -5306,  5275, -5306,  4942,  3894, -5306,  4845, -5306,  4796,   393,
    5073,  5073,  5073,  5073, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306,  5254,  4964,  8753,   387, -5306,   387,   387, -5306,
    4611,  4615, 24163,  2172,  5240,  3761,  2609,  2628,  4894,  4856,
   -5306,  4784, -5306,  3801,  3851,  3872,  1549,  3333, -5306, -5306,
   -5306, -5306,  5269,  3318, -5306,  5362, -5306,  3318, -5306, -5306,
   -5306, -5306, -5306, -5306,  4628,  3892,  4845,  4845,  3902, -5306,
   -5306, -5306,  2629,  2002,  3925,  3995, -5306, -5306, -5306,  4629,
   -5306, -5306,   593, -5306,  4630, -5306, -5306,  2654,  5371,  2374,
   24163, -5306, -5306, -5306, 85909,  4727,  1216, -5306,  2717, -5306,
   -5306,  4636, -5306, -5306,  4631, -5306, 67271, 21215,  3880,  3880,
   -5306, -5306, 77563, 15265, 15265, -5306, -5306, -5306, -5306,  4318,
   -5306, -5306, -5306, -5306,  4637, 73049, -5306, -5306,  4639,  4638,
   -5306, -5306, -5306, 83983, -5306,  2789, -5306, -5306,  5403, 21215,
   -5306, -5306, -5306, 82057, -5306,  4644,  4645, 71765,  2970,  2790,
   -5306, -5306, -5306, -5306, -5306, 71123, -5306,   360, -5306,  7917,
   -5306,  8617, -5306,  1367, 85909,  4114, -5306, -5306,  1967,  4771,
   -5306, -5306,  7205,  4649, 85909,  2493, -5306,  4650,  5412, 24163,
    4655, 24163,  4663,  2795, -5306,  2573, -5306,  2573, -5306,  1595,
    5408,  5409,  5358,  5413,  2273, -5306,   283, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,  4671, -5306, -5306, -5306, -5306,  1100,
    2455, -5306, -5306,   224,  4672,  2455,  5353, -5306,  4678,  5320,
    5321,  2573, -5306,  2808, 71765, -5306,  2808,  2808, -5306, 71765,
   39996, 71765, -5306, 46479, 71765,  3082, 85909, -5306,  5361, -5306,
    5328, 71765, 71765,  2493, -5306, -5306, 39996,  4681, -5306,  2263,
   -5306, -5306, -5306,  2767, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306,  4690, -5306, -5306, -5306, -5306, -5306,  2440, -5306, -5306,
    2493, -5306, -5306,  5158, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, 71765, -5306, -5306, -5306, 39996, -5306, 39996, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
    5579,  1148, -5306,  4691,  4692, -5306, 85909, -5306, -5306, 71123,
   -5306, 44302, 85909, -5306, -5306, -5306, -5306, -5306,  4845,  6323,
    5086, -5306, -5306,  4806,  2493,  5056, -5306,  5168, -5306, 85909,
     234, -5306, -5306,   282, -5306,   282, -5306,   282, -5306, -5306,
     113, -5306, -5306, -5306, -5306, -5306,   435, 30796, -5306, -5306,
    5073,  2133, -5306, -5306, -5306, -5306, -5306, -5306,  5341,  5212,
   91977,  5333, -5306, -5306, -5306, -5306, -5306,  4711,  2263, -5306,
   -5306,  4715, 80773, -5306, -5306, 24163, -5306,  4946, -5306,  5059,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,   387,
   -5306, -5306, -5306, -5306,  4215, -5306, -5306, -5306,  4717, -5306,
     282, -5306, 24163, -5306, -5306,  4720,  4989,  2263, -5306,   282,
   -5306,  4599,  4726, 85909, -5306,  5091, -5306, 78205, -5306, -5306,
   -5306, -5306, -5306,  4697, -5306,   112, -5306, 85909, -5306, -5306,
    4215,  5089, -5306,  2796,  4923,  4731, 85909, 85909, 85909, -5306,
   -5306, 40706,  4732, -5306,  5491, -5306,  5112, 92526, -5306, -5306,
    5088,  1367, -5306,  2334,  4737,  4739, -5306, -5306, -5306,  5443,
    1521, -5306, -5306, -5306,  5334,  1986, -5306,  4114, 85909, -5306,
    5289,  4745, -5306, 85909,  5290, -5306,  4845, 85909,  4845, 85909,
   -5306,  5425,  5425, -5306,  2172,  2172,  5493,  2172, -5306,  5495,
    5496,   283, -5306,  5259, -5306,  5352, -5306,  5450, -5306, 85909,
    5451, -5306, 24163,  2808, -5306, -5306, 71765,  5251,  -172, 71765,
   71765,  1476, -5306, 71765,  1502,  4096, -5306, 71765,  4638, 85909,
   -5306, -5306,  1438, -5306, -5306, 67271, -5306, -5306, 71123, -5306,
   -5306,  5277,  1915, -5306, 85909, -5306, -5306, -5306,  4775, -5306,
    4769,  5513, -5306, -5306,  4776, -5306, -5306, -5306, -5306, -5306,
    1218, -5306,  2812, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306,   618, 85909,  3587, -5306,  4972, -5306,  2133, -5306,  5272,
   71123, -5306, -5306, 24163, -5306, -5306, -5306,  1328,  4000, -5306,
   -5306, -5306,  4781, -5306,  4785,  4239, -5306,  6088,  4916,  4371,
    4372,  4376,  4962,  5129, -5306,  4967, -5306, -5306,  4790, 30796,
   -5306,  1677, -5306, -5306, -5306, -5306, -5306, -5306, -5306,  5208,
   -5306,  4797, 85909,  2824,  2263,  4800,  2828,  4801, -5306, -5306,
   -5306,   519,   360, -5306, -5306, -5306, 92526,  1388, -5306, -5306,
   -5306,  4791,  4795, -5306,  4799, -5306, -5306, -5306, -5306,  5384,
   -5306, 45037, -5306, 85909, -5306, -5306, -5306,  5174,  1521, -5306,
   -5306, -5306, -5306, -5306, -5306,  2832,  2838,  1894, -5306, -5306,
   -5306, -5306,  2172, -5306,  2172,  2172, -5306,  4803,  5176, 71765,
    1376,  4804, -5306,  4004, 71765,  5251,  1565,  1339, -5306,  1339,
   -5306, -5306,  5517,  5519,  1915, -5306, -5306, -5306, -5306, -5306,
     224, -5306,  4813, 71123, -5306, -5306,  4638,  1227, 85909,  5428,
    4248,  6552, -5306, -5306,  5023, 85909,  4908, -5306,  7690,  5010,
    5556,  5557, -5306, 85909, 85267, -5306, -5306,  5396, 30796, -5306,
   -5306, -5306,  3850, 91977,  2263, 80773, 80773, -5306, -5306, -5306,
    1134, -5306,  5583,  1835, -5306, -5306,  1036, -5306, -5306, 85909,
    4825,  4906, -5306, -5306,  4898, -5306, -5306,  4187, -5306, -5306,
    1527,  2844,  1387, 85909, -5306,  5426,  1387, 85909,  5299, -5306,
     210,   223,  2086,  1388, -5306, -5306, -5306, -5306, 85909, -5306,
   85909, 85909, -5306,  3353,   114, -5306, -5306, 85909, 49854, -5306,
    1567, -5306, -5306, -5306, -5306, -5306, -5306,  5578, -5306,  5580,
    4835,  4839, -5306, -5306, -5306, -5306, -5306,  5513,  2440,  5091,
   -5306, 85909, -5306, -5306, -5306,  1339, -5306,  4843, -5306,  4844,
    4849, -5306, 33007, -5306, -5306, -5306, -5306,  5494, -5306,  2854,
   -5306,  1466,  5438, -5306,  5492, -5306,  2493, -5306,  4926, -5306,
    4248, -5306, -5306, -5306,  4893,  5498,  5448,   132, -5306, 82057,
   33007, -5306,  5346, -5306,  5298,  5569, -5306,  5620,  5982, -5306,
   -5306, -5306, 24163,  5216, -5306, -5306,  5058,  5060, -5306, -5306,
    2865, -5306, -5306,  4918,  3639, 67271, -5306, -5306, -5306, -5306,
   -5306, -5306,  6088, -5306, -5306,  4994,  2035, -5306,  2877, -5306,
   -5306, -5306,  2440, -5306,  4868, -5306,  5232,   132,   132,  5236,
     132,   132,   132,   132,  4877,  4187, -5306,  5231,  2931,  1387,
    2301,  2263,  4874,  1479,  4879, -5306, -5306,  4871, -5306,  4880,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,  5429, 85909,
   -5306, -5306, 71123,  4986, -5306, 85909, 85909, -5306, -5306, 83983,
   83983, -5306, -5306,  2956,  4887,  4892,  4897, -5306, 85909,  4903,
   85909, 85909,  2805,  2805, 19004, -5306, -5306, -5306, -5306, -5306,
   -5306,  3183, -5306,  4912, -5306, 85909, -5306, -5306, -5306,  1781,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, 54720, -5306,
   -5306,  5484, -5306,  4936,  1604,   132, -5306,  3962,  4845, 24163,
   -5306, -5306, -5306, -5306, 85267, -5306,  4888, -5306,   132,   377,
   -5306, -5306, -5306, -5306, -5306, 85909, -5306,  4913, -5306, -5306,
      96,   132,  2493,  2493,   132,  2993,  2993,  2440, 82057,  4982,
   -5306, -5306,   132, -5306,  1879,  5103,  2493,   132,   341,  2301,
   -5306, -5306,   132, -5306, -5306,   341,  1479, -5306, -5306, 85909,
   -5306, -5306, -5306, -5306,  5270, -5306,  4401,  4920, -5306,   133,
    5347,  5596,  5283, -5306, -5306,  4925,  2973, -5306, -5306, 85909,
   85909,  4930,  2988, 85909,  3009,  3018, -5306, -5306,  4927,  5091,
   -5306,  1182,  1182, -5306, -5306, -5306, -5306,  4931, -5306,  1090,
   -5306, -5306,  3962,  4845, -5306, 67271, 21215, -5306,  4906, -5306,
   -5306,  3023, -5306, 27848, -5306, -5306, -5306,  2493, -5306, -5306,
    2493, -5306, -5306, -5306, -5306, -5306,  3035, -5306, 82057,  1339,
    1339,   341,  1879, -5306, -5306, -5306,  3134, -5306,   282, -5306,
    5554,  5378, -5306, 55414, -5306, -5306,  4939, -5306, -5306, -5306,
   85909, -5306,  4552, -5306,  5478,   637, 85909, -5306, -5306, -5306,
   -5306, -5306,  3041,  3042, 85909,  1879,  3077,  2301,  1479, -5306,
    3095, -5306, -5306,  2069,  5392,  5533,  5534,  1151, -5306,  3352,
    3352,  1720, -5306, -5306,  5488, -5306, -5306,  4913, -5306,  4949,
   -5306,  3639, -5306, -5306, 82057, -5306,  4982, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, 85909, 85909, -5306,  4114,  4953, -5306, -5306, -5306,  5529,
   -5306, -5306, -5306,  5132,  1879,  3123, -5306,  1879, -5306, -5306,
   -5306, -5306, -5306, -5306,  5445,  5667, -5306,  4960, -5306,  3352,
   -5306, -5306, -5306, -5306, -5306,  1690,  5261,  4826, -5306, 27848,
    4971,  4187, -5306, -5306, -5306, -5306, -5306, -5306, -5306,  5020,
    5317,  5661, -5306, -5306,  1879, -5306,  1182,  1182, -5306, -5306,
   -5306,  1690, -5306,  5711,  5191, -5306, -5306, -5306,  4114, -5306,
   -5306,  5096, -5306, -5306, -5306, -5306,  2172,  5626, -5306, -5306,
    5570,  4975,  1856,  2293, 60851,  5511, -5306, -5306, 82057, -5306,
   -5306, -5306, -5306, -5306, 82057,  3126, -5306, -5306, 67271, -5306,
   -5306,  7690, -5306, -5306, 63419,  4976, -5306,   132, -5306, -5306,
   67271, -5306, -5306, 21215, -5306, -5306
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  1233,  2462,     0,   529,     0,  1450,   813,   559,  2313,
    2455,  2456,  2240,     2,   602,   257,  2662,  2663,   476,  2242,
    2527,     0,     0,   598,  1466,   954,   709,     0,   396,     0,
       0,   605,  2245,   394,   257,  1515,  3183,  2362,     0,  3280,
    2302,     0,  1513,   600,  2624,  3536,  2886,  2934,  2935,  2963,
    2780,  3058,  3080,  3106,  2868,  2867,  2870,  2869,  2871,  2872,
    2873,  2874,  2875,  2876,  2753,  2877,  2878,  2879,  2881,  2880,
    2882,  2883,  2884,  2754,  3432,   555,  2755,  2833,  2885,  2835,
    2834,  2887,  2756,  2757,  2888,  2889,  2890,  2891,  2759,  2758,
    2892,  2894,  2893,  2836,  2837,  2895,  2896,  2897,     0,  2899,
    2760,  2761,  2762,  2763,  2764,  2898,  2765,  2900,  3437,  2901,
    2902,  2766,  2903,  2904,  2905,  2906,  2908,  2907,  2909,  2910,
    2912,  2913,  2914,  2911,  2915,  2916,  2918,  2917,  2839,  2919,
    2838,  2920,  2767,  2921,  2922,  2923,  2924,  2925,  2926,  2927,
    2928,  2929,  2930,  2206,  2931,  2932,  2933,  2955,  2936,  2938,
    2937,  2840,  2939,  2940,  2941,  2943,  2942,  2944,  2946,  2768,
    2769,  2770,  2945,  2947,  2948,  2949,  2950,  2951,  2953,  2952,
    2957,  2958,  2841,  1466,  2772,  2773,  2954,  2956,  2751,  2959,
    2960,  2842,  2843,  2961,  2774,  2830,  2962,  3282,  2965,  2964,
      85,  2966,  2776,  2967,  2968,  2969,  2970,  2971,  2973,  2975,
    2972,  2976,  2977,  2983,  2777,  2974,  2978,  2979,  2980,  2981,
    2982,  2984,  2844,  2985,  2987,  2986,  2988,  2989,  2990,  2991,
    2845,  2992,  2831,  2993,  2994,  2995,  3008,  3009,  2999,  3000,
    3002,  3003,  3006,  3001,  3007,  3012,  3011,  3013,  3014,  3015,
    3016,  3017,  3010,  2997,  3004,  3005,  2998,  3018,  3019,  2996,
    3020,  3022,  3021,  3023,  2846,  3024,  3025,  3026,  3027,  3028,
    3029,  3030,  3031,  3033,  3032,  3034,  2847,  2848,  2849,  3035,
    3036,  3037,  2824,  3038,  2850,  2851,  3041,  3042,  3039,  3040,
    3043,  3044,  3049,  3050,  3051,  3046,  3045,  3047,  3048,  2852,
    2853,  2854,  3052,  3053,  3054,  3055,  3057,  3056,  2779,  2778,
    2781,  3059,  3060,  2782,  3061,  3063,  3062,  2826,  2783,  3064,
    3065,  3067,  3066,  2855,  2856,  2784,  2785,  2786,  3068,  3069,
    3070,  3071,  3072,  3073,  3074,  3075,  3076,  3077,  3078,  3079,
    2857,  2858,  3081,  3082,  3083,  3085,  3084,  3086,  3087,  3088,
    3089,  3090,  3091,  3092,  2787,  3093,  1466,  3094,  3095,  2788,
    3097,  3096,  2789,  3098,  3099,  3100,  3101,  3102,  2825,  3437,
    3103,  3104,  3105,  2859,  3107,  3108,  3109,     0,  3110,  3111,
    3112,  2790,  3113,  3114,  2860,  2832,  2791,  3115,  3117,  2538,
    2792,  3116,  2794,  2795,  3118,  3119,  3120,  2793,  3121,  2796,
    3122,  3123,  3125,  3124,  3126,  3127,  3128,  3129,  2797,  3130,
    3131,  2798,  3132,  2799,  3133,  3134,  3135,  3136,  3138,  3137,
    3139,  3140,  3141,  3142,  3143,  3144,  3146,  3148,  3147,  3145,
    3149,  3150,  2861,  3151,  2800,  2862,  3156,  3157,  2863,  3152,
    3153,  3154,  3155,  2339,  3158,  3159,  3160,  2803,  3161,  3162,
    3164,  3163,  2801,  2802,  3165,  3166,  2807,  3167,  3168,  3173,
    2864,  2865,  3169,  3170,  3182,  3171,  3172,  3175,  3174,  3176,
    3177,  2752,  2804,  3178,  3179,  2805,  3180,  2806,  3181,  2866,
       0,     0,     3,     8,    22,     0,    44,    27,    32,    17,
      21,    16,    46,    60,    52,    29,  3434,   472,   473,   474,
     475,    42,  3468,    41,    11,    63,    64,    19,    49,    12,
      15,    18,    40,    48,    36,    43,    56,    57,  1536,  1512,
    1540,  1511,  1507,  1503,  1522,  1523,  1524,  1530,    25,    26,
      33,    50,    68,    23,    65,    61,    24,  2462,    13,    28,
      14,    51,    45,    37,    62,    69,    38,     0,  2667,  2680,
       0,  2681,  2749,  2747,  2750,  2746,  2748,    58,    59,    39,
      67,    31,    53,    30,     9,    10,    20,    54,    55,    47,
      70,    34,    66,    35,  1275,     0,     0,     0,     0,     0,
    2238,     0,     0,  2238,  1359,  1580,  3466,  3467,  3468,  1467,
       0,  1468,     0,     0,  2828,  2754,  2827,  2755,  2757,  2811,
    2758,  2814,  2815,  2808,  2767,  2816,  2829,  2770,  2771,  2812,
    2713,  2774,  2817,  2775,  2777,  2809,  2810,  2818,  2813,  2786,
    2819,  2788,  2820,  2821,  2822,  2797,  2798,  2823,  2802,  2714,
    2806,   287,  2678,   261,  2679,  2710,  2708,  2712,  2706,  2707,
    2711,  2705,  2709,   531,   130,     0,     0,     0,     0,   335,
    2334,  2238,  2210,  2238,  2238,  2238,  2238,  2238,     0,  2238,
    2238,     0,  2241,  2238,  2238,     0,     0,     0,   522,  2248,
    2529,     0,  2548,  2549,  2543,  3270,  3271,  3265,   483,     0,
       0,     0,  2429,  2428,     0,     0,   381,   393,   396,   389,
     392,     0,   257,  1469,   483,  2311,   395,   396,     0,  1545,
    3185,     0,  2434,   396,     0,  2311,  2542,     0,     0,  2625,
    2622,  2500,  2502,     0,  2498,  3437,  1653,  1652,   557,     0,
    2668,     0,  1445,  1477,  1403,     0,  3438,  3439,     0,    77,
      80,  2467,   418,     0,     0,     0,   811,     0,     0,  1411,
       0,  3439,  3449,  2540,     0,   130,  1384,     0,   130,  2345,
    2238,  2238,  3519,  3520,     0,     0,     0,  3514,     0,  3521,
       0,  1540,     0,  1526,     1,     5,     0,     0,   811,  1190,
    1191,  1189,   811,   811,     0,     0,     0,     0,     0,  3473,
    3466,  3467,  3468,     0,  2192,  2059,  1541,  1540,  2139,  2143,
    3453,  3452,  3454,     0,     0,  2139,  1531,  2950,  2773,  3063,
       0,  2447,  2461,  2445,  2656,  1509,  1505,  3188,     0,  1236,
    1276,  1239,     0,     0,  1241,     0,     0,  1256,  2689,  2688,
    2687,  1253,  1252,  1251,  1249,     0,   673,   257,     0,  1361,
       0,     0,     0,  3474,  3473,     0,  1422,  2449,  2450,  2451,
    2452,  2453,  2454,  2457,   289,     0,   542,   545,     0,   534,
     537,     0,   131,   132,  1448,  1451,     0,   814,     0,   171,
       0,   372,   374,     0,   371,   373,  2736,   560,   336,   337,
     339,     0,   359,     0,     0,     0,   448,   354,   446,     0,
     447,  2733,  2730,  2735,  2731,  2734,  2732,  2338,  2337,     0,
    2336,  2314,     0,  2334,     0,  2236,  2238,     0,     0,     0,
       0,     0,     0,   257,     0,  2430,   257,  2220,  2238,  2238,
     603,   577,  3335,  3350,  3351,  1594,  3347,  3352,     0,  3349,
    3341,     0,  3345,  3339,     0,  3371,  3343,  3348,  2942,  2770,
    2957,  3072,  3076,  3092,  3095,  2822,  3139,  3329,  3314,  3330,
       0,     0,  3333,  3337,     0,     0,  2249,  2250,  2251,  1357,
    2530,  2531,  2532,     0,  2552,     0,   496,     0,     0,     0,
       0,   471,   485,   486,     0,     0,   492,     0,   483,     0,
     457,   469,   459,     0,   487,   468,   461,   460,   462,   463,
     464,   465,     0,   466,   467,   470,     0,   453,   454,   599,
     455,   456,   483,  2684,  1464,     0,  2612,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1594,  1594,  1594,  1591,
       0,     0,     0,  2617,     0,     0,     0,     0,  2608,     0,
    2618,     0,     0,     0,  2610,  2611,  2664,  2665,     0,     0,
       0,     0,  2615,     0,     0,     0,     0,     0,  2591,  1655,
       0,  1591,     0,  2607,  2614,     0,  2599,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1591,  2590,     0,  2609,  2616,     0,  1594,  1591,  1591,
       0,     0,  2869,  2753,  2884,  2811,  2895,  2897,     0,  2760,
    2761,  2762,  2763,  2764,  2808,  2919,  2838,  2920,  2921,  2922,
    2773,  2842,  2961,  2968,  2986,  2988,  2845,  3027,  3029,  3034,
    2847,  2848,  2849,  3039,  3040,  3054,  2826,  2855,  2856,  3070,
    3077,  3102,  2859,  3107,  3112,  3115,  3135,  2862,  3156,  3157,
    2863,  3155,  2823,  3167,  3173,  3176,  3177,  2804,  2866,     0,
       0,     0,     0,  1654,     0,     0,  1893,  1538,  1729,   955,
    1608,  1612,  1628,     0,  1727,  1726,  1730,  1732,  1738,  1647,
    1759,  1698,  1699,  1701,  1821,  1700,  1705,  1706,     0,  1869,
    1707,     0,     0,  1704,  2604,  1703,  1702,  2605,  2606,  1697,
    2642,  2678,     0,  2666,   711,   710,     0,   408,   403,   411,
     405,   407,   406,   412,   413,   414,   409,   404,   410,   397,
       0,   382,     0,   390,  3450,     0,     0,   483,   606,  2312,
    2253,  2256,  2252,   415,  3335,  2870,  3076,  3303,     0,  3313,
       0,  3465,  3459,  3462,  3461,  3457,  3460,  3458,  3463,  1566,
    3464,  1565,  1516,  1546,  1563,  1564,     0,     0,     0,  1111,
    2744,  3214,  3215,  2824,  2826,  2825,  3216,  3152,  2745,     0,
       0,  2673,     0,     0,  2674,  2741,  2739,  2743,  2738,  2742,
    2737,  2740,  3184,  3200,  3196,     0,     0,     0,  2442,  1186,
    1185,     0,     0,     0,  2384,     0,  1111,  2442,  2385,     0,
    2116,  2432,  2435,     0,  3218,  2398,  1187,  3219,  2428,     0,
    2370,  2386,  2347,  2391,   130,  3220,     0,  2431,  2116,  2442,
       0,  2363,     0,     0,     0,     0,  1579,     0,   391,  3281,
    1357,  2283,  1514,  2269,   601,     0,     0,     0,  2499,  3433,
     562,   556,     0,     0,     0,     0,     0,  3442,  1940,  2207,
       0,    81,    76,     0,     0,     0,     0,  2661,  3283,    86,
       0,     0,  3533,    74,     0,  2517,     0,  2515,  2512,  2514,
       0,  3442,     0,  2539,  1391,  1391,     0,     0,  1383,  1385,
    1386,  1391,  1391,  2346,     0,     0,     0,  2598,  2596,  2597,
    2669,  3516,  2595,  2594,  3525,  3527,  3510,     0,  3513,  3512,
    3522,  1529,  1528,     6,    71,     0,   257,   257,   811,   173,
     811,   141,   144,   811,   811,   811,   811,   153,   157,     0,
     259,     0,     0,  3473,  1544,     0,     0,  1556,  1542,  1955,
    1543,  1957,  1954,  1953,  1952,  1983,  1984,  1986,  1985,  1987,
    1989,  1980,     0,     0,  2205,     0,  2200,  2060,  2065,  2059,
       0,     0,     0,     0,  2138,  2116,  2147,  2140,  1508,  2136,
       0,  1504,  1569,  1569,  3456,  3455,  3451,  2141,  1527,  1535,
    1533,  1534,  2142,  1525,     0,  2459,  2658,     0,  2464,     0,
    2139,  2143,     0,     0,  1127,     0,   264,  3471,  3472,  3470,
    1594,  2690,  2693,  3469,  2694,   264,  1250,     0,   674,  2239,
       0,     0,     0,     0,     0,     0,   676,   675,   612,     0,
       0,  1365,  1366,  1360,  1362,  1364,     0,     0,     0,     0,
    2463,     0,   291,   288,   260,     0,   333,     0,   532,   538,
      87,     0,  1452,  2229,  2231,   170,     0,     0,   362,     0,
     344,     0,     0,  1051,  1073,  1071,  1092,  1037,  1057,  1053,
    1057,  1047,  1092,   986,   986,  1092,  1050,   986,  1057,  1052,
       0,  1049,  1092,  1048,   986,     0,  1041,  1073,   980,   981,
     986,  1071,  1007,     0,  1057,  1030,  1029,  1092,  1033,  1034,
    1032,  1036,     0,  1038,  1057,  1043,  1031,  1035,     0,     0,
    1071,  1071,  1071,     0,  2736,  1071,     0,   346,  1123,   966,
     968,   967,   969,   970,  1057,  1073,  1073,     0,     0,  1071,
    1079,   450,   446,  2733,  2731,  2734,  2732,   340,   342,     0,
       0,     0,   361,     0,  2315,     0,  1554,  2059,  2317,  2322,
    2328,  2332,  2335,  2212,     0,     0,     0,  2213,  2217,  2223,
    2222,  2216,  2430,     0,  2226,   687,     0,     0,     0,  2227,
    2208,     0,     0,  3336,  3334,  3368,  3367,  3372,     0,  3369,
    3365,     0,  3328,  3373,  3358,  3405,  3362,  3405,  3405,  3359,
    3366,  3405,     0,  3364,  3363,     0,  3331,     0,     0,     0,
    1358,  2256,  2533,  2534,     0,  1487,  2554,  2553,  2550,  2051,
    3267,  3272,   490,  2720,  2719,  2682,   497,  2683,  2716,  2718,
    2715,  2717,     0,     0,  3039,     0,   502,   501,   500,     0,
     519,   490,   493,   511,     0,     0,   331,   478,   484,   479,
       0,   517,   520,   552,   550,   592,   588,   596,   590,   458,
    2685,     0,     0,     0,     0,  1733,  2057,  2057,  2057,     0,
       0,  1948,     0,     0,     0,     0,  2057,     0,  1765,  1744,
    1745,     0,  1766,     0,     0,     0,     0,     0,     0,     0,
       0,  1899,     0,     0,     0,     0,     0,     0,     0,  2664,
    2665,     0,     0,     0,  1942,  1944,  2642,  2666,  2057,     0,
    2057,     0,  1599,  1775,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2057,  2057,     0,  2057,
    1783,     0,  2592,  2613,  1787,  1789,  1788,  2057,  2057,     0,
       0,  2057,     0,     0,     0,  2601,  2600,     0,     0,     0,
       0,     0,     0,     0,  2619,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2621,     0,     0,     0,
    2620,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1735,     0,  1734,  1736,     0,  1538,   956,     0,     0,
       0,     0,  1651,  1650,     0,  1649,  1648,     0,     0,     0,
       0,  1657,  1659,  1661,  1656,  1658,  1660,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1737,     0,     0,
       0,     0,     0,  2593,     0,  1831,     0,   723,  2525,     0,
       0,     0,   380,  1471,  2695,     0,  1470,  1474,  3267,   585,
    2256,  2246,  2255,     0,  3334,     0,     0,     0,  3331,  1580,
    1562,     0,     0,  3186,  3194,  1110,     0,     0,  1113,  1115,
    2274,  2273,  1114,  1123,     0,  1112,     0,  3255,     0,     0,
    3240,     0,  3221,     0,  1119,  1121,  1120,  3235,  1118,     0,
       0,     0,  3205,     0,     0,   811,     0,     0,     0,     0,
       0,     0,     0,  2413,     0,  1579,  1579,  2364,     0,  2442,
       0,  2442,  2432,  2438,  2397,     0,     0,   867,  2121,  2117,
    2390,  2436,  2437,  2442,     0,     0,  2442,     0,  2404,  2432,
    2442,  2359,     0,     0,  2351,  2356,  2352,     0,  2358,  2357,
    2360,  2348,  2349,     0,  2377,  2406,     0,  2389,  2396,     0,
    2376,  2383,     0,  2394,  2432,  2432,     0,  2442,  2442,  2442,
       0,  1580,     0,   583,  2623,  2626,  2630,  2634,  2501,   329,
       0,     0,     0,  1479,  1481,  1480,  1497,  1405,     0,  3441,
       0,  3443,     0,  3445,     0,    78,     0,     0,  2494,  2492,
       0,     0,     0,  2486,  2488,  2491,  2487,     0,     0,  2493,
     130,     0,  2489,  2468,  2471,  2478,  1579,  2469,     0,     0,
     416,   419,   421,     0,   424,  2051,  3286,  3285,     0,     0,
       0,  1409,  1412,     0,  2522,  2519,   130,     0,  2821,  3448,
    3446,     0,  1379,  1395,  1377,  1389,  1390,     0,     0,  1382,
    1381,  3267,  3534,  3535,     0,     0,  3511,  3528,  3509,     0,
    3523,  3524,  3508,     7,     4,   147,     0,     0,     0,   138,
     811,   811,   133,     0,   811,     0,   155,  1580,  1580,   811,
     811,   811,     0,     0,  1953,  1983,  1984,  1986,     0,  1985,
       0,     0,  2051,     0,     0,  1975,  1999,     0,  1999,  1977,
    1978,     0,     0,     0,  1556,  1981,  2670,  2201,  2204,     0,
    2193,  2195,  2196,  2687,  2198,     0,     0,  2062,  2065,  1571,
    2129,  2130,     0,  2128,     0,  2118,  2122,  2127,  2125,     0,
    2109,  2146,  2137,  2185,  1570,  2144,  2145,  1532,  2448,  2446,
    2465,  2466,  2657,  1510,  1506,  3263,  3264,  3261,  3262,  3260,
    3189,  3190,  1128,  1127,   805,   808,   807,     0,     0,  1240,
    2692,     0,  1242,     0,  2430,  1257,     0,     0,  2430,   623,
    2430,   677,  2693,  3398,     0,  3410,  3387,  3267,  1363,  3475,
    3476,  1247,  1245,     0,  1423,  1424,  1427,     0,   292,   294,
     543,   546,   483,     0,     0,     0,  1462,     0,  1460,  1459,
    1457,  1458,  1456,     0,  1447,  1453,  1454,  2430,   615,   366,
     562,   345,   338,   341,   343,     0,  1074,   992,  1072,  1092,
    1090,  1092,  1014,  1093,     0,  1061,  1059,  1058,  1054,  1061,
    1017,  1136,  1130,  1134,  1131,  1023,  1132,     0,  1138,   987,
    1037,  1092,  1025,     0,   986,  1016,  1022,  1061,     0,  1011,
    1020,  1092,   979,  1024,  1010,     0,  1061,  1026,  1039,  1042,
    1044,  1046,  1061,  1092,     0,   450,   986,  1009,  1008,   986,
    1061,     0,     0,     0,  1108,  1055,  1040,  1132,  1138,   986,
    1092,  1061,     0,  1080,  1061,     0,     0,   355,   364,   449,
    2148,  1980,     0,  2318,  2324,  2233,  2235,  2656,     0,  1555,
    2320,  2107,     0,     0,     0,  2330,  2237,     0,  2214,     0,
     687,  2219,  3326,   690,   689,  2224,   688,  2275,  3385,  2218,
    1367,     0,     0,   483,   575,   578,  3361,  1595,     0,  3342,
    3346,  3340,  3344,     0,  3324,     0,     0,  3332,     0,     0,
    3370,  3353,  3357,  3356,  3354,     0,  3355,  3360,  3338,   477,
     523,  2243,  2535,  3167,  2536,  2528,     0,  2551,     0,  2052,
    2053,     0,     0,  2055,  3269,  2148,     0,  3266,   498,     0,
     490,     0,     0,     0,   514,  2686,   494,   490,   504,   513,
     582,   332,     0,   289,   488,     0,   335,   562,     0,   483,
     483,     0,  3267,     0,  2058,     0,  1914,     0,     0,     0,
       0,     0,     0,  1713,     0,     0,     0,  1852,     0,  1914,
    1876,  2178,  2179,  2159,  2160,  2158,  2161,  1592,     0,  2162,
    2177,  1799,     0,     0,     0,  1874,  1537,  1520,     0,     0,
    2027,  2028,  2029,  2030,  2031,  2032,  2033,  2034,  2035,  2036,
    2037,  2038,  2040,  2045,  2041,  2042,  2043,  2044,  2039,  2046,
       0,  2026,     0,  1900,  1865,     0,     0,     0,     0,   956,
       0,     0,     0,     0,     0,     0,     0,  2057,     0,     0,
    2057,     0,     0,     0,     0,  1875,     0,     0,     0,  1873,
       0,     0,     0,  1872,  1757,     0,     0,     0,  2057,     0,
       0,     0,     0,  1689,     0,     0,     0,     0,     0,  2057,
       0,     0,     0,     0,     0,     0,     0,     0,  1682,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2049,  2047,  2050,  2048,     0,     0,  1940,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1813,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1761,     0,     0,     0,
    2647,     0,  1156,     0,     0,     0,     0,  1728,     0,     0,
       0,     0,  3221,  1894,  1896,  1602,  1606,  1600,  1604,     0,
    1597,  1596,  1598,  1609,  1662,  2876,  1610,     0,     0,     0,
    1613,  1622,  1626,     0,     0,     0,     0,     0,  1644,  1645,
    1633,  1631,  1632,  1629,  1630,     0,  1635,     0,  1634,  1641,
    1642,  1643,  1646,  1731,  1122,  1739,  2077,  1867,  1868,  1892,
    2081,     0,  2643,  1580,  1685,  1684,  1686,  1687,  1688,   724,
       0,   718,   721,   735,     0,     0,  2524,     0,  2838,  2862,
    2863,   398,   401,   400,   402,     0,     0,     0,     0,     0,
    2254,     0,  2257,  1980,     0,     0,     0,  3389,  3311,     0,
       0,     0,     0,  1576,  1517,  1575,     0,     0,     0,     0,
       0,     0,  3238,     0,  3237,  3236,     0,  3257,     0,     0,
    3242,  3241,     0,     0,  3199,  3243,  3244,  3247,     0,     0,
       0,     0,     0,  3228,     0,  3152,  3201,  3202,  3207,  3197,
    2405,     0,     0,     0,  2410,  2408,  2401,  2412,  2422,  2409,
    2403,  2414,  2402,     0,     0,     0,  2442,  2417,  2419,  2415,
    2442,     0,  2440,  2427,  2426,  2425,  2374,  2373,  2367,  2433,
    2420,  2416,   257,  2442,  2372,  2371,  2353,  2354,  2355,     0,
    2116,     0,  2438,  2407,  2432,     0,  2442,  2442,  2423,  2424,
    2393,  2395,  2301,     0,  1980,     0,     0,  2288,  2281,  2268,
     483,     0,     0,  2628,   483,   558,     0,     0,     0,   708,
    1497,  1483,  1499,  1407,  1406,  1404,  3192,  3440,  3444,  1941,
      80,  2294,  2295,    82,  2293,    83,  2503,  2480,  2479,  2481,
    2485,   130,  2490,  2482,     0,  2495,  2496,   429,     0,   425,
       0,     0,  3284,     0,   812,     0,    75,     0,  1413,  2148,
    2518,  2520,  2513,  3447,     0,  1380,  1397,  1396,  1392,  1393,
    1398,  1388,  1387,  2340,  3517,  3526,  3530,  3515,  1127,  3322,
    3410,   226,     0,     0,     0,     0,   136,     0,   281,     0,
     811,   154,   158,   811,     0,     0,     0,   811,     0,  1996,
    1988,  1990,  1991,  1992,     0,  1995,     0,  1559,     0,  1547,
    1547,  1557,  1998,  1979,  1976,  2000,     0,  1999,  1999,     0,
       0,  1959,  1958,     0,  2051,  1116,  2197,     0,     0,  2061,
       0,  2063,  2072,  2062,  1573,  2148,  1567,     0,  2600,     0,
       0,     0,     0,     0,     0,     0,     0,   806,  2275,  2275,
       0,     0,     0,     0,     0,     0,     0,     0,   265,   274,
    2691,     0,     0,   621,   622,  2275,   620,   663,   664,   667,
     668,   669,     0,     0,   670,  2275,  2275,   617,   643,   644,
     647,   648,   649,   650,   651,   613,     0,   618,     0,     0,
       0,  3422,  1234,  1267,  3477,  1243,     0,     0,  1426,   290,
       0,     0,   483,   530,   539,   533,   535,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    88,    89,   110,     0,  1449,  1461,  2230,  1455,  2275,
    2275,  2275,  2275,   619,   652,   653,   656,   657,   658,   659,
     662,   660,   661,     0,  2430,     0,     0,     0,     0,     0,
       0,     0,  1012,  1094,     0,  1013,     0,  1063,  1064,  1062,
     982,   978,  1137,   989,  1133,  1129,  1139,  1135,  1090,   988,
    1018,  1019,   984,     0,  1231,   996,     0,   985,  1045,   983,
     997,     0,   351,     0,   349,   358,  1021,   994,  1006,   450,
     450,   347,  1126,  1125,  1124,     0,  1015,   990,   991,   993,
    1138,   976,     0,   977,   451,   452,  2148,  2153,  2149,   360,
     379,     0,   378,  2319,  1547,     0,     0,     0,  2659,     0,
    2132,  2108,  2329,     0,  2333,  2332,     0,  2215,  2225,     0,
    2276,     0,     0,  1369,  1368,  2221,  2228,  3267,   483,   576,
     504,  3409,     0,  3408,     0,     0,  3321,     0,  3381,  3384,
    2656,     0,     0,     0,     0,   333,     0,  2537,  1488,  1490,
    1491,  1489,  1497,     0,  2704,  2671,  2056,  2672,  2701,  2699,
    2703,  2697,  2698,  2702,  2696,  2700,     0,  3275,  3276,  3274,
    3268,  3273,   491,   499,   515,   518,     0,   495,   505,   509,
       0,   481,   480,   521,   553,     0,   593,   547,   547,   547,
    1465,     0,  1847,     0,  1848,  1849,     0,  1714,  1949,     0,
       0,     0,  1742,     0,     0,     0,  1851,     0,  1593,     0,
       0,  1717,  1709,  1521,     0,  1878,     0,  1883,     0,  1881,
       0,     0,     0,     0,     0,     0,  1943,     0,  1945,  2643,
       0,  1857,  1888,     0,  1855,     0,  1877,     0,  1889,  1890,
       0,     0,     0,     0,  1861,  1859,     0,     0,     0,  1863,
       0,     0,     0,     0,     0,     0,     0,  1760,  1860,  1862,
       0,  1795,     0,  1845,  1796,  1797,  1798,  2646,     0,  1792,
       0,  1793,     0,     0,     0,     0,     0,  1746,  1747,     0,
       0,     0,  1823,     0,  1748,  1803,     0,  1722,  1824,  1805,
    1753,  1754,  1825,  1826,  1827,  1719,  1720,  1807,  1808,     0,
    1829,  1721,  1809,  1812,     0,  1756,  2148,     0,  1740,     0,
       0,     0,  1758,  1786,     0,     0,     0,  1718,     0,  1815,
       0,     0,     0,  2148,     0,     0,  1762,     0,     0,   957,
    1539,  1710,  2644,     0,     0,  1603,  1607,  1601,  1605,     0,
       0,     0,     0,  1621,     0,     0,  1614,  1624,  1627,     0,
       0,  2079,     0,     0,  1886,  1938,     0,     0,     0,  1841,
    1842,     0,     0,   717,   716,     0,   720,   796,     0,   737,
     725,   714,  2526,     0,     0,  1472,  1475,     0,     0,  2263,
       0,  2260,  2267,   701,  2247,     0,  2258,  2232,     0,  3312,
       0,     0,     0,     0,     0,     0,     0,  1580,  1581,  1581,
    2642,     0,     0,  3225,  3195,     0,     0,     0,  3256,     0,
       0,  3249,  3250,     0,     0,     0,  3222,  3223,  3224,     0,
    2728,  2729,  2675,  2677,     0,  2676,  2726,  2724,  2727,  2722,
    2723,  2721,  2725,  3231,     0,  3204,  3205,  3206,     0,     0,
    2400,  2411,  2443,  2444,  2421,  2418,  2368,  2439,  2148,  2378,
    2399,  2369,     0,  2392,  2350,  2440,  2059,  2432,  2365,  2366,
       0,  1556,  1581,  2284,  1580,  2285,   483,  2627,     0,  2632,
       0,     0,   569,  1446,  1486,  1478,  1485,  1482,  1497,  1495,
    1484,  1182,  1181,     0,  1498,     0,    79,     0,     0,  2483,
    2484,  2477,  2497,  2472,     0,   420,   430,   422,   426,   427,
     428,   423,  2958,  3039,     0,  2059,  3288,  3532,  1420,  1418,
    1417,  1419,  1408,  1414,  1415,  2523,  2521,  2516,  2541,  1395,
       0,  1378,  2342,  2148,     0,  3529,   148,  1127,     0,   169,
    3422,     0,  1206,     0,     0,   134,   208,   281,     0,   279,
    3501,   156,  3491,     0,   149,     0,   261,     0,     0,  1993,
    1994,  1956,  1547,  1549,  1548,     0,     0,  1551,     0,     0,
       0,     0,  1964,     0,  1960,  1962,     0,  2024,  2016,     0,
    2202,  2194,  2199,  2641,  2069,  2113,     0,     0,  1518,  2072,
    1572,  2131,  2120,     0,  2124,  2123,  2126,  1571,  2110,  2113,
    1580,  3191,     0,     0,  1238,     0,     0,     0,   268,   271,
     269,   270,   672,   671,     0,  2430,   665,  2275,  2275,   222,
    2275,  2275,   221,   223,     0,   217,   214,   224,  2275,  1258,
     210,     0,     0,     0,     0,  2148,     0,     0,     0,   228,
       0,     0,  2430,   645,   624,   625,   628,   629,   630,     0,
    3392,  3391,     0,  3412,     0,     0,  3414,     0,  3413,  3411,
    3377,  3388,     0,  1259,  1127,     0,  1269,  1271,     0,     0,
    3477,  1425,     0,   293,   333,     0,   536,     0,     0,  2148,
       0,  2148,  2148,     0,     0,  2148,     0,  2148,     0,     0,
       0,     0,     0,     0,     0,  2148,     0,     0,     0,     0,
    2148,     0,  1463,     0,     0,     0,     0,  2430,   654,     0,
    2275,   614,   631,   632,   635,   636,   637,   638,   639,   642,
     640,   641,     0,     0,   299,   300,   368,   561,  1069,  1067,
    1070,  1068,  1091,     0,  1065,  1066,  1095,  1132,     0,  1132,
     350,   353,     0,   357,   356,     0,     0,   995,   388,   387,
     385,   483,   375,   383,   377,     0,   384,  2156,  2157,  2154,
    2152,  2155,  2316,  2234,  2332,     0,  2657,  1579,     0,  2326,
    2059,     0,  2331,  3267,  3327,   686,   866,  3386,  1367,     0,
     368,   507,   580,  3406,     0,  3426,     0,     0,     0,     0,
       0,     0,     0,     0,   524,  2296,     0,  1497,  1501,  2544,
    3278,  3279,  3277,   516,     0,   512,   504,   289,     0,   547,
       0,   587,   589,   548,   597,   591,     0,  1915,  1946,     0,
    1071,  1071,  1057,  1079,  1932,     0,  1926,  1929,     0,  1071,
    1934,  1071,  1927,  1071,     0,     0,  1924,  1925,     0,     0,
       0,  1853,  1850,     0,     0,     0,  1903,     0,     0,     0,
       0,     0,  1638,     0,  1836,  1858,  1856,     0,     0,     0,
       0,     0,     0,     0,     0,  1864,  1695,     0,  1693,     0,
    1694,     0,  1696,     0,     0,  1846,     0,  1664,  1683,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1941,     0,
       0,  2164,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2648,     0,     0,     0,  1145,  1151,  1154,
    1155,  1157,  1149,     0,  1817,     0,     0,     0,  1897,  1895,
       0,  1619,  1615,     0,  1623,     0,     0,     0,  1637,  1636,
    2081,  2080,     0,  1885,     0,     0,  1939,  2645,  1581,  1832,
    1580,   727,     0,   745,   719,     0,  2148,   722,   736,     0,
     748,     0,     0,     0,   399,     0,  1476,     0,     0,  2264,
    2266,  2636,  2635,  2647,     0,     0,  2259,     0,  3310,  3390,
       0,     0,     0,     0,     0,  1574,  1583,  1577,     0,     0,
       0,  3187,  3239,  3230,     0,     0,     0,     0,  3254,  3248,
    3245,  3246,     0,     0,     0,  3229,  3203,  3209,  3208,  3211,
    3213,  2388,  2387,     0,  2441,  2116,  2361,  2380,  2382,  2442,
    2303,  2306,     0,  2051,  2292,     0,     0,  2286,  2290,     0,
    2631,     0,     0,   330,     0,   568,     0,  2018,  3193,    84,
       0,  2475,     0,  2470,  2473,     0,     0,  3299,  3300,  3292,
    3295,  3293,  3294,  3298,  3301,  3302,  3289,  3296,  2116,     0,
    1410,  1416,  1394,     0,  1401,  1399,     0,     0,  2341,  3518,
    3531,     0,  1259,     0,     0,     0,     0,     0,     0,   815,
    1127,   209,     0,  3507,  3506,  1580,     0,   277,   280,   282,
     276,   324,     0,   237,  3477,   163,   165,     0,   159,   161,
     151,  1558,  1550,  1552,  1547,  1547,     0,  1952,     0,     0,
       0,  1952,     0,     0,   708,     0,  1997,  2013,  1117,  2558,
    2070,  2071,     0,  2066,  2114,  2115,  2068,  2064,     0,  2073,
    2075,  1519,  2119,  1568,     0,  2112,     0,     0,  2188,  2190,
     865,   864,   273,   272,   285,   286,  2174,  2175,  2172,  2173,
     678,   691,  2176,   692,   666,  2148,  2148,  2280,  2279,  2148,
    2148,   216,   213,  2278,  2277,  2148,  2148,   211,   232,   231,
     233,   234,   236,   235,   230,  1254,     0,   679,   680,   646,
       0,   626,  3395,     0,  3402,  3397,  3400,  3380,  3379,  3378,
    3375,     0,  2148,  2148,  2148,     0,  2148,  3421,  3423,     0,
    1262,  1355,  1355,     0,  1355,     0,     0,  1355,     0,  2275,
       0,     0,  2275,   708,  1373,  2275,  2275,  2275,  2275,     0,
    2275,  2275,  2275,  2275,     0,  2275,  2275,     0,  2275,     0,
       0,     0,  2275,     0,  1338,     0,  2275,  2275,  2275,  2275,
    1355,  2275,  2275,     0,     0,     0,     0,  2275,  2275,     0,
       0,  2275,  2275,     0,  1283,  1337,   817,   860,   844,   845,
    1235,  1282,  1284,  1296,   704,     0,  1314,  1340,  1341,  1339,
       0,  3435,     0,     0,   242,  3479,     0,  3481,     0,  1429,
       0,  1428,   544,   540,  2148,  2148,   103,  2148,    95,    96,
      91,   123,   124,    93,    94,    99,    98,   100,   101,   104,
     105,   102,    97,    92,   127,   129,   128,   106,   125,   126,
      90,   685,   684,   683,   682,   655,     0,     0,  2430,   633,
     367,     0,  1077,  1075,  1075,     0,  1075,     0,  1123,   971,
     973,   972,   974,   975,  1077,  1077,  1075,  1075,   301,   369,
     363,     0,  1028,  1232,  1027,   352,   348,  1056,  2148,   365,
     386,     0,  2059,  2660,     0,     0,  2133,  1580,  2321,  2323,
    2211,  2209,   604,     0,     0,   504,  3407,     0,  3320,  3325,
       0,  3383,  3382,  3410,  3410,  3410,  3410,   526,     0,  2244,
    1492,  1497,  1501,     0,  1493,  2555,   506,   510,   482,   562,
     551,   483,     0,  1947,  1916,  1917,  1931,  1933,     0,  1930,
    1919,  1936,  1923,  1928,  1935,  1921,  1712,  1743,  1716,  1715,
       0,     0,     0,  1773,     0,  1901,  1884,  1882,     0,     0,
    1750,     0,  1752,     0,     0,  1838,  1806,  1880,  1776,  1810,
       0,  1755,     0,  1782,  1780,     0,  1692,  1690,  1691,     0,
    1763,  1790,     0,  1681,  1791,     0,  1822,  1769,     0,  1771,
       0,  1772,     0,  1801,     0,  1774,  1804,  1828,  1708,  2166,
    2165,  2163,  1723,  2148,     0,  1777,  1741,     0,     0,  1814,
    2649,  2650,     0,  1816,     0,     0,  1156,  1142,  1143,  1144,
       0,  1146,  1148,  1150,     0,  2148,  1830,  1640,  1639,     0,
    1611,     0,  1620,  1617,     0,  1625,  2083,  2082,     0,     0,
    1833,  1583,  1843,     0,   728,   729,   731,   733,     0,   798,
     723,     0,   712,     0,   727,   715,  1473,   586,  2262,     0,
       0,     0,  2261,  2271,     0,     0,     0,  3307,  3306,  3305,
    3304,     0,  1578,  1587,  1586,  2639,  2643,  3227,  3226,  3259,
    3258,  3252,  3251,  3253,     0,     0,  3232,     0,     0,  2170,
    2171,  2169,  2167,  2168,  2379,  2116,  2375,     0,  2059,     0,
    2016,  1581,  2282,     0,   584,  2633,     0,   573,   570,   571,
       0,  2021,     0,  2022,  2019,  2020,  2148,     0,     0,   438,
     433,   441,   435,   437,   436,   442,   443,   444,   445,   439,
     434,   440,   432,   431,     0,  3287,  1421,     0,     0,  2343,
    2344,  3323,  1262,     0,  1222,  1224,  1223,  1207,  1208,     0,
     142,   145,   915,     0,     0,   135,   696,   704,   816,   819,
     693,   137,  1580,   174,   275,   278,   322,   328,   327,   266,
       0,     0,     0,  3497,   296,   880,   881,   879,   878,     0,
    3497,   296,  3477,  1561,  1560,  1965,     0,  1969,  1974,  1970,
       0,  1961,     0,  1982,  2025,  2017,     0,     0,  2566,  2113,
       0,     0,  2113,  1581,  2186,  1580,   215,   220,   219,   212,
     225,   218,   229,   627,  3396,  3394,  3393,     0,  3401,     0,
    3376,  3417,  3415,  3416,  3419,     0,     0,  3418,  3420,  1260,
    1261,     0,  1255,  1229,   811,  1356,   809,     0,  1318,  1322,
    1319,     0,   916,   811,  1183,  1183,   809,  2236,  1466,  2236,
       0,     0,  2236,     0,  2238,  2236,     0,     0,  2236,  2236,
    2275,     0,  1466,     0,  2148,   706,  1376,  1374,  1375,     0,
    2148,  2148,  2148,   842,   863,     0,  2148,  2148,  2148,  1466,
       0,     0,  2275,  2148,  1331,  1278,  1332,     0,     0,  1279,
       0,  2148,  2148,  2148,  2236,  2148,     0,  1466,  1298,  1466,
    1466,     0,  2148,   850,   851,   849,  2148,  2148,     0,   818,
    1127,  1280,   705,  1281,   915,     0,  1370,   891,   918,  2652,
       0,  3436,     0,     0,     0,  1268,     0,   245,   243,   253,
    3478,     0,  1246,     0,  3481,  1431,  1432,     0,     0,     0,
     116,   118,     0,   120,   122,     0,   112,   114,   616,   681,
     634,   298,  1078,  1000,  1076,  1004,  1005,   306,  1132,     0,
       0,  1109,  1132,  1138,  1132,  1138,     0,  1060,   376,  2332,
    2325,     0,  2134,     0,  2327,   581,   508,   579,     0,  3410,
    3424,  3424,  3424,  3424,   333,   522,   525,  2297,  1494,  1502,
    2557,  2556,     0,     0,   483,  1132,  1937,  1132,  1132,  1854,
       0,     0,     0,     0,  1907,     0,     0,     0,     0,     0,
    1711,     0,  1834,     0,     0,     0,     0,  1057,  1671,  1673,
    1669,  1672,     0,  1071,  1675,     0,  1038,  1071,  1678,  1680,
    1665,  1666,  1667,  1668,     0,     0,  1950,  1951,     0,  2184,
    2183,  2182,     0,     0,     0,     0,  2651,  1140,  1819,     0,
    1153,  1147,  1145,  1152,     0,  1898,  1616,     0,     0,  2085,
       0,  1887,  1844,   732,     0,   799,     0,   752,     0,   750,
     726,     0,  2265,  2637,  2648,   702,     0,     0,  3309,  3308,
    1585,  1584,     0,     0,     0,  3210,  3212,  2381,  2305,  2107,
    2307,  2300,  2291,  2289,     0,  2148,   572,  1299,     0,  1300,
    1311,  1313,  1500,     0,  2508,     0,  2506,  2476,  2509,     0,
    1400,  1402,   168,     0,   139,     0,     0,  1229,  2783,     0,
     884,   886,   887,   888,   889,     0,   697,  2555,   703,  1127,
     820,   815,   176,   202,   307,  3502,   607,   608,     0,     0,
    3481,   266,     0,     0,     0,     0,   266,     0,     0,     0,
       0,     0,     0,     0,  2006,     0,  2005,     0,  2011,  2015,
       0,     0,     0,     0,  2559,  2561,     0,  2203,  2067,  2076,
    2074,  2111,  2191,  2189,     0,  3403,  3399,  2151,  2150,  1263,
       0,   917,  1230,  1466,     0,     0,     0,  1342,     0,     0,
       0,  1183,   907,   811,  1229,  1184,   811,   811,  1316,     0,
       0,     0,  1290,     0,     0,  2236,     0,  1344,     0,  1343,
       0,     0,     0,     0,  1353,  1354,     0,  2103,  2105,  2113,
    2181,  2180,   839,     0,  1335,   832,   831,   834,   833,   836,
     835,     0,  1351,  1352,   828,   825,   837,     0,   827,   852,
       0,   840,   822,     0,   876,   877,   875,   846,   853,   823,
     824,     0,   830,   829,   826,     0,  1306,     0,   868,   873,
     871,   870,   869,   874,   872,   841,   859,   838,   854,  1295,
    1355,  1355,  1315,     0,   882,  2655,     0,  1372,  1317,     0,
     892,     0,     0,   858,   857,   855,   856,   252,   241,     0,
       0,  1270,  1272,     0,     0,  1273,  3480,  3483,  1244,  1437,
       0,   333,   108,  2148,   109,  2148,   107,  2148,  1002,   304,
       0,   998,   999,  1001,  1003,   370,     0,     0,  2135,  3427,
    3424,     0,  3318,  3317,  3316,  3315,   528,   527,     0,     0,
     547,     0,  1918,  1920,  1922,  1767,  1768,  1904,  2113,  1902,
    1909,     0,     0,  1908,  1800,     0,  1751,     0,  1835,     0,
    1811,  1781,  1779,  1764,  1674,  1670,  1677,  1039,  1676,  1132,
    1794,  1770,  1802,  1724,  2148,  1778,  1784,  1785,     0,  1818,
    2148,  1618,     0,  2088,  2087,     0,     0,  2113,   730,  2148,
     797,   725,     0,     0,   749,     0,   713,     0,  2270,  2272,
    2640,  3234,  3233,  2132,  2629,     0,  1496,     0,  2023,  2504,
    2148,     0,  2474,     0,     0,     0,     0,     0,     0,   890,
     883,   915,     0,   695,   801,   821,   704,     0,   503,   503,
       0,   203,   204,   317,     0,   308,   310,   283,   267,     0,
       0,   611,   609,   610,     0,     0,   150,  3499,   262,  3498,
       0,   297,   167,   262,     0,  3481,  1966,     0,  1971,     0,
    1963,  2001,  2001,  2012,     0,     0,     0,     0,  2560,     0,
       0,  2567,  2569,     0,  1265,     0,  1264,     0,  1301,     0,
       0,  1320,     0,   811,  1179,  1180,  1229,  1204,  2652,  1229,
    1229,     0,  1289,     0,  1452,  1123,  1327,     0,  1285,     0,
    1329,  1330,  1367,   848,  1287,     0,  2106,   707,  2496,  1294,
     847,     0,  1370,  1286,  1308,  1292,  1321,  1371,  1161,   922,
       0,   910,   920,   964,  2654,   239,   244,   254,   255,  1248,
       0,  3482,     0,  1438,  1434,  1435,  1430,   541,   117,   121,
     113,     0,     0,     0,  3319,     0,  3431,  3425,  3429,     0,
       0,   554,   594,     0,  1906,  1866,  1910,  1911,     0,  1837,
    1839,  1679,     0,  1141,     0,  2084,  2078,     0,     0,     0,
       0,     0,     0,  2097,  2089,     0,  1891,   800,     0,     0,
     738,   755,   754,   751,  2638,  2304,   333,  1312,  2507,     0,
    3297,     0,     0,     0,  2113,  1227,     0,     0,   885,   698,
     802,     0,  2555,   503,   503,   177,   182,   183,   187,   185,
     196,     0,     0,   189,     0,   189,  1582,   205,   320,   318,
     319,     0,   323,     0,   284,   563,  1580,   250,     0,   263,
     164,  3497,   160,  3497,   152,     0,     0,     0,  2009,  2007,
    2564,  2565,     0,  2562,     0,     0,  2568,     0,     0,     0,
    1303,     0,   810,     0,  1229,  1204,  2652,     0,   893,     0,
     897,   899,     0,     0,  1370,  1291,  1336,  1328,  1345,  1326,
    1466,  2104,     0,     0,  1325,  1307,  1309,  1413,     0,  1165,
     924,     0,   919,   911,   932,     0,   246,  1274,   483,     0,
       0,     0,  1433,     0,  1440,   305,   302,     0,     0,  3430,
    3428,  2298,  1980,   547,  2113,     0,     0,  1749,  1725,  1820,
       0,  2094,     0,     0,  2092,  2091,     0,  2086,  2093,     0,
       0,   746,   762,   758,     0,   760,   761,   783,   574,  2510,
       0,     0,  3267,     0,  1226,     0,  3267,     0,   861,   694,
       0,     0,     0,   184,   186,   188,   201,   207,     0,   206,
       0,   262,   321,     0,     0,   311,   309,   262,   335,  3492,
     242,   251,   563,   266,   266,  1968,  1973,     0,  2002,     0,
       0,     0,  2563,  2571,  2570,  3404,  1266,     0,     0,     0,
    1302,     0,   912,   905,   901,     0,  1205,     0,   895,     0,
       0,  1334,     0,  1324,  1288,   843,   708,     0,  1293,     0,
    1164,     0,  1169,  1159,   950,  1106,     0,   953,     0,   923,
     925,  1099,  1100,   927,     0,     0,     0,     0,   965,     0,
       0,  1083,     0,  1086,     0,     0,   921,     0,   933,  1082,
    1089,  2653,     0,   248,   256,  3484,     0,     0,  1439,  1444,
       0,  1441,  1443,     0,  1553,     0,  2545,   595,  1905,  1913,
    1912,  2095,     0,  2096,  2099,     0,     0,  2100,     0,   742,
     744,   734,     0,   739,     0,   756,     0,  2275,  2275,     0,
    2275,  2275,  2275,  2275,   776,   784,   786,     0,     0,  3267,
    1194,  2113,     0,  1196,     0,   700,   862,     0,   503,     0,
     503,   562,   180,   178,   192,   190,   175,   316,     0,     0,
    3503,   564,     0,   253,  3500,   262,   262,  2004,  2003,  2018,
       0,  1323,  1305,     0,     0,     0,     0,   903,     0,     0,
       0,     0,     0,     0,     0,   962,   963,  1333,   959,   960,
     961,     0,  1297,     0,  1162,     0,  1166,  1167,  1168,     0,
    1160,   951,   952,  1107,   926,  1105,  1098,  1097,     0,  1088,
    1084,     0,   941,     0,     0,  1090,  1081,   934,   247,     0,
     240,  3485,  3486,  1436,     0,   303,  2299,  2309,     0,  1116,
    2090,  2098,  2102,  2101,   740,     0,   747,   769,   759,   765,
       0,  2275,     0,     0,  2275,     0,     0,     0,     0,     0,
     753,   785,  2275,   227,  1192,     0,     0,  2275,  1346,  1195,
    1220,  1202,     0,  1225,  1228,  1346,  1197,  1219,  1200,     0,
     195,   199,   194,   197,     0,  1582,   324,   324,   314,     0,
       0,     0,     0,   166,   162,     0,     0,  1304,   908,     0,
       0,     0,     0,     0,     0,     0,  2603,  2602,     0,     0,
    1163,     0,     0,  1104,  1103,  1101,  1102,  1588,  1087,     0,
     936,  1096,   935,   249,  1442,     0,     0,  2546,   746,   743,
     769,     0,   767,     0,   763,   757,   764,     0,   795,   789,
       0,   791,   792,   790,   787,   780,     0,   778,     0,     0,
       0,  1346,  1193,  1218,  1217,  1198,     0,  1212,  2148,   143,
    1348,  1347,  1203,     0,   146,  1201,     0,   563,   563,   181,
     262,   266,   296,   325,     0,     0,     0,   562,  1580,   255,
    2010,  2008,     0,     0,     0,  1192,     0,  1194,  1196,   958,
       0,  1175,  1174,     0,     0,  1171,  1170,     0,  1085,   928,
     928,   942,  2308,  2310,  2572,   741,   766,     0,   774,   770,
     772,   775,   794,   793,     0,   777,     0,   788,  1209,  1210,
     140,  1199,  1221,  1211,  1350,  1349,  1216,  1215,  1213,  1214,
     909,  3504,  3504,   179,   193,     0,  3497,   315,   312,     0,
     565,  3493,   238,     0,  1192,     0,   894,  1192,   898,   900,
    1310,  1178,  1176,  1177,     0,     0,  1589,     0,   939,   929,
     931,   938,   944,   945,   943,   946,     0,  2558,   768,     0,
       0,   783,   782,   779,  3505,   200,   198,   326,   266,     0,
       0,     0,   906,   902,  1192,   896,     0,     0,  1590,   930,
     937,   947,   949,     0,  2566,   773,   771,   781,   191,   313,
     566,     0,   904,  1173,  1172,   948,     0,  2574,  3494,  2573,
       0,  2578,  3489,     0,     0,  2585,  3487,  3488,     0,  3495,
    2576,  2577,  2575,  2580,     0,     0,  2582,  2583,     0,  2547,
    3490,   483,  2584,  2579,     0,  2586,  2588,     0,  3496,  2581,
       0,  1580,  2587,     0,  1581,  2589
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5306, -5306, -5306, -5306,  2336,  4787, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  2932, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306,  2052, -5306,   597, -5306,   602, -5306,   601, -3354,  -632,
    4486, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,   311,
     313,   319, -5306,   317, -5306, -3375, -5306, -5306, -5306, -5306,
     324, -5306, -5306, -3359, -5306,  2221, -2922, -5306, -5306,   209,
    1606, -5306, -5306,   489, -5306,   180, -5306, -5306, -5306, -4510,
      38,  -166, -5306,    34,  5013,    54, -4830,  4333, -4476,  -604,
    1708, -5306, -5306,  2242, -5306, -5306, -3247, -5306, -5306, -2279,
   -5306, -5306, -4481, -5306,   797, -4189,  1482, -5306, -5306,   329,
   -5306, -5306, -5306,   -63, -5306,   -60, -5306,  -668, -3080, -5306,
   -2385, -5306, -5306, -5306,  4295, -5306, -5306, -5306,  2056, -5306,
   -4158, -5306, -3750,  4943, -5306,  -706, -5306, -5306, -5306,  2020,
   -5306, -5306,   858,  1463,  3475,  2772, -5306, -5306, -5306, -5306,
    2677, -5306,  2003, -5306, -1899,  3916, -5306, -5306, -5306, -5306,
   -5306,  2967, -2674, -5306, -5306, -5306,  1773, -5306,  -856, -5306,
   -2108,  -916,  4840, -5306,    22, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -1330, -5306, -5306, -5306, -5306, -5306,
   -5306, -3910, -2980,  2012, -5306,  1470, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,   986, -5306, -5306, -5306, -5306,    26,
   -5306, -5306, -5306, -5306, -5306, -5306,  2831, -5306, -5306,  4988,
   -5306, -5306, -5306, -3664, -5306, -5306, -5306, -5306, -5306, -5306,
      36, -5306, -5306, -5306, -5306, -5189, -5306, -5306, -5306, -2223,
   -5306, -5306, -5306,  1270, -5306, -5306,  3403, -5306, -5306,  3407,
    3401, -5306,  3405, -5306, -3121, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306,    37, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306,  4342, -5306, -5306,
   -5306, -3270, -5306, -5306, -3419,  3627, -5306, -2736, -5306, -5306,
   -2754, -5306, -5306, -2707,  1157, -5306, -5306,  1851,  -333, -5306,
   -2048, -2805, -2745, -5306, -5306, -5306, -2879, -2871,  -855,  3490,
   -1524, -3235, -5306, -5306, -5306,   399,   401,   582,  1596,  2185,
   -5306, -3970, -5306, -5306,   782, -5306, -5306, -5306, -5306, -5306,
    1356,   629,  1358, -5306,   947,  3192, -2919, -5306, -5306, -5306,
   -5306, -5306, -5306,    49,   447,   -31, -5306, -4170,   633, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -3301, -5306, -5306,
   -5306,  -170, -5306, -5306,  -116, -5306, -5306,  -169, -5306,   156,
   -5306, -5306, -5306, -5306,  3005, -2035,  1178,  -730, -5306, -3893,
    1629, -4187, -3495, -5306, -5306,   303, -1353, -1335,   -41, -5306,
   -5306, -5306, -5306, -5306, -5306,  1114,   619,  1624, -3991, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -3984, -3981,   847, -5306,
   -4908, -5306, -5306, -5306, -3656, -5306, -5306, -5306, -5306, -5306,
   -5306,   -86, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -3463,
   -5306, -5306,   121,    92, -5306,   228, -5306, -4738, -5306, -3584,
   -1086, -5306, -5306, -3577, -3576, -3572, -5306, -1489, -3607, -1499,
   -3571, -5306, -5306, -5306, -1447, -1510,  1229, -1221, -1437,  1187,
   -1463, -1160,  2064,    93, -5187, -3010, -1256, -1240, -5306, -5306,
   -3302, -5021, -5306,  2817, -4313,  -683, -2107, -3441,    80, -5306,
   -5306, -1864, -1879,  2291, -5306,  3623, -2263, -1106, -2220,  1989,
   -5306, -5306,  1435, -5306, -1542,  1425, -5306, -5306, -5306,  1442,
   -5306,  -108, -5306, -5306, -5306, -5306, -3652, -5306, -2733, -3403,
   -5306, -5306,  5417,  5419, -3306,   -45,   -44, -5306, -5306, -5306,
     421, -5306, -5306, -3358,    -9,    69,    78, -3940, -1810,   345,
   -3657,  3624, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,  1859,  1333, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306,  1673, -2727, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -4664, -4322, -5306, -5306,  1168, -5305, -3602,
   -3569, -3977,  4641, -5306, -5306, -5306, -5306,  4455, -3659, -3342,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306,  3845,  1564, -5306,
   -5306,  2405, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306,   423,  2413, -5306, -5306, -5306, -5306, -5306,  2960, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306,   134, -5306, -5306,
   -5306, -5306, -5306,   610,  3703, -5306, -5306, -5306, -5306,   -18,
   -5306, -5306, -5306, -5306,  3261, -5306, -5306, -5306, -5306,  3143,
   -5306, -5306, -5306, -5306, -5306, -5306,  2156, -5306,  2792, -5306,
   -2679, -5306, -5306,  1592,  -573, -5306, -5306,  -388, -5306, -5306,
   -5306, -5306, -5306,    35, -5306, -5306, -5306,  5431, -1668,    17,
    -468, -5306, -5306,    90, -5306, -5306,  4535,  -323,  2616,  -728,
    5189, -5306, -5306, -5306, -5306, -2672,  2501, -5306,  4583, -5306,
   -5306,  4760,  1467,  4548,  2378,  1630,  2569, -1844,  -571, -3350,
     124,  1487, -5306,  1988,   508,  9617, -5306, -1615, -1683, -5306,
   -5306,   -68, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306,  2699,  2708, -5306, -5306,  4161, -3185, -5306, -5306,  -762,
   -5306, -2725, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306,  2044, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306,  4108, -1750, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -1342, -5306,
   -3053, -5306, -5306, -5306, -5306, -5306, -5306,  -648, -5306,  4255,
   -5306,  4289, -5306, -1284, -1887,  3852, -5306,  4606, -5306, -5306,
   -5306, -5306, -5306, -5306,  3855, -5306, -2293, -5306, -2668,  4610,
    4616,  4617, -5306,  4619, -5306, -5306, -1884,   691, -5306,   994,
   -5306, -5306, -5306, -5306, -5306,  1455, -5306,   258,  1055,   259,
   -4378, -1627,  1458, -5306, -5306, -1969,  3893,  4306, -1363, -5306,
    3088, -5306,  3857,  2089, -5306,  2424, -5306,  1369,  1368, -5306,
   -5306,  2096, -5306, -5306, -5306, -5306,   801,   336, -5306, -5306,
   -5306,   684,  1092, -2288, -5306,   810, -3470,  4620,  -344, -1227,
   -5306, -1387,  2444,   790,  5255,  -423, -5306, -5306,  4593, -5306,
   -2752, -5306, -2187, -1677, -1036, -3331, -4598, -3504, -5306, -2011,
   -5306, -5306, -5306, -5306, -5306,  1381, -5306, -5306, -5306,  3124,
   -5306,  5532, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306,  -726, -1202, -5306, -5306,  2930,  -846,  -561,  5563,
    -380, -5306, -5306,  -372, -5306, -5306, -5306, -5306,  4405,  4148,
   -5306,  2900, -5306, -5306, -5306, -5306,  2662, -5306, -5306,  1123,
   -1176,  2098,  2430, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
    1102, -5306, -2006, -5306, -5306, -5306, -5306,  -370, -5306, -5306,
   -5306,  1512, -5306,   167,  5368,  -367, -5306, -5306, -5306,  5187,
   -5306, -5306, -5306, -5306, -5306, -5306,  3728, -1552,  5196, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306,  3290, -5306, -5306,
   -5306, -5306, -5306, -5306,  4115,  5382,  -689, -1757, -5306, -1055,
    3298,  2621, -1131, -5306, -5306, -5306,  4646,  5390, -5306, -5306,
    5558, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
    3254,   741, -5306, -5306, -5306, -5306, -5306,   840, -5306, -5306,
   -5306, -5306,  4017, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306,  1718,    59, -5306,  1086,
      40, -5306,   791, -5306, -5306, -5306, -5306, -5306,     5, -5306,
   -5306,    -5, -5306, -1420,  5054, -1392, -5306, -1862, -3590, -5306,
       1, -5306, -5306, -5306,  3313, -5306, -5306, -5306, -5306,  1603,
   -5306, -5306, -2865,  -918, -1802, -4011,  4824, -5306, -5306, -5306,
    -559,     0,    -3,  1301, -1282, -5306, -5306,  2775,  3365,    31,
    2959, -5306,  5133,  -558,  -640,  -751, -1130, -5306,  7787, -5306,
   -5306, -5306, -5306, -5306,    65,  -567,  -563,   149,  -680,    43,
     178,    20, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306,  2678, -5306, -5306,
   -5306,  1580, -5306,  5437, -5306,  3510, -1874,  5439,  3394,  2707,
    2709, -5306, -5306, -5306, -5306, -1865, -5306, -5306, -1877,   138,
   -5306,  3725, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306,  4049,  -555,  -553,  4226,  5447,  4952, -5306,  4499, -5306,
   -5306, -5306, -5306, -5306,  1962, -5306, -2170,  2740, -1574, -2357,
   -5306, -5306,  3157,  1478, -5306, -5306,  1511, -5306,  2365, -2763,
   -2969, -5306,  2614, -3376, -5306, -5306,   764, -5306, -5306, -5306,
    1895,   952,  5427,  4828, -5306, -5306, -5306, -5306,  5644, -5306,
   -5306,   940,  5670,  5672,  5676,  -301, -5306, -3472, -5306, -4107,
   -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -4464, -5306, -4502, -5306, -5306, -5306, -5306,   168, -3932, -5306,
   -5306,  2217, -5306, -5306, -5306, -5306, -5306, -5306, -5306, -5306,
   -5306
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,   471,   756,  2104,   472,   473,   474,   475,   476,  2070,
     477,  1310,  2820,  1312,  2036,  2823,   478,   725,   479,  2235,
    3021,  3022,  4795,  4796,  4789,  4790,  4792,  4793,  3023,   841,
     842,   480,  2875,  4069,  3546,  2872,  5255,  2110,  4965,  2111,
    4966,  2868,  4084,  4632,  2117,  2879,  2118,  4630,  4631,  4623,
    4624,   764,  4983,  5267,  5582,  5855,  5733,  5445,  5446,  5447,
    5588,  5454,  5857,  5452,  5856,  5448,  5729,  5938,  5727,  5937,
    5449,  5270,  5271,  5450,  4070,  3629,  3630,  1369,  3541,  3638,
    3639,  2882,  4621,  4775,  5526,  4779,  5673,  5800,  5600,  3666,
    5145,  5527,  5528,   657,  1381,  5469,  5470,  2199,  5287,  5277,
    4077,  4078,  4079,  3548,  3549,  5278,  2949,   481,   834,  1483,
    2227,  2228,  4993,  4994,  3722,  3723,  3724,  5274,  5275,  5276,
    5461,  4617,  4984,  4618,  5944,  4619,  2804,   958,  2231,  2232,
     857,   858,  1500,   859,   860,  2252,  1556,  3081,  3082,  3083,
    2305,   861,   862,   863,  2249,   864,  3106,  3046,  4329,  4330,
    4816,   865,  3751,  3752,  3753,  3110,  1182,  3754,   482,   483,
     678,   687,   679,  1179,  2681,  1180,   484,   485,   723,  2060,
    2061,  2062,  2063,  3511,  2838,  3505,  3506,  4582,   866,   867,
    2327,   959,   960,   486,   961,   658,  1678,  2423,  3807,   962,
     963,   964,   965,  1680,  2408,  2409,   966,   967,   968,   969,
     970,  5453,  3188,  3189,  3804,  3782,  4354,  3190,  2419,   971,
     972,   973,   974,  1681,   934,   935,  3155,  4367,  4836,   975,
     633,   837,   838,  2234,  2995,   839,  2996,  3675,  4788,   840,
    1485,  2991,  1487,  3811,   976,   977,  2427,  2426,  3808,   708,
     978,  1300,   639,  1499,  2019,  5597,  5598,  5860,  6050,  2020,
    3482,  4025,  4558,  4559,  4945,  3140,   900,  1612,  2365,   979,
    1294,  2800,  1188,  2689,  3812,   980,  2429,  2431,  2428,  3810,
    5543,  2430,   981,   668,   698,   656,  1611,   684,  4988,  5284,
     812,   813,   849,  3044,   814,  1495,  1456,  2204,  2975,  2976,
    3644,  3645,  3711,  3712,  3713,  2967,  2968,  2969,  3033,  3034,
    3035,  2956,  2957,  2958,  2208,  2953,  2954,   815,  1457,  1468,
    2970,  2971,  2972,  3717,  3037,  3038,  3039,  3040,  2973,  2355,
    2974,  4140,  4605,  4981,  4606,  5263,  3392,  4977,  4978,  4762,
    5073,  3489,   491,   671,  1165,  1887,  2673,  3953,  3375,  3377,
    2674,  3952,  4493,  4494,  4495,  3373,  3374,  5420,  3379,  3950,
    5561,  5898,  5698,  5699,  3942,  5703,  4502,  4918,  4919,  5233,
    5421,  5567,  5820,  5704,  5905,  5818,  5901,  5819,  5903,  6040,
    5979,  5980,  5830,  5916,  5917,  5984,  6041,  5714,  5715,  5716,
    3947,  5230,  5441,  3536,  2193,  2194,  5036,  1321,   492,  4607,
    4245,  4608,  4609,  5081,  5725,  4247,  4248,  4249,  3775,  1966,
    5115,  5097,  4629,  5123,  4610,  4969,  4970,  4971,  4972,  5627,
    5759,  5629,  5630,  5756,  5871,  5755,  4973,  4974,  5259,  5522,
    5042,  4707,  4691,  4692,  4767,  5131,  5361,  5524,  5520,  5649,
    5650,  6028,  6029,  5666,  5971,  5667,  6035,  6060,  6061,  5651,
     493,   670,  1835,  5765,  5766,  5767,  5362,  1558,  4318,  1559,
    2275,  1560,  4320,  1561,  1562,  1563,  1564,  1565,  1566,  1567,
    1568,  1569,  1570,  3096,  2265,  2266,  3060,  2258,  2259,  2257,
    4805,  4803,  2324,  5668,  5669,  3053,  2262,  2263,  3069,  5797,
    5652,  5670,  5654,  1571,  4328,  2277,  1922,  1923,  3580,  1936,
    1937,  3093,  2314,  3094,  2197,  2278,  3063,  3064,  3067,  4465,
    5218,  4471,  4472,  4473,  3907,  3908,  3909,  3910,  3911,  3334,
    5655,  5130,  5519,  5639,  5642,  5780,  5965,  5043,  4693,  5046,
    1280,   765,  4694,  4695,  5921,  5838,  5845,  5922,  5846,  5839,
    5498,  4066,  5923,  5924,  5925,  5848,  5841,  4597,  5433,  5434,
    5031,  3073,   494,   574,  3664,  1444,  1446,  1455,  3670,  2984,
    2983,  1461,  1460,  2962,  4190,  4682,  3667,  4264,  5369,   799,
    4250,  5510,  5334,  5517,  4251,  4948,  4252,  5490,  5620,  4253,
    5354,  5515,  5637,  4949,  4950,  4254,  4255,  4256,  5929,  5930,
    5931,  4696,  1641,   818,   819,  1473,  1474,  1475,  3135,  5128,
    4719,   495,  2860,  2855,   496,  1338,  1339,  1340,  2082,  2083,
    2858,  2859,  3531,  4055,   497,  1304,  2815,  2072,  2847,   498,
    1324,  3522,  3523,  3524,  4050,   499,  1481,  2224,  2225,  2988,
    4271,  4787,  5149,  5376,  5534,  5372,  5680,  5681,   500,   845,
    1491,   501,   635,  2244,  2245,  2246,  3025,   502,  1691,   582,
     503,  1186,  1893,  1896,  1897,   504,  1303,  2022,  2023,  2024,
    2025,  3485,   505,  2396,  3158,  3159,  3160,  3161,  2810,  4026,
    2811,  2812,  3494,  4374,   506,   779,  1441,   507,   778,  1440,
     508,   509,   697,   751,   689,  1909,   511,   512,  3393,  2467,
     514,   785,   783,  1127,   516,  1434,  1430,   517,  2468,  1128,
     775,   776,  1388,  1212,  3565,  3566,  2339,  2340,  2914,  2901,
    1213,  1214,  1414,  2175,  2926,  2704,  2705,  2007,  2706,  3976,
    5591,  4522,  5968,  1712,  1622,  1308,  1130,  1131,  1132,  1848,
    1849,  1863,  1133,  1857,  2627,  4433,  4880,  4881,  4882,  4883,
    5209,  2548,  2549,  2668,  1134,  2534,  1135,  1136,  1137,  1138,
    1139,  1140,  1141,  1142,  1143,  1144,  1145,  2663,  4414,  4415,
    4862,  3368,  3369,  3370,  1146,  3215,  4400,  3226,  1147,  1148,
    1149,  1150,  1151,  3934,  1152,  4489,  4118,  1153,  1841,  2613,
    2494,  4854,  4405,  5187,  5191,  5192,  5193,  5396,  2435,  3203,
    3835,  4845,  4847,  4848,  3836,  3837,  3935,  3339,  1733,  1734,
    1701,  1702,  3885,  1389,  1390,  1391,  1392,  1393,  4102,  4103,
    4999,  4636,  5001,  4640,  2140,  2141,  2144,  2145,  1394,  1395,
    1396,  1397,  2128,  1398,  1399,  1400,  2906,  5478,  5007,  5008,
    5611,  5610,  5009,  4645,  4646,  4106,  4107,  4562,  4563,  4564,
    3576,  2490,  2491,  2564,  2401,  2402,  2403,  2436,  1408,  2155,
    2922,  3586,  2157,  3584,  4113,  3588,  4119,  4120,  2658,  3361,
    3930,  3363,  4909,  5225,  5226,  5413,  5551,  5552,  5557,  4259,
    5067,  5068,  3120,  1415,  2934,  3598,  4116,  1968,  1969,  1970,
    2165,  3591,  3592,  3769,  1417,  1418,  1428,  1433,  1421,  1419,
    3111,  4677,  3112,  3912,  3894,  4954,  4141,  2459,  2460,  5072,
    4892,  1422,  2935,  4127,  4128,  4129,  1404,  1405,  2150,  2151,
    2152,  1423,  1406,  2915,  4109,   518,   718,   519,  2362,   885,
    1608,  2361,  3502,  1493,  2692,  2334,  2335,  1595,   807,   655,
     520,   659,  3156,   521,   685,  2691,   939,  1191,  1901,  1902,
    1903,  3394,  3965,  3395,  3958,  3959,  3396,  1292,  4512,  4513,
    3130,  4154,  4155,  4149,  2799,  3475,  1293,  2011,  4016,  2796,
    4017,  2797,  4018,  4369,  5178,  5685,  2793,   522,   695,  4548,
    4010,  4011,  5806,  5807,  1192,   523,   640,  2333,   881,  1584,
    1587,  1588,  2343,  3116,  4348,  1589,  1590,  3118,   882,   883,
     524,   739,  3532,  4058,  1344,  1990,  1991,  1992,  2780,   525,
     692,  1281,  4005,  4545,  2766,   674,  1606,  1973,  1284,  1974,
    2762,  3459,  1957,   526,  1438,  1437,   833,   527,   528,   791,
     583,  2179,   529,  1313,  2053,  2836,  4033,  4034,  4567,  2054,
    2055,  3503,   530,   704,  1297,  3499,  4955,  4956,  5252,   531,
     730,  1328,  1329,  2076,  2074,  3527,  2850,   532,  2675,   533,
     660,   942,  1644,  2395,   534,   733,  1333,   535,   536,   944,
    4375,  5809,  5974,   664,  2398,  1648,  5264,  4648,  5014,  5015,
    5017,  5311,  5312,  6037,  6081,  6092,  6085,  6095,  6096,  6099,
    6105,  6106,  1154,  1351,  1352,  1155,  5770,  1156,  1157,  1158,
    2469,  1296,   700,  2014,  2015,  3480,  2803,  3478,  2016,  3960,
    3961,  3409,  3585,  1159,  3962,  5032,  1494,  2336,  1316,   538,
    1160,   622,   809,  1353,  2147,  3166,  1232,  3434,  1162,   869,
    3813,   982,   983,  1451,  1894,  2213,  2214,  3167,   624,  1657,
    3435,   870,  1234,   541,   625,   626,   627,   628,   629,   630,
     631,   632,   547,   691,  1216,  2711,   548,  1442,  2936,  3495,
    1913,  1242,  1942,  1931,  1941,  2736,  3446,  2739,  3447,  3448,
    4537,  3998,  4538,  3999,  1287,  2731,  1914,  4000,  2724,  2725,
    2726,  2727,  3989,  1928,  2720,  2190,   549,   945,  2407,   667,
    1650,  1651,  3179,   550,   694,   551,   724,  1318,  2843,  3515,
    3516,  4046,  4584,  4047,   552,  1197,  1198,   553,   928,  3539,
    3146,  2351,  1454,  2352,  2379,   931,  1614,   932,   933,  1628,
    1625,  1631,  1627,  4181,  3659,  3660,  3151,  2359,  2215,  2698,
    3652,  4667,  2216,  4175,  4176,  4668,  2369,  3142,  3143,  2981,
    5386,  4188,  3663,  5172,  4358,  5387,  5388,   554,   705,   555,
    5279,   717,  1307,  2033,   556,   557,   558,   559,   784,  1426,
    1215,   575,   576,   577,   578,   822,   823,  3669,  4266,  4782,
    4783,  5371,  6088,  6089,  2881,  4082,  5742,  6051,  6082,  6101,
    4991,  4992,  5288,  5468,  3551,  4081,  5280,  6045,  4075,   560,
    1358,  1354,   750,  2102,  2096,  2098,  2866,  3535,   561,   562,
     563
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     539,   537,   752,  1283,   821,  1557,   669,   709,  1230,  1279,
     827,  1238,   817,   811,  2653,  2284,  1187,   513,  2180,  2167,
     546,  2688,   487,  2599,  2166,  2283,   488,  3047,  1365,  2683,
    2825,   540,  1366,  1367,  2458,   510,   489,   490,  3113,  2345,
    1605,  3194,  1675,   544,  2714,  1387,  2158,  1924,  1927,  1929,
    2466,  1997,  1453,  3121,  3097,  1895,  1939,   621,  3736,  3977,
    2323,  2374,  4257,  2269,  2721,   542,  2518,  2737,   688,  3599,
    1309,  2287,   872,   712,  2733,  3794,   873,  3814,  3815,  3493,
     884,  2356,   887,   888,   889,   890,   891,  2296,   893,   894,
     515,  2195,   896,   897,  2294,  4258,  2842,  2302,  3098,   927,
    2500,  2123,   929,  1335,   930,  1735,  1342,  3540,  4297,  2196,
    4142,  2753,  2754,  2306,  2307,  2308,  4325,  2315,  2310,  4351,
    1492,  2148,  4014,  2792,  1236,  4598,  1964,  4004,  1237,  4125,
     927,  3490,  2321,   929,  4643,  1199,  4142,  4142,  4108,  4319,
    4612,  2682,  2091,  4985,  3192,  4380,  4321,  4322,  1998,   543,
    4997,  4323,  4327,  1302,  1502,   721,  2959,  4807,  2937,  2837,
    3781,  3840,  4131,  1452,  3504,  3718,  4996,  1319,   683,  4246,
    3065,  3647,  5134,  3719,  3567,  3567,  4054,  4611,   545,  1345,
    1346,  2638,  2639,  2640,  2641,  2642,  2643,  2644,  2646,  2648,
    2649,  2650,  2651,  2652,  2399,   828,  2683,  3085,  4268,  3036,
    4688,  4142,  4142,   829,  3195,  2760,  3152,  4689,  3153,  3154,
    4690,   830,  2835,   831,  2863,  4697,   832,  4699,  3180,  4716,
    4709,  4073,  2773,  1695,  2341,  1999,  3133,   714,  3568,  2399,
    3649,  3648,  3643,  4715,  4073,  2623,  2192,  4785,  1629,  3715,
    5374,  3572,  2626,  2628,  4768,  2631,  2632,  2786,  2787,  1217,
    3616,  5904,  5070,  4744,  2910, -1237,  2270,  4049,   734,  2285,
    5075,  -489,  1435, -2054,  5003,  5141,  2289,  1480, -3370,  1842,
    1843,  1675,  2192,  2276,  2276,  1842,  1843,  2276,  1958,  2226,
    3708,  2297,  4404,  2256,  2276,  2261,  4467,  2267,  4147,  2267,
    2276,  -803,   872,  4309,   872,  3107,   873,  2267,   873,  3716,
     737, -3353,  4080,  3107,  2291,  4809,  2256,  4180,  2682,  5381,
    5738,  1842,  1843,  2267,  1842,  1843,  3331,  1842,  1843, -2458,
    2399,  1842,  1843,  2267, -2662,  1596,   780,  2303,   729,  5945,
    1842,  1843,  2309,  5077,  3024,  4074,  1604,  1609,  1610,  4468,
    2982,  2416,  2192,  2267,  2256,  2256,  2319,  2320,  4074,  1920,
    2399,  1842,  1843,  4085,  4282,  2437,  2438,  1831,  1833,  1834,
    5079,  -804,  1432,   781,  2448,  2100, -2663,  1926,  1842,  1843,
    1920,  1877,  4889,  3345,  4171, -2458,  3107,  5102,  4088,  5426,
   -2973, -3357,  4151,  4064,  2271,  1844,  3107,   665,  2260,  3567,
    3107,  1844,  5338,  5363,  3371,   665,  2508,   579,  2511,  2280,
    3397,  3891,  3256,  3107,  2271,  4167,  4168,  2279,  2279,  1217,
   -2775,  2279,  4153,  5744,  2525,  2526,  5093,  2529,  2279,  1217,
    3107,  3134,  4980,  1633,  2279,  2535,  2536,  1844,  2282,  2540,
    1844,  2286,  1858,  1844,  1416,  1842,  1843,  1844,  2290,  1416,
    -699,  1416,  3762,  1845,  2293,  1846,  1844,  1842,  1843,  1845,
    2031,  1846, -2054,  5523,  1842,  1843,  3944,  3176,  1842,  1843,
   -2054,  1431,  3346,  5472,  1736,  4665,  4172,  1844,  1379, -2752,
    4303,  4304,  3654,  4840,  1842,  1843, -2458,  2358,   940,  4717,
   -3356,  5796,  3107,  3798,  1844,  1845,  4199,  1846,  1845, -2458,
    1846,  1845,  4056,  1846,  5293,  1845,  1916,  1846, -3290,  5653,
    1920,  3471,  2373,  2066,  1845,  3650,  1846, -3291,  2441,  1776,
    1642,  2133,  2085,  1920,  3107,  1496,  3177,  1336,  3107, -2054,
    1842,  1843,   782,  1479,  4625,  1845,   726,  1846,   797,  3403,
    3404,  3405,  3406,  2870,   661, -3198,  5309,   634,   774, -2458,
    5934,  1859,  1845,  5499,  1846,  2272, -2458,  2856,  5310, -3354,
    2451,  1844,  3213,  1971,   796,  3200,  1860, -2458, -3290,  1602,
     753,  4890,  3347,  1844,  3893,  1847,  1840, -3291, -2775,  1256,
    1844,  1847,   510, -3355,  1844,  3107, -2054, -3360,  2027,  2300,
    4841,  2301,  2452,  1972,   537,  2134, -2973,   706,  4491,  4626,
    1844,  4768,  1842,  1843,  4272,  4674,  2135,  2453,  1842,  1843,
     513,  2857,  3655,  2136,   727,  4467,  5132,  1847,  1337,  1845,
    1847,  1846,  4622,  1847,  2979,  4499,  5990,  1847,   510,   801,
    1420,  1845,   804,  1846, -2054,   676,  1847,   515,  1845,  5784,
    1846,   843,  1845,  1861,  1846,  2137,  1844,  1917,  2108,   868,
    2109,  2454,  1993,  2112,  2113,  2115,  2116,  1847,  1845,   797,
    1846,   710, -3374,  2067,   752,  3390,   539,  1387,  4468,   876,
    2281,  1526,  3525,  4203,  1847,  1925,  4210,  1930,    35,  2455,
    1161,  1933,  1938,   515,  2864,   701,   546,  5148,  4627,  5289,
    2961,  4422,   875,   941,  1864,  2086,  2133,   901,  3389,  3390,
    5516,  1231,  1286,  4187,  1845,  2272,  1846,  2138,  1161,   544,
     672,  1967,  2316,  1784,   871,  5796,  4003,  4157,  1844,  5751,
    1816,  1241,   820,  2273,  1844,  2272,  1185, -3290,  1161,  1256,
     826,   542,   581,  3042,  1322,    42, -3291,  1634,  2139,  1256,
    2442,  1847,   843,  2273,  1239,   843,  2709,  1643,  3590,  1256,
    4666, -2811,  1820,  1847,  4092,  2260, -2752,  2350,  6001,  6002,
    1847,  4246,    35,  4768,  1847,  2064,  1235,  2732,  2669,   877,
    2134,  5736, -2771,  1471,  4152,  2236,  1845,  5740,  1846,  2456,
    1847,  2135,  1845,   846,  1846, -2830,  2696, -2831,  2136,  1865,
    2255, -2832, -3374,  5658,  1920,  4173,    35, -2054,   874,  3472,
    3391,  3089,  5265,   899,  2032,  5273,  2716,   878,  2464,  3372,
    3332,  3211,  1920,  4142,  3657,   543,  1850,   984, -3198,    42,
    2137,   702,  4065,  3145,  1735,   662,  1847,   545,  3538,   666,
      44,  1851, -2332,  2751,  2670,  4879,  2356,   666,  2757,  2212,
    2759,  4080,  1289,  3718,   545,  4357,  3414,  3567,  1161,  3647,
    2195,  3719,  2768,    42,  3413,  2771,  2896,  2154,  5535,  2774,
     682,  1469,  2168,   539,    44,   579,  1852,  2911,  2196,   868,
     636,  1572, -3370, -2332,   827,  1921,  5900,  6007,  3074,  1240,
    2101,  2034,  2138,   546,  1429,  3074,  2789,  2790,  2791,   876,
    3747,  1576,  2360,  5286,  1498,  4338,  1921,  4810,  1847,  4800,
    4091,  5382,  5739,  1853,  1847, -3353,   544,  4086, -2662,  3648,
    4663,  4097,   875,  2139,  1575,  4101,  4169,  3715,  4144,  2959,
    4469,  5946,   665,   735,  2271,  5863,  5864,   752,   542,  5475,
   -2771,  5476,  4089,  1630,   871,  5427,  1573,  1603,  3646,  1217,
    1607,  1831,  1833,  4003,  1959,  1161,  2243,  2400,  3651,  2274,
   -2663,  1597,  1598,  1599,  1600,  3578,  1655,  2785,  1655,  1655,
    1655,  3108, -1237,  4305,  1655,   738,  1655,  5601,  -489,  3108,
   -2054,   736,  4718,   539,   537,  2432,  1661,  3716,  1661,  1661,
    1661,  2243,  2400,  2684,  1661, -3357,  1661,  3787,  3337,  3338,
     513,  3743,  3744,   546, -3374,  1161,  3036,  5587,  -803,  1659,
    1161,  1659,  1659,  1659,  1679,  2212,  3714,  1659,   510,  1659,
    5589,  4786,   543,  3052,  5375,  3055,   544,  5603,   874,  5604,
    1574,  3348,  3892,  3108,  1362,  2243,  1921,  2183,  3353,  3354,
    1161,  3357,  3358,  3570,  3571,  3070, -2458,  3466,   542,  1921,
    1161,   545,  3108,  4470,  4505,  3075,  3341,   545,  5331,  3214,
    5333,  3027,  3108,  5336,  2276,   927,  3108,  3080,   929,   828,
    5341,  5342,  3178,   515,  4057, -2054,  2445,   829,  -804,  3108,
       9,  1842,  1843,  2400,  3100,   830,  2276,   831,   798,  2276,
     832,  3601,  4799,  3227, -3356,  3228,  3108, -2973,  3333,  2276,
    3183,  3257,  2122,  3229,  3054,  3230,  1862,  3187,  5266,  2274,
    4768,  4234,  3318,  2400,  3319,  1658,  1416,  1658,  1658,  1658,
   -2775,  5745,  5746,  1658,  3838,  1658,  3839, -2775, -2775,  2274,
    6003,  1431,   543,  3329,  2671,  3330,    19,  2655,  4372,  1161,
    1161,  1161,  1161,  1838,  1660,  2542,  1660,  1660,  1660,  4688,
    3225,  2630,  1660,  1161,  1660,  5694,  4689,  -699,  3108,  4690,
    2684,   545,  2559, -3354,  4709,  2567,  3913,  2569,  5595,  4157,
    4628,  2573,  2574,  2575,  1842,  1843,  2697,  1736,  4257,  2581,
    4998,  5314,  1842,  1843,   711,  3240,  2980, -3355,  3243,   663,
    3108, -3360,  2502,  1736,  3108,   637,  2255,  1844,  2279,  5018,
     581,  -115,  5021,  -115,  4702,  -119,  3258,  -119,  5474,  2422,
    5884,  4258,  1842,  1843,  4003, -3290, -3473,  3272,  3071,  2608,
    2279,  4942,   673,  2279, -3291,   470,   703,  1785,  2451,  3922,
    5961,  3923,  1836,  2279,  1817,  2742,  4410,    32,  4411,  4678,
    3086,  5315,  3219,  3087,  1472,  2272,  2772,  5911,  5912,  4469,
      35,  3108,  3970,  3099,  4961,  1845,  3770,  1846,  3220,  4703,
    2452,  4760,  -111,  2273,  -111,  3561,  1821,  4649,  1817,  1256,
    4768,  5529,  2068,  1373,   880,  2453,  1960, -2811,   752,  4652,
    3778,   710,  3491,  3157,  2457,  4246,  4142,  1452,   877,  4269,
    1844,   843,   936,   843,  5273,  2260,  3090,  3492,  1844,   665,
      40, -2811,  1387,  2614,  3231,  2980,  3212,    42,  2034,   470,
    3129, -2830,  5047, -2831,  1842,  1843,    35, -2832,    44,  2454,
    1921,   851,   852,  5022,   665,  1462,   878,  2980,  1844, -2332,
    1161,   731,  2672,  2056,  3117, -2830,  4531, -2831,  1921,  3519,
    2654, -2832,  4768,   470,  2708,  2662,  5507,  2455,  1845,  3380,
    1846,  1463,  1736,  5536,  2717,  5997,  1845,  1452,  1846,   710,
    2002,  4261,  3993,  2093,   666,  5231,  4059,  2848,  5465,  2960,
   -2332,  -913,  6008,    42,  4424,  3771,  4425,  1847,   927,  5455,
    4423,   929,  3504,  2712,    44,  3647,  1845,  4001,  1846,  3567,
    3567,  1306,   638,  1464,  1858,  3781,  1873,  1874,  1875,  1876,
    2873,  2874,  4884,   844,  2877,  4325,  1838,  5327,  1975,  2884,
    2885,  2886,  3041,  3893,  3893,  5084,  2029,  3893,  3893,  2755,
    2106,  2107,  1387,  3893,  3893,  5962,  1842,  1843,  4319,  1683,
    1844,  5099,  5100,  1387,  1387,  4321,  4322,  2888,  2832,  5963,
    4323,  4327,  4633,  4634,  1695,  3648,  5695,  2456,  2298,  3718,
    4637,  4638,   769,  2961,  4676,  5737, -2014,  3719,   537,  1217,
    2795,  2938,  1161,  1888,  2851,  5352,  1842,  1843,  4162,  5753,
    1847,  2057, -2771,  1955,   513,  5173,  5174,  5175,  1847, -2771,
   -2771,  6005,  2073,  1994,  4708,  6004,  3133,  2212,  1845, -2680,
    1846,  1465,   510,  2965,  4332,  1836,  4334,  2813,  5617,  1854,
    1855,  1856,  1161,  1859,  3954,  1161,  4110,  4111,  1847,  3520,
    4087,  4029,  4276,  2722,  4278,  4279,  4858,  2237,  1860,  1736,
    4284,  2839,  2937,  3715,  1708,  1709,  1710,  5969,  4292,  3986,
    3042,  1466,   681,  4299,  2939,  2195,  5391,  5451,   824,  4685,
    3721,  2683,  1844,  4986,  1429,   937,  1581,   515,  4378,   706,
     707,  2221,  4073,  2196,  5455,  2167,  5602,  3417,  2167,  2167,
    3418,  2867,  6048,  3594,  3595,  1502,  2880,  2883,   927,  5502,
    2871,   929,  3983,  3463,  3854,  3384,  3385,  5626,  3444,  5628,
    1842,  1843,  1844,  3716,  2992,  1764,  5530,  2959,  3057,   780,
    3785,  5268,  6068,  3772,  1961,  1861,  3631,  2003, -1526,  3995,
    1845,  5691,  1846,  1189,  1410, -2749,   938,  3238,    16,    17,
    1847,  2916,  5443,  3058,  2237,  2948,  3646,  5696,  2948,  5346,
    4830,  4831,  4832,  4833,  3559,  2928,   781,  2030, -2014,  3521,
    3560,  4262,  5335,  1956,  4517,  4518,  4519,  4520,  2955,  2274,
    1845,   879,  1846, -2747,  5272,  3455, -1526,   690,  4270,  3456,
    4028, -1526,  1330,  2682,   835,  3136,  3137,  1412,  5325,  2718,
    1374,   699,  3461,  2950,  1161,  1424,  4074,  2814,  5728,  5730,
    2348,   706,  5316,  2719,  2243,  3468,  3469,  1299,  5024,  3036,
    4532,  3134,  1402,  3381,  3714,  3519,  5772,  2966,  4012,  5495,
   -1526,  2004,  5500,  5501,  4859,  1995,  1844,  5504,   706,  5232,
    1161,  2466,  4002,  5509,  4594,  5757,  2005,  1646,  1684,  3943,
    2299,   898,  3798,  1161,  1161,  3138,  5451,   854,   855,  1161,
    1889,  3948,  1847,  1161,  1161,  1161,  1976,  1425,  5004,  5960,
    4009,   666,  1383,  5503,  1161,  1161,  5531,  2756,  5394,  1925,
    1161,  3172,  1161,  1161,  1161,  1161,  1161,  1838,  1161,  5555,
    1842,  1843,  3928,  3929,  4705,  3921,   666,  3924,  5562,  1161,
    5697,  1161,  1847,  5964,  1161,  1161, -2680,  1161,  1161,  1161,
    2071,  1161,  1161,  1161,  5176,  2654,  2238,  5416,  1161,  1256,
   -2750,  1161,  1187,   880, -2748,   782,  2723,   470,  5970,  1161,
    1161, -2014,  1161,  1161,  1161,  2930,  2619,  1161,  1161,  1161,
    1161,  1161,  1161,  1161,  2226,  1161,  1161,  1161,  1161,  1161,
    1161,  2404,  1161,  1161,  5384,  1161,  1161,  1161,  1161,  1161,
    1161,  1161,  4595,  1582,  1161,  1161,  1161,  1161,   515,  1161,
    1161,  1161,  2243,  1161,  4003,  1161,  1836,  1161,  5851,  5269,
    5853,  1161,  1161,  1161,  3653,  3232,  1161,  1161,  1161,  1161,
    1161,  4987,  1161,   470,  3169,  3520,  1190,  5623,  3170,  1161,
    5444, -2460,  4706,  2239,  5881,  2240,  1844,  1161,  1161,  1161,
    1161,  4031,  5836,  2238,  4325,  2609,  1847,  1161,  1161,   872,
    1161,  1161, -2749,   873,  1161,  1161,  1161,  1161,  1161,  1161,
    1161,  1161,  1161,  1161,  1161,  1161,  1161,  4319,  4342,  1161,
    5005,  3799,  4093,  5402,  4321,  4322,  2676,  1403,  3481,  4323,
    4327,  2560,  3054,  2561,  3350,   579,  4350, -2460,  5545,  1858,
   -2747,  1842,  1843,   713,  1845,  3352,  1846,  3356,  5108,  1842,
    1843,  1467,  5457, -2656,  4170,  1647,  4437,  5776,  4438,  1842,
    1843,  2353,  6026,  4344,  1161,  3987,  3233,  3654,   515,  1161,
    1842,  1843,  3927,  1842,  1843,  2241,  2404,  1842,  1843,  1161,
    2239,  1594,  2240,  1842,  1843,  3059,  1736,  3239,  4679,  1842,
    1843,  3988,  2404,  2728,  4443,  3521,  4444,  4112,  2200,  5618,
    2434,  5045,  5045,  2405,  5574,  1842,  1843,  5837,  5563,  5564,
    5644,  1380,  2325,  5052,  4003,  4294,  4777,  2775,  2931,  5988,
    5989,  5038,  2955,  4778,  4596,  3277, -1466,  5188,    16,    17,
    4003,  4003,  2729,  5607,  3632,  4671,  4672,  4673, -2460,  2406,
    2744,  2745,  3777,  2747,  2748,  2749,  1161,  2375,  1859,  4551,
    5514, -2460,  3421,  2242,  2758,   716,  2943,  1844,  1842,  1843,
    2376,  5608,  2447,  1860,  2924,  1844,  1847,  4302,  1862,  2770,
    5281,  5119,  2241,  -914,  1161,  1844,  1161, -2750,  3325,  5039,
    1945, -2748,  3365,  5006,  4550,  5227,  1844,   843,  5777,  1844,
    3366,  3440,  3342,  1844,   706,   707,  4483,  3655,  4484,  1844,
    4032, -2460,  2965,  5646,  5882,  1844,  5170,  5565, -2460,  2353,
    1161,  5377,  5585,   843,  5688,  1845,  1675,  1846,  5609, -2460,
    2377,  1844,  2634,  1845,  4680,  1846,  5282,  4791,  4794,  2941,
    4797,  2961,  3367,  1845,  2354,  1846,   780,  1842,  1843,  -258,
    1861,  5546,  2960,  4008,  1845,  3633,  1846,  1845,  2405,  1846,
    2242,  1845,  3634,  1846,  4527,  4528,  1439,  1845,  1447,  1846,
    3635,  3518,  3646,  1845,  2405,  1846,  5778,  1842,  1843,  4536,
    6021,  3656,  3476,   781,  1844,  2942,  1955,   927,  4076,  1845,
     929,  1846,  3399,  5566,  2243,  4295,  5619,  3410,  2730,  2326,
    3552,  5040,  4048,  3553,  2763,  1161,  4843,  3558,  4928,  4929,
    1387,   752,  5633,  4514,  3437,  5919,  1387,  1375,  3438,  2878,
    3235,   580,  5876,  5877,  1842,  1843,  5647,  2943,  2243,  3041,
    1376,  1387,  1946,  3042,  2195,  3422,  1161,  1277,  3721,  3720,
    1347,  2635,  1845,  3636,  1846,  1947,  2925,  1847,  2764,  3500,
    2562,  2167,  2196,  2563,  2964,  1847,  2636,  2955,  5585,  2615,
    3245,  1842,  1843,  1844,  4343,  1847,  4363,  4364,  4365,  4366,
     581,  5812,  1675,  5109,  4326,  5110,  1847,   820,  5041,  1847,
    5966,  5385,  3579,  1847,  4324,  3979,  3980,  5126, -2430,  1847,
    1842,  1843,  2354,  1844,  6022,  1847,  5889,  4296,  3483,  1377,
    5283,  5843,  5836,  4840,  3637,  1948,  2966,  1362,  3994,  3657,
    3714,  1847,  5111,   710,  1949,  2699,  4891,  1347,  2378,  4753,
    2358,  1845,  5301,  1846,  5302,  4114,  1348,  1349,  2700,  2064,
    5625,  2064,  5693,  2637,  4142,  4096,  3982,  1448,  4904,  4100,
    1844,  5112,   782,   706,   707,  2955,  1956,  4037,  2616,  2944,
    2951,  1845,  6086,  1846,   539,  1449,   773,  6032,  5045,  3234,
    4482,  2945,  4485,  2323,  1847,  4773,  1842,  1843,  4333,  3658,
    5203,  4142,  4142,  5332,   546,  1161,  1161,  1844,  4115,  5995,
     740, -2511,  4038,  2765,   774,  3084,  1842,  1843,  2377,  5344,
    2212,  1842,  1843,  5132,  1842,  1843,  5568,   544,  1845,  5813,
    1846,  4449,  5010,  1348,  1349,  5011,  1844,  3599,  5127,  2154,
    4841,  5994,  5840,  1842,  1843,  5847,  2664,  5837,  2168,   542,
     -72,  2168,  2168,  3596,  5764,  4386,  2167,  1616,  5353,  4450,
    5355,  4346,  2353,  4384,  4385,  1845,  3048,  1846,  4708,  4754,
    1842,  1843,  4391,  1847,  4392,  1387,  4394,  1981,  2617,   754,
    2665,  3165,  1378,  6033,  6073,  6074,  2952,  4349,   741,  1161,
      16,    17,   886,  4774,  1845,  2946,  1846,  1950, -1466, -2511,
     755,  3175,  5687,  1847,  2114,  5731,   868,  5113,   539,  4142,
    5558,  1161,  1844,  1161,  1617,  6090,  2219,  1618,  1350,  4811,
    4134,  1161,  1161,  1951,  3173,   757,   876,  5769,   546,  2008,
    6087,  5458,  1844,   543,  5012,  1883,  6034,  1844,  5459,   901,
    1844,  3048,  4003,  5114,  1619,  2684,  3168,  1842,  1843,   875,
    1847,   544,  1620, -2511,  5094,  5769,  2666,  3049,   802,  1844,
    1325,  5840,   545,  1892,  3508,  3509,  3223,  2947,  5847,   850,
    1845,   871,  1846,   542,  3247,  1842,  1843,  2451,  4003,   806,
    1277,  2009,   895,  5732,  2212,  3050,  1844,  1847,  1842,  1843,
    1845,  1320,  1846,  2220,   803,  1762,  5902,  4135,  1845,  5906,
    1846,  5095,  6091,  5460,  2434,  2434,  2701,  5071,  5544,  2452,
    1161,  1161,  1161,  5076,  5078,  5080,  1847,  1845,  5013,  1846,
    5085,  5086,   567,  4940,  2453,  5158,  5091,  4943, -2460,  5161,
    3171,  5163,  3049,  1862,  5098,  2354,   805,  2667,  5103,   515,
    1675,  3510,  1842,  1843,  1845,  5071,  1846,  3841,  1326,  5117,
    5071,   927,  6062,  3776,   929,   874,  3774,   543,  3846,  3174,
    3056,  5223,  5182,  1844,  5183,  5184,  2507,  2510,  2454, -2275,
    3945,  3615,  5096,  5162,  5920,  5164,  1842,  1843,  6075,  5840,
    5847,  2267,  5835,  5224,   545,  3051,   545,  4390,  1161,  3946,
    2434,  1844,  1847,  4395,  1842,  1843,  2455, -2275,  1842,  1843,
    2209,  2210,  1327,  2434,  1844,   706,   707,  1842,  1843,  1161,
    1838,   722,  1847,  1161,  1161,  3879,  1161,  1161,  3365,   806,
    1847,  1845,  1952,  1846,  4039,  1161,  4932,  1161,  -417,  6016,
    3969,  3121,  1410,  1925,  2248,  1925,  4182,  4183,  3617,  1847,
    4184,  4185,  4186,  3440,  4936,  3251,  3890,  6030,  6030,  1845,
    5034,  1846,  2528,  3252,  5836,  1161,  6038,  5057,  1844,  1920,
    3051,  1183,  1845,  3253,  1846,  2539,  1847,  3491,  5035,  1161,
    1193,  4040,  1842,  1843,  3270,  1594,  1288,  3278,  1842,  1843,
    1411,  3280,  3492,  1842,  1843,  1412,  1161,  3283,  6053,  1161,
     686,  6055,  1844,  3284,  2292,   693,  2456,  3936,  1953,  1836,
    3905,  1842,  1843,   825,  1842,  1843,  1954,  6059,  3433,  3285,
    1844,  3432,  1161,  1982,  1844,  3906,  1845,   835,  1846,  1842,
    1843,  5116,  4153,  1844,  1413,  4012,  5118,  4834,  6072,  4835,
    3452,  3442,  2317,  2318,  1161,  4041,  3108,   836,  3457,   710,
    2960,  1452,  3234,  1847,  6115,  1230,   847, -2505,  1238, -2505,
    1845,   848,  1846,  5215,  4850,  4851,  3437,  1983,  4544,  1984,
    3438,   515,  3286,   892,  3721,  5891,  4829,  4897,  1845,  5837,
    1846,  1847,  1845,  1164,  1846,  1161,  3436,  3451,   943,  4042,
     677,  1845,  4866,  1846,  1847,   677,  3460,  3937,  1844,  3454,
     677,  1842,  1843,  2897,  1844,  1189,  3004,  3005,  2898,  1844,
    1166,  4585,  2899,  1181,  1736,  4506,  4920,  4893,   843,  1842,
    1843,  3017,   675,  3757,  2056,  4339,  4549,  1844,  1842,  1843,
    1844,  1387,  3517,  1301,  2893,  1387,  2894,  2618,  1842,  1843,
    3618,  4806,  3041,  4808,  1291,  1844,  3563,  3720,  1847,  1305,
    3564,  3289,  1003,  4814,  4815,  3758,  1845,  4317,  1846,  1306,
    4539,  4915,  1845,  1985,  1846,  1842,  1843,  1845,  4546,  1846,
    3439,  1236,  1842,  1843,  2133,  1237,  2172,   752,  4944,  2174,
    2174,  3290,  1847,  1311,  1010,  1845,  3619,  1846,  1845,  2084,
    1846,  2900,  4540,  4015,  1314,  2089,  2090,  1332,  2965,  3441,
    1847,  5069,  3925,  1845,  1847,  1846,  3236,  1858,  2505,  1320,
    1161,  5239,  1986,  1847,  3759,  2338,  2131,  1844,  4900,  3019,
    3020,  3547,  4902,  3550,  1161,  3275,  1161,  2034,  3291,  3555,
    3557,  3608,  3281,  4878,  3282,  1844,  5401,  1323,  3612,  3613,
    4675,  3108,  3760,  1022,  1844,  4043,  4044,  4045,  2134,  1842,
    1843,  4541,  1355,  1356,  1844,  1359,  4791,  1360,  4794,  2135,
    4797,  1987,  1842,  1843,  1334,  3309,  2136,  1341,  3620,  4820,
    3292,  1034,  2034,  1842,  1843,  1845,  1343,  1846,  1847,  4542,
    1161,  1844,  1357,  3298,  1847,  2034,  1842,  1843,  1844,  1847,
     773,  1842,  1843,  1845,  3314,  1846,  1842,  1843,  2137,  1361,
    1842,  1843,  1845,  1363,  1846,  1842,  1843,  1847,  1368,  1743,
    1847,  1925,  1845,  1407,  1846,  2134,  1859,  1370,  3302,  4126,
    2034,  1842,  1843,  5404,  2168,  1847,  2135,  1387,  3755,  1760,
    3621,  1860,  5417,  2907,  2654,  1925,  1765,  1766,  1371,  1845,
    2451,  1846,  3761,  2955,  1372,  3303,  1845,  2034,  1846,  3622,
    3623,  1988,  5258,  5034,  3624,  3625,  3626,  1439,  5241,  5242,
    2138,  1445,   706,   707,  3304,  1844,  2034,  3310,  1459,  2034,
    3317,  1055,  2452,  1989,  4770,  3730,  1470,  3733,  1844,  4543,
    1478,  4802,  4804,  4804,  4174,  4804,  3737,  4136,  3738,  1844,
    3324,  2139,  2966,  4802,  4802,  4804,  4804,  1847,  3335,  4656,
    4657,  1476,  1844,  4658,  4659,  5147,  1477,  1844,  1861,  4660,
    4661,  3739,  1844,  3738,  4514,  1847,  1844,  3816,  1482,   742,
     743,  1844,  3627,  1845,  1847,  1846,   820,  2908,  2370,  2371,
    2353,  4137,  2372,  3741,  1847,  3742,  1845,  1844,  1846,  1486,
    2212,  2212,  2212,  2212,  4408,  1490,   872,  1845,  1497,  1846,
     873,  3783,  1577,  3784,  4812,  4813,   744,  4846,  2139,  4138,
    1845,  1847,  1846,  1578,  3805,  1845,  3806,  1846,  1847,  1579,
    1845,  3628,  1846,  1580,  1845,  4939,  1846,  1583,  4020,  1845,
    4021,  1846,  4104,  1594,  4105,  1921,  1277,  1655,  1655,  1655,
   -2275, -2275,  4165,  1161,  4166,  1845,  1161,  1846,   745,  2168,
    4310,  1613,  4311,  5741,  4431,  1161,  3282,  1661,  1661,  1661,
    2697,  2697,  2697,  2697,  1161,  4434,  1161,  2034,  1161,  3242,
    1161,  1161,  1161,  1161,  1161,  1161,  1615,  1161,  1842,  1843,
    1659,  1659,  1659,    16,    17,  1161,   515,  1161,  1621,  5686,
    1161,  1161,  1161,  1161,  1623,  1847,  1161,  1161,  1277,  4409,
    1161,  4441,  1161,  4442,  1161,  1624,  1161,  4343,  1847,  4139,
    1161,  4448,  4420,  2034,  1635,  4481,  2591,  2592,  1161,  1847,
    1161,  1626,  1161,  1161,  1161,  1161,  1161,  1632,  1636,  1161,
    1161,  1161,  1847,  1161,  4182,  4183,  1161,  1847,  4184,  4185,
    4186,  4452,  1847,  4453,  1637,  4780,  1847,  4781,  1638,  1161,
    4591,  1847,  1640,  2354,  1161,  1645,  1676,  1161,  4937,  1161,
    1161,  1161,  2481,  4906,  1161,  2034,  4440,  1847,  1696,  1697,
    1161,  1452,  1452,  1452,  1452,  1161,  1755,  5152,  4927,  5153,
    3433,  1698,  4460,  3432,  1161,  1703,  1658,  1658,  1658,  5154,
    1161,  5155,  1161,  1704,  1844,  1161,  1838,  1878,  4933,  4934,
    4457,  1705,  1706,  3442,  5415,  1161,  1879,  1161,   623,  3367,
    1387,  1387,  1161,  1842,  1843,  1660,  1660,  1660,  4458,  1802,
    1842,  1843,  5195,  1842,  1843, -1871,  5156,   746,  5157,  3246,
    1707,  3964,  2482,   680,  4053,  1711,  3004,  3005,   680,  5196,
    5213,  2034,  5214,   680,   747,  1864,   696,  1713,  3436,  3957,
    5349,  3017,  1845,  1714,  1846,   539,   537,  1161,  1715,  4526,
    5204,  1452,  1842,  1843,  1864,  5221,  1716,  2034,  3029,   748,
    1842,  1843,   513,  5189,  1808,   546,  5206,   487,  1717,   515,
    5208,   488,  1842,  1843,  1161,  1836,   540,  5436,  1231,  1718,
     510,   489,   490,  3720,  3248,  1719,  5506,  2483,   544,  2484,
    3249,  1720,  1721,   715,  2485,  3271,  1722,  1723,  1241,   749,
    3029,  1842,  1843, -1870,  1724,  1161,  1725,  2064,  1842,  1843,
     542, -1158,  1880,  3274,  5383,   515,  3276,  1881,  5234,  1844,
    5235,  1239,  3439,  4326,  1882,  1161,  1844,  1161,  3061,  1844,
    1865,  3279,  1728,  4324,  4613,   515,  1738,  1739,  5854,  3019,
    3020,  1740,  5365,  1235,  1741,  1744,  3072, -2430,  1866,  1865,
    1745,  3441,   706,   707,  1746,  3077,   720,  1842,  1843,  2486,
    1747,  3079,  2955,  1748,  1847,  1842,  1843,  1866,  1844,  3088,
    1749,  1842,  1843,  5069,  1750,  5553,  1844,  1845,  1751,  1846,
    3101,  1752,  1753,  3103,  1845,  5643,  1846,  1845,  1844,  1846,
    5249,  5260,  5250,  5261,   543,  1161,  5300,  5430,  4105,  4553,
    1754,  1862,  2487,  3287,  2955,  1867,  1868,  1350,  1842,  1843,
    1756,  1842,  1843,  5532,  1757,  5533,  1161,  1844,  1758,  1759,
    2965,  3288,  1886,   545,  1844,  5572,  1845,  5573,  1846,  5576,
    3294,  5573, -2679,  5605,  1845,  4105,  1846,  4083,  1884,  5606,
    3295,  4105,  1891,  3030,  4143,  5719,  1845,  5573,  1846,  2353,
    1761,  1767,  5571,  1842,  1843,  5774,  1240,  5775,  4158,  4159,
    4160,  4161,  5644,  4163,  4164,  1890,  5803,  3299,  5804,  1768,
    4143,  4143,  1769,  1844,  3300,  1845,  2267,  1846,  5814,  1770,
    5815,  1844,  1845,  1771,  1846,  3030,  1864,  1844,  1772,  1842,
    1843,  2353,  2488,  1773,  4260,  1842,  1843,  1774,  1777,  1847,
    3031,  1842,  1843,  2489,  1778,  1161,  1847,  1779, -2430,  1847,
    4280,  4281,   728,  4283,  1780,  4285,  4286,  4287,  4288,  4289,
    4290,  4291,  1781,  4293,  1844,  5720,  4298,  1844,  1782,  5723,
    4301,  1845,  5833,  1846,  4166,  4143,  4143,  1783,  1864,  1845,
    1900,  1846,  3031,  4844,  1786,  1845,  1201,  1846,  1847,  1787,
    2212,  3301,  1788,  1572,  6010,  5646,  1847,  5867,  1789,  5235,
    1842,  1843,   732,  1905,  3307,  2955,  3943,  1277,  1847,  1844,
    1906,  5993,   539,  1576,  5951,  3308,  4953,  1790,  1842,  1843,
    1791,  1865,  1845,  1792,  1846,  1845,  1793,  1846,  3312,  5955,
    1794,  5573,   546,  4857,  2697,  2697,  1575,  1847,  3313,  1866,
    1842,  1843,  3315,  3084,  1847,  1844,  3032,  3322,  1202,  1277,
    5957,  1844,  5573,  1795,  2966,   544,  1796,  1844,  1573,  5958,
    1797,  5573,  2354,  3336,  5976,  5789,  5977,  1845,  1798,  1846,
    2167,  1799,  1800,  1865,  1161,  5397,  5985,   542,  5986,  1655,
    1842,  1843,  6013,  6014,  5573,  5573,  1161,  1801,  3032,  1161,
    1803,  1866,  2353,  1847,  1804,  1907,  1867,  1868,  1805,  1661,
    5553,  1847,  1806,  1845,  2354,  1846,  4907,  1847,  5647,  1845,
    1807,  1846,  5834,  1161,  1161,  1845,  1844,  1846,  6017,  1809,
    5573,  5049,  1659,  5051,  1230,  5684,  5054,  1238,  5538,  5058,
    1842,  1843,  5061,  5062,  1844,  1908,  6020,  1161,  5235,  1161,
    3707,  1161,  1574,  1161,  1847,  1452,  1452,  1847,  1867,  1868,
    1810,  1842,  1843,  5808,  5480,  5481,  1844,  5483,  1811,  1812,
    5973,   543,   794, -2713,  6054,  1161,  5573,  6103,  5101,  6104,
    1813,  1842,  1843,  1814,  1845,  1656,  1846,  1666,  1667,  1668,
    1915,  1842,  1843,  1669,  1815,  1672,  1161,  1161,  1818,  1847,
     545,  1819,  1845,  1161,  1846,  1161,  1844,  1161,  1675,   800,
     623,  1822,  1161,   623,  1842,  1843,   810,   816,  1823,  1824,
    1277,  5752,  1825,  1826,  1845,  1161,  1846,  1827,  5872,  1828,
    5874,  5875,  1829,  1885,  5033,  1847, -2714,  1943,  1658,  1203,
    1204,  1847,  4326,  5044, -2678,  1940, -2710,  1847, -2708,  1205,
    1236, -2712,  4324,  4523,  1237, -2707,  1844,  1944, -2711,  1161,
    1161,  4511, -2705, -2709,  1845,  1962,  1846,  1660,  1963,  1411,
    1206,  1977,  1978,  1980,  1161,  2354,  5659,  1844,  1979,  2000,
    4403,  2001,  2006,   816,  1842,  1843,  2012,  2021,  2034,  1842,
    1843,  2065,  2075,  1842,  1843,  1161,   816,  1844,  5053,  2077,
    2081,  2087,   810,  5660,  2088,  5816,  1847,  1844,  2094,  2095,
    2097,  3642,  1842,  1843,  1845,  2099,  1846,  2103,  2119,  2131,
    2142,  4982,  2120,  2121,  1847,  2143,  1184,  2146,  2156,  2159,
    1844,  2169,  2170,   810,   515,  1845,  1233,  1846,  2191,  5952,
    5953,  2198,  5612,  5956,  5613,  5614,  1847,  2192,  1298,  4260,
    4260,    16,    17,  4614,  2203,  1845,   810,  1846,  2201,  2206,
    2211,  2207,  2223,  2250,  4126,  1845,  2233,  1846,  2255,  1317,
     810, -1158,  2253,  5808,  1870,  1871,  1872,  1873,  1874,  1875,
    1876,  2254,  1161,  2264,  2260,  2288,  1847,  6114,  1845,  2268,
    1846,  4174,  1161,  2295,  1871,  1872,  1873,  1874,  1875,  1876,
    1844,  1864,  1364,  2304,  1161,  1844,  1161,  2311,  2312,  1844,
    2313,  2322,   706,   707,  2328,  4406,  4620,  5661,   794,  2330,
    2332,  5662,  4407,  5056,  6015,  4412,  2338,  2344,  1844,  2342,
    5913,  1842,  1843,  2167,  2167,  1436,  1847,  2346,  5689,  5690,
    2349,  2357,  2363,  1443,  2364,  5643,  2366,  2368,   810,  2367,
    1458,  2389,  2392,  2013,  2397,  1207,  3250,  1847,  1845,  5092,
    1846, -3435,  2410,  1845,  4416,  1846,  2412,  1845,  2413,  1846,
     810,  2415,  4417,  4771,  2414,  1842,  1843,  1847,  2417,  2418,
    1484,  2420,  -915,  2421,  4418,  4683,  1845,  1847,  1846,  5337,
    2425,   794,  2433,  1458,  2434,  2443,  1865,  2450,  1842,  1843,
    5981,  2461,  2465,  2493,  2504,  2470,  2471,  2472,  2473,  2505,
    1847,  2506,  1844,  4419,  1866,  2965,  3266,  2515,  2519,  2523,
    4421,  2524,  5644,  5165,  2576,  2582,  4260,  1591,  2586,  1593,
    1842,  1843,   623,   623,   623,   623,  1601,  1458,  2544,   810,
    -915,  1507,  2596,  2607,   759,  2611,  5645,  1844,  2633,  2629,
    3755,  2660,  2661,  2685,  2686,  5360,  3029,  2941,  2474,  2475,
    2476,  2687,  6097,  3491,   706,   707,  2694,  4867,  2695,  4430,
    6027,  1867,  1868,  2707,  2703,  5663,  6107,  4436,  3492,  4868,
    1847,  5706,  6097,  4439,  2710,  1847,  2740,  4143,  6107,  1847,
     794,  1844,  1665,  5326,  2738,  2741,  5329,  5330,  2761,  4869,
    1670,  2776,  1673,  2942,  2777,  1845,  2778,  1846,  1847,  2779,
    2781,  2782,  2477,  2478,  1844,  5646, -2287,  1682,  2783,  2801,
    4445,  2798,  3710,  4446,  1869,  1870,  1871,  1872,  1873,  1874,
    1875,  1876,  4870,  2802,  1161,  2805,  5981,    16,    17,  1842,
    1843,  3210,  2807,  2806,  4684,  2943,  1844,  2808,  2816,  1845,
    2809,  1846,  -915,  3937,  2817,  2818,  2826, -1158,  2827,  2828,
    2955,  1208,  1209,  1210,  1211,  4447,  2830,  2829,  2831,  2833,
    2834,  2840,  1845,  2844,  1846,  2841,  1869,  1870,  1871,  1872,
    1873,  1874,  1875,  1876,  2479,  5254,  2845,  2849,  1161,  1161,
    2854,  1161,  2861,   760,  2865,  2887,  2889,  2890,   706,   707,
    1161,  4455,  1161,  2891,  1845,  1161,  1846,  4456,  2892,  2966,
    2895,  2903,  2904,  4459,  2905,  2920,  2917,  2913,  1161,  2918,
    1161,  4871,  1161,  2921,  1161,  2927,  2929,  1847,  5647,  -915,
    2932,  5643,  2933,  2390,  2940,  3131, -2695,  1161,  1161,  2963,
    2978,  3030,     4,  2986,  2989,  2990,  2987,  2353,  2993,  2994,
    4191,   946,  4192,  4193,  3026,  1844,  3043,  3045,  2480,  3066,
    3068,  5788,  3095,  3102,  1161,   780,  2316,  2944,  4523,  1839,
    3115,  1847,  4463,     8, -1526,  1925,  4194,  3078,  4195,  2945,
    3114,  3119,  1413,  3126,  4196,  3123,  3129,  1699,  3206,  3132,
    4476,  4872,  3139,  3144,  1847,  3163,  3184,  3202,  4930,  3217,
     947,  3204,   781,  4702,  3820,    14,  2192,  3205,  5644,  3207,
     948,  3185,  5194,  1845,  3216,  1846,  3218,  1231,  4197,  3821,
    4685,  3221, -1526,  3222,    18, -1277,  1847, -1526,  3224,  1161,
     810,   794,  5645,  1161,  3234,  3237,  3293,  1241,  3241,   949,
    5707,  3244,  3254,  3255,   872,  3822,   950,  5708,   873,  3296,
    3259,  2481,  5200,  3267,    16,    17,  3316,  3823,  4703,  4198,
    1239,  1912,  5709,    23,  4960,  1277, -1526,  3268,   810,  3269,
     810,  3328,  3273,  5494,   810,   810,  3297,  3824,  3306,  3323,
    3327,  3491,  1235,  2946,  3320,  5594,  3321, -2430,   951,  4260,
    4199,  3344,  5674,  3340, -1663,  5665,  3492,  3349,   706,  3054,
    1876,  5646,  5201,  3355,   810,  4873,  3362,  4874,  3825,  3364,
    3826, -1840,  5896,  2168,  3371,  3383,  3378,  1784,  1816,  3387,
    2354,  2482,  1820,  5202,  3398,  4200,   515,  3400,  3415,  4201,
    3416,  3423,    31,  3401,  3449,  1847,  6079,  4202,   952,   953,
    4203,  2017,   794,  5211,  5025,  3419,  5933,  3407,   794,   794,
    2028,  3424,   954,  5212,  3420,  2947,  3458,  3462,  3425,  3470,
    5050,   782,  4704,  4204,  3498,  3473,  2069,  3426,  3474,  3427,
    -913,  3428,  3497,  3526,  5066,  2079,  5216,  3528,  3530,  3529,
     872,  3534,  3533,  3562,   873,  5648,  2483,  3569,  2484,   794,
    2092,  5087,  5710,  2485,  3573,  1240,  3587,  3593,  3597,  4205,
    4206,  4207,  3600,  1842,  1843,  5711,  3604,  5088,  5089,  5105,
    2105,  5106,  5107,    43,  5647,  3605,  3606,  1864,  3607,  3609,
    3610,  3611,  3662,  5104,  4208,  5712,  3665,  3668,  3672,  3674,
     794,  2130,  1842,  1843,  3701,  4686,  3677,  3702,  3709,  3678,
    4260,  3679,  3680,  3681,  3682,  3683,  5217,  5135,  3684,  4209,
    2153,  5547,    75,  1161,  1161,  5622,  3685,  3726,  2486,  4875,
    4876,  3686,  3687,  3688,  3689,  2173,  3690,  3691,  3692,  3827,
    4210,  3693,  3694,   955,  3727,  3695,   641,  3696,  4211,  3697,
    4212,  3828,  3698,  2181,  2182,  3734,  3735,  3728,  3867,  1869,
    1870,  1871,  1872,  1873,  1874,  1875,  1876,  5166,  3699,  4213,
    3700,  2487,  3745,  3733,  3765,   794,  4214,  3729,  3730,  3731,
    5142,  3746,  1865,   513,   810,   794,  3767,  3768,  4215,  1844,
    1842,  1843,   623,   794,  3790,  4216,   794,  2243,  3780,  3771,
    1866,  3786,  1161,  3788,  1842,  1843,   794,  3789,  4685,  3791,
    4217,   642,  3792,  4687,  1842,  1843,  3793,   956,  1844,  1277,
    4218,  3796,  3801,   515,  4219,  4220,  3802,  3755,  5717,   872,
    3803,  4221,  3842,   873,  5713,  4222,  3800,  3809,  3843,  3844,
    3855,  3366,  3856,  4223,   872,  5599,  3865,  1845,   873,  1846,
   -1879,  3901,  3875,  3829,  5768,  3830,   515,  1867,  1868,  3914,
    1161,  2488,  3932,  4224,  3916,  3902,  3933,  4771,  3939,  3917,
    3949,   564,  2489,  3940,  3951,  3869,  1845,  1161,  1846,  3955,
    3941,  6111,  5768,  1161,  1161,  3372,    44,  4877,   643,  4225,
    3967,  3971,  2451,  4226,  3972,  2329,  3973,  3974,   794,  3871,
    2337,   644,  3978,  4227,  3984,  3985,  1844,  2723,  2722,  1161,
    2347,   623,  5317,  3992,  1842,  1843,  4432,  5320,   810,  4006,
    1844,  3997,   810,   794,  2452,  3108,  4022,   758,  4024,  4260,
    1844,  4260,  4023,  4027,  4030,  4036,  2168,  2168,  4035,  4136,
    4228,  5648,  5292,  4060,    16,    17,  4061,   810,  4063,  1161,
     810,  1161,  4067,  4229,  5407,  4230,  4068,   986,   957,  4094,
    3819,  4095,  4124,  4132,  1845,  5318,  1846,  4098,  4099,  1847,
     645, -2187,  4133,   759,  4189,  4177,  5717,  2411,  1845,  4178,
    1846,   872,  4179,  4137,  -940,   873,  3602,  3603,  1845,  4263,
    1846,  4267, -1188,  4274,  4231,  4275,  1003,  4277,  1847,  4306,
    4232,  4331,  4337,  3614,  4340,  3124,   794,  5659,  3831,  4341,
    5343,  4138,  4347,  3640,  3641,  4352,  5768,  4355,  4359,  4360,
    1842,  1843,  4435,  4705,  4361,  1008,   565,  4233,  1010,  4368,
    1844,  4373,  4381,  4379,  5660,  4388,  4389,  5350,  4234,  4235,
    4236,  4396,  4393,  1014,  1015,  4451,  4397,  4398,  4399,  4462,
    4464,  2654,  4474,  4480,  4475,  4488,  4479,  4490,  4497,  4237,
    4500,  4501,  4503,  4504,  4507,  4508,  4238,  4510,  4509,  4515,
    4516,  4533,  1864, -3468,  4529,  4530,  3579,  3703,  3704,  3705,
    3706,  1572,    16,    17,  4547,  4552,  1847,  1022,  1845,  4553,
    1846,  5367,  4554,  4568,  4557,  4556,  4586,  4239,  4560,  4566,
    1847,  1576, -1158,  4587,  4588,  4589,  1028,  4590,  1899,   794,
    1847,  4139,  4240,  4241,  1033,  1034,  3832,  1161,   794,  4593,
    4599,  4616,   760,   646,  1575,  4242,  4642,  4413,  4243,   794,
    1655,  4706, -1967,   796,  2133,  6108,  1844, -1972,  4650,  4651,
    2600,  4647, -2240,   706,   707,  1161,  1573,   566,  5661,   647,
    1661,  4654,  5662,  4664,  4669,  4655,   810,  4685,   761,  4681,
    4698,  4700,  4701,  4710,  4713,  3833,  4712,  1865,  4732,  4771,
    4734,  4736,  1161,  1659,  4735,  4724,  5643,  4729,  4738,  4739,
    4747,  4748,  4749,  4750,  4758,  1866,  4784,  4776,  3834,  4817,
    4822,  4823, -1277,   810,  1845,  2659,  1846,   648,  4825,  4828,
    4839,  4837,  4849,   566,  4852,  1052,   515,  4853,  2134,  4861,
    1847,  2965,  4469,  4908,  1054,  1055,  1056,  1572,   794,  2135,
    5914,   810,   810,  4860,  4898,   567,  2136,  3332,  4112,  4910,
    1574,   810,  2713,  4911,  4913,  2669,  4917,  1576,  4914,  4925,
    4926,   810,  1867,  1868,  4952,  4953,   752,  4957, -3468,  4958,
    4959,  4975,  3029,  5644,  4963,  2734,  1912,  4203,  2137,  4989,
    1575,   623,   623,   794,   623,   623,   623,   794,   810,   794,
    4990,  4635,  1161,  -295,   568,   623,  5000,  5645,  4995,  1658,
    5002,   567,  1573,  5016,  2656,  5027,  5028,  5035,  5029,  2769,
     623,  5037,   810,   -73,  5055,  5059,  5060,  5129,  5132, -2430,
    5137,   793,  5717,  5140,     4,  4569,  5663,  5143,  1660,  5144,
    3776,  5151,  4570,   946,   794,  5150,  1847,  5159,  3710,  5167,
    2138,  5168,   569,  5169,  5171,   794,  5179,  6011,  4571,  5408,
    5190,  5180,  5185,  5197,   649,     8,  5186,  5409,  4572,  4573,
    4574,  5199,  5205,  1161,  5207,  5198,  5646,  5222,  4575,  5210,
    5219,  2139,   650,  5220,  5229,  2133,  2955,  5236,  5244,  5237,
    5246,  5247,   947,  5251,  5256,  5257,  1574,    14,  5285,  1161,
    5290,  5294,   948,  5295,   810,  5297,  6042,  1871,  1872,  1873,
    1874,  1875,  1876,  5299,  5304,  5305,    18,  5306,   794,  5307,
    2037,  5313,  5319,  2853,   651,  5258,  1572,   652,  5322,  5323,
    5324,   949,  5656,  5339,  5345,  2966,  5656,  5340,   950,  5351,
    5348,  1572,  5356,  4261,   810,  5261,  1576,  5366,  5368,  5370,
    5389,   810,   810,   810,   653,    23,  5390,  5664,   794,  2134,
     623,  1576,   654,  5392,  5393,  5399,  5395,  3030,  5403,  1575,
    2135,  5406,  5634,  2353,  5400,   794,  5419,  2136,  5429,  5431,
     951,  5432,  5440,  5439,  1575,  5456,   794,   794,  5462,  5647,
    5464,  1573,  5463,  5466,   810,  5471,  5473,  5477,  4311,  5482,
    5657,  5484,  5485,   570,  5657,  5487,  1573,   571,  5488,  2137,
    6100,   515,    16,    17,  5489,  5492,  6102,  5497,  1161,  4576,
    6113,  5513,  3574,  1655,    31,  5518,  5038,  5521,  1315,  5539,
     952,   953,  5548,  4577,  5525,  5541,  5549,  5555,  5554,  5556,
    5559,  5569,  5558,  1661,   954,   762,   810,  5570,  5586,   572,
    5575,  5577,  5587,  5592,  5615,  5616,  5589,  5621,  5631, -2240,
    5632,  5641,  5656,  -172,  5635,  5672,  1659,  5675,   794,  5676,
    5677,  2138,  5683,  5692,  5702,  1574,  5701,  1401,   868,   573,
    5656,  5705,  5722,  4209,  5747,  5749,  5748, -3468,   794,  5750,
    1574,  1277,  -915,  5758,  5760,  4683,  5773,  5779,   876,  5761,
    5783,  5781,  2139,  5787,  5792,    43,  5785,  5786,   652,  5791,
    5793,  5794,  5771,  5805,  5799,  5801,  5811,  5802,  5817,  4578,
    5821,   875,   810,  5782,  5824,  5844,  1167,  5829,  5850,  3575,
    5657,  5832,  5849,  1168,  4579,   763,  5887,  5852,  5868,  5858,
    5771,  5895,  5869,   871,    75,  5888,  2354,  5870,  5657,  1169,
    -915,  5915,  1161,  5873,   759,  2038,  5665,  3091,   810,  1170,
    1171,  1172,  5879,  5900,  5926,   955,  5947,  5939,  5948,  1173,
    5942,  4580,  1658,  3491,  5410,  5949,  5950,  5411,  5959,  4199,
    5954,  5967,  4308,  4210,  6006,  4581,  5412,  1591,  3492,  3125,
    6000,  6023,  6024,  6025,  3127,  4145,  4146,  6036,  4148,  4150,
    5842,  1660,  6039,  5842,  6047,  6049,   794,   794,  6056,  5656,
    6057,  6058,  6063,  3141,  6070,  6069,  6071,  6076,  6078,  6080,
    3150,  3150,  6066,  3150,  3150,  6084,  6083,   874,  6098,  6110,
    1677,  3981,  3496,  4300,  5380,  5378,  5379,  5583,   810,   956,
    5580,   794,  1996,  5581,  1161,  1838,  5648,  4071,  5590,  1649,
    5584,   794,  4662,  2133,  5467, -1127,   545, -1127,  3186,  5718,
    5743,  5862,  -915,  6012,  1382,  5885,  4615,  3191,  2202,  4072,
    3193,  5291,  5596,  4801,  5943,  2251,  5941,  5657,  4335,  1161,
    4353,  4818,  1501,  5245,  2192,  3109,  2677,  3507,  4307,  4583,
    1869,  1870,  1871,  1872,  1873,  1874,  1875,  1876,  4377,  5908,
    5909,  5177,  1689,   760,  5656,  4827,  3676,  1489,  4946,  2039,
    1174,  3196,  3199,  5927,  5842,  3198,  3197,  2977,  2247,  5842,
    3128,  5579,  5578,  2040,  1175,  2041,  5842,  2134,  5442,  4244,
    4761,  2399,    16,    17,  1836,  5347,  4916,  4198,  2135,  -915,
    5418,  5228,  4921,  3376,  5899,  2136,  5560,  5975,  5423,  6065,
    6043,  5831,  6067,  3537,  5048,  4759,  2042,  5987,  5124,  4766,
    5438,  5726, -2054,  5321,  6031,  5878,  5890,  4387,  5790,  5897,
    5892,  2043,  5657,  4130,  3062,  4466,  1161,  2137,  3740,  4903,
     957,  5656,  5656,  1161,  5982,  6052,  4901,  5983,  4899,   766,
    4639,   767,  6018,  5991,  6019,  5935,  5624,  5932,  5721,  3076,
   -2054,  4592,  5842, -2054,  2044,  4962,  5992,  4763,  5122,  2218,
    5998,  2010, -2054,  2862,  4052,  4202,  4771,  4051,  5894, -2054,
    5638,   794,  2045, -2054,  5505,  1176,  3671,   794,  3386,  3028,
    4685,  3487,  4370, -2054,  3797,  5842, -2054,  5842,  5842,  2138,
   -2054,  5656, -2054,  3326,  4838,  3920,  1409, -2054,   795,  2177,
    2132,  2176,  4013,  1910, -2054,  4123,  3975,  4824,  4912,  5940,
   -2054,  3878,  1177,  2594,  4492, -2054,  3876,  2503,  2657,  2440,
    2139,  2124,  2909,  5479,  2912,  2125,  1178,  4205,  4206,  4207,
    4771,  2126,  2127,  5303,  2129,  4941, -2054,  5865,  5248,  5866,
    1898,  3589,  2449,  4121,  5842,  2923,  5659,  5842,  5019, -2054,
    5020,  4487,  4208,  2046, -2054,  2902,  4486,  5414,  5810,  5511,
    2047,  5243,  5405,  5425,  2184,  2171,  5023,  4122,  1427,  1161,
    2048,  3581,   777,  5660, -2054,  3763,  2391,  4209,  2690,  5238,
     810,   810,   794,  2049,  5842,   768,  3795,  3966,  4156,  4938,
     810,  5253,  5972,  1290,  3150,  3150,  3150,  3150, -2054,  1586,
    3122,  3464,  3411,  3412,  1282,  1912,  4211, -2054,  4212,  1592,
    3465,  2767,  1285,  2178,  2050,   792,  4007,  2051,  3501,  5512,
    5428,    16,    17,  4842,  2852, -1127,  6064,  4213,  4338, -2054,
    5308,  2997,  5486,  2052,  6077,  6112,   986,  3450,   623,  6109,
    1763, -1158,  4922,  1161,  3477,  1690,  4215,  4935,  3918, -2054,
     623,  2018,  3343,  4216,  3996, -2054, -2054,  2026,  1243,  3445,
    1244,  3181,  3991,  3990,  2702,  1200,  2388,  3661,  4217, -2054,
    3968, -2054,  2998,  4670, -2054,  1003,  1904,  5026,  4218,  4356,
     794,  5540,   706,   707,  4062,  2869,  4772,  5661,  1331,  2080,
     786,  5662,   770,  4222,   771,  4686,  2017,  3479,   772,     0,
    6046,   810,  3486,   794,  1008,     0,     0,  1010,     0,     0,
       0,     0,  2999,     0,     0,  5643,     0,     0,     0,     0,
       0,     0,  1014,  1015,     0,     0,     0,     0,     0,     0,
       0,   794,     0,     0,     0,     0,     0,     0,  3514,  1401,
       0,     0,   794,     0,     0,     0,     0,     0,     0,     0,
       0,  4226,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4227,     0,     0,     0,     0,  1022,  3542,  3543,  3544,
     794,     0,   623,     0,   623,     0,     0,     0,     0,   794,
    3556,   623,     0,   794,  2037,  1028,     0,     0,     0,   794,
       0,     0,  5644,  1033,  1034,     0,     0,     0,  4228,     0,
       0,     0,     0,  4687,   794,     0,     0,     0,  3577,     0,
       0,  4229,  2153,  3582,  2205,     0,  5645,     0, -2054,     0,
       0,     0,     0,     0,  2217,     0,     0,  4711,     0,     0,
    4714,     0,  2222,  4720,  4721,  4722,  4723,     0,  4725,  4726,
    4727,  4728,     0,  4730,  4731,  5663,  4733,     0,     0,     0,
    4737,     0,  4231,     0,  4740,  4741,  4742,  4743,  4232,  4745,
    4746,     0,  1842,  1843,     0,  4751,  4752,     0,     0,  4756,
    4757,     0,     0,     0,     0,   810,    16,    17,     0,     0,
       0,   794,     0,     0,  1052,  5646,     0,     0,     0,     0,
    5795,     0,     0,  1054,  1055,  1056,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2470,  2471,  2472,  2473,
       0,     0,     0,     0,     0,     0,     0,  4237,     0,     0,
       0,     0,     0,     0,  4238,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2331,     0,  2331,
    3725,     0,     0,     0,     0,     0,     0,     0,     0,  3732,
       0,     0,     0,     0,     0,  4239,     0,     0,     0,  2474,
    2475,  2476,     0,     0,     0,     0,     0,     0,     0,     0,
    4240,  4241,     0,     0,     0,     0,     0,     0,  1844,     0,
       0,     0,     0,  4242,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5647,     0,
       0,  3756,     0,     0,     0,     0,     0,     0,  5408,     0,
    3764,     0,  3766,  2477,  2478,     0,  5409,     0,   794,  2038,
       0,   794,     0,     0,   810,     0,   810,   810,     0,     0,
       0,   665,  3000,     0,     0,     0,  1845,     0,  1846,   810,
       0,     0,  3150,     0,     0,     0,  4979,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3001,  3002,     0,  3003,  3004,  3005,  3006,  3007,
       0,  3008,  3009,  3010,  3011,  3012,  3013,  3014,  3015,     0,
    3016,  3017,  3018,     0,     0,  2479,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1503,  1504,
       0,     0,     0,     0,  1505,  1506,   810,     0,   810,     0,
       0, -2054,     0,     0,  1507,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2400,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1508, -2054,     0, -2054,     0,     0, -2054, -2054,  2568,     0,
       0,     0,  1509,     0,     0,     0,     0,  2577,  1847,  2480,
       0,     0,     0,     0,     0,  5665,     0,     0,  2588,     0,
       0,     0,  1510,  2039,     0,     0,     0,     0,     0,  3019,
    3020,     0,     0,     0,     0,     0,     0,  2040,     0,  2041,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1511,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2042,     0,     0,  3903,     0,     0,     0,     0,  1512,  1513,
       0,  1514,     0,     0,     0,  2043,     0,     0,     0,  1515,
    1516,  1517,     4,     0,     0,     0,     0,     0,     0,     0,
       0,   946,  2481,     0,     0,  5648,  3931,  2693,     0,  1518,
       0,     0,     0,     0,     0,     0,     0,     0,  2044,     0,
       0,     0,     0,     8,     0,     0,     0,     0,     0,     0,
       0,     0,   794,     0,  3963,     0,  2045,     0,     0,  -334,
       0,  -334,     0,     0,  1519,   810,   810,  3150,     0,     0,
     947,     0,  2746,     0,     0,    14,  2750,     0,  2752,     0,
     948,   810,     0,     0,     0,     0,     0,     0,     0,  1520,
       0,     0,  2482,  5410,    18,  1521,  5411,     0,     0,     0,
       0,     0,     0,     0,     0,  5550,     0,     0,  5063,   949,
       0,     0,     0,  1233,     0,     0,   950,     0,     0,     0,
    1522,  1523,  1524,  2784,     0,     0,     0,     0,     0,     0,
    5090,     0,     0,    23,  2794,  2600,     0,  2046,     0,     0,
       0,     0,     0,     0,  2047,  1525,  1526,     0,     0,     0,
       0,     0,     0,     0,  2048,  1245,     0,  2483,   951,  2484,
       0,     0,     0,     0,  2485,     0,   672,  2049,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1217,     0,     0,     0,     0,     0,     0,     0,  1246,
    1247,     0,     0,  1527,     0,  1528,  1529,     0,  2050,  1248,
       0,  2051,    31,     0,     0,     0,     0,     0,   952,   953,
       0,  1530,     0,     0,    10,    11,     0,  2052,   623,     0,
       0,     0,   954,   794,     0,     0,     0,     0,     0,  2486,
       0,     0,     0,   666,   794,     0,     0,  2876,   794,     0,
       0,     0,     0,     0,   810,     0,     0,     0,  1531,     0,
    1532,     0,  2659,     0,  1401,     4,     0,     0,    16,    17,
       0,     0,     0,  1249,   946,  1401,  1401,   810,   810,     0,
       0,     0,  2487,  1533,     0,     0,     0,  1250,     0,     0,
       0,  -334,     0,    43,     0,     0,     8,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1534,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1535,  1536,     0,
       0,     0,     0,   947,     0,     0,     0,   810,    14,     0,
       0,   903,    75,   948,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4265,     0,     0,     0,    18,     0,  1537,
    1251,     0,     0,   955,     0,     0,     0,  2985,  1538,     0,
       0,     0,   949,  1252,     0,   904,     0,     0,     0,   950,
       0,     0,  2488,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2489,     0,     0,    23,   906,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   907,     0,     0,
       0,     0,     0,     0,  1539,  1540,  1541,     0,     0,     0,
    -334,   951,  1542,  1543,     0,     0,     0,     0,     0,     0,
    4336,     0,   908,  1253,     0,     0,     0,   956,     0,  1544,
    1545,     0,     0,     0,     0,     0,     0,     0,   909,     0,
     794,     0,     0,   910,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1546,  1547,    31,     0,     0,     0,  3141,
       0,   952,   953,     0,  2182,   810,   810,   810,   810,   911,
       0,   794,  1548,     0,     0,   954,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1254,     0,     0,     0,     0,     0,     0,     0,     0,  1255,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3149,
    3149,  1256,  3149,  3149,     0,     0,     0,     0,     0,     0,
       0,     0,  1257,     0,     0,     0,     0,     0,     0,     0,
    3162,  1503,  4312,     0,     0,     0,    43,  1505,  1506,   912,
    1649,     0,     0,     0,     0,     0,  1258,  1507,  -567,     0,
       0,     0,     0,     0,     0,     0,     0,   913,     0,     0,
       0,     0,     0,     0,  1550,   914,     0,  1551,   957,     0,
    1552,     0,     0,  1508,     0,    75,     0,  4461, -2430,  1259,
       0,     0,  1260,     0,  1261,  1509,     0,     0,     0,     0,
       0,     0,     0,  1553,     0,     0,   955,   915,     0,     0,
       0,     0,     0,     0,     0,  1510,     0,   916,   917,     0,
    1262,  1263,  1555,     0,     0,     0,  4496,     0,  1264,  1265,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     810,     0,     0,     0,     0,  1266,     0,     0,  1511,     0,
    2600,     0,     0,     0,     0,     0,   810,   810,   810,   810,
       0,  4524,     0,  -567,     0,     0,     0,  1267,     0,     0,
       0,  1512,  1513,     0,  1514,     0,     0,  4534,  4535,     0,
     956,  2192,  1515,  1516,  1517,     0,     0,     0,  1268,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    -815,     0,  1518,     0,     0,     0,  4555,     0,     0,     0,
       0,     0,  4565,     0,     0,     0,     0,     0,     0,     0,
    3305,     0,     0,     0,     0,     0,  3311,     0,     0,    16,
      17,     0,     0,     0,  4198,     0,     0,  1519,     0,     0,
       0,     0,     0,     0,  1269,     0,   810,     0,     0,     0,
       0,     0,   794,   794,     0,     0,     0,     0,  1270,     0,
    2380,     0,  1520,     0,     0,  2381,     0,   623,  1521,  1271,
       0,     0,  1272,  1273,     0,     0,  2382,     0,     0,     0,
       0,     0,     0,   794,   794,     0,     0,  1274,     0,     0,
    4644,     0,     0,  1522,  1523,  1524,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4202,     0,     0,     0,     0,     0,  4313,  1526,
       0,   957,     0,  1275,     0,     0,     0,     0,     0,     0,
    1276,  1898,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3149,  3149,  3149,  3149,     0,     0, -3217,
       0,  1277,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1527,     0,  1528,  1529,
       0,     0,     0,     0,  4205,  4206,  4207,     0,     0,     0,
       0,     4,     0,     0,  1530,     0,     0,     0,     0,     0,
     946,     0,     0,     0,     0,     0,     0,     0,     0,  4208,
       0, -3217,     0,     0,     0,     0,     0,  1278,     0,     0,
       0,     0,     8,     0,     0,     0,     0,     0,     0,     0,
       0,  1531,     0,  1532,  4209,  4755,     0,     0,     0,  3467,
       0,     0,     0,     0,     0,  2383,     0,     0,     0,   947,
    4769,     0,     0,     0,    14,     0,  1533,     0,     0,   948,
       0,     0,  3488,  4211,     0,  4212,  2384,     0,     0,     0,
       0,  2385,     0,    18,     0,     0,     0,     0,     0,  1534,
       0,     0,     0,     0,  4213,     0,     0,     0,   949,     0,
    1535,  1536,     0,     0,     0,   950,     0,     0,     0,     0,
       0,  4798,  2386,  4215,     0,     0,  3725,     0,     0,     0,
    4216,     0,    23,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1537,     0,     0,  4217,     0,     0,     0,  3545,
       0,  1538,     0,  3756,  2387,  4218,  4819,   951,  3554,  4821,
       0,     0,  1401,     0,     0,     0,     0,     0,  1401,     4,
    4222,     0,     0,     0,     0,   810,     0,     0,   946,     0,
       0,     4,     0,  1401,     0,     0,     0,     0,     0,     0,
     946,     0,     0,     0,     0,     0,     0,  1539,  1540,  1541,
       8,    31,     0,     0,     0,  1542,  1543,   952,   953,     0,
       0,     0,     8,     0,     0,     0,     0,     0,     0,     0,
       0,   954,  1544,  1545,     0,     0,     0,   947,  4226,     0,
       0,     0,    14,     0,     0,     0,     0,   948,  4227,   947,
       0,     0,     0,     0,    14,     0,  1546,  1547,     0,   948,
       0,    18,     0,     0,     0,  5822,  5823,     0,  5825,  5826,
    5827,  5828,     0,    18,     0,  4314,   949,     0,     0,     0,
       0,     0,     0,   950,     0,  4228,     0,  4896,   949,     0,
       0,     0,    43,     0,     0,   950,     0,     0,  4229,     0,
      23,     0,     0,     0,  4905,     0,     0,     0,     0,     0,
       0,     0,    23,     0,     0,     0,  4524,     0,     0,     0,
       0,     0,     0,     0,     0,   951,     0,     0,     0,  4496,
       0,    75,     0,     0,  3963,  4924,     0,   951,     0,  4231,
     810,   810,     0,     0,     0,  4232,  4931,     0,     0,     0,
       0,     0,   955,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1233,  1912,     0,     0,     0,  1550,     0,    31,
    1551,     0,  2600,  1552,     0,   952,   953,     0,     0,  5907,
       0,    31,  5910,     0,     0,  4951,     0,   952,   953,   954,
    5918,     0,     0,     0,     0,  5928,  4316,     0,     0,     0,
       0,   954,     0,     0,  4237,     0,     0,  1401,     0,  1674,
    3773,  4238,     0,     0,     0,  1555,     0,     0,     0,     0,
       0,     0,     0,     0,   794,     0,   956,  4769,     0,   794,
       4,  3149,     0,     0,     0,     0,     0,     0,  2192,   946,
       0,     0,  4239,     0,     0,     0,     0,     0,     0,     0,
      43,     0,     0,     0,     0,     0,     0,  4240,  4241,     0,
       0,     8,    43,     0,     0,     0,     0,  3577,     0,     0,
    4242,     0,     0,     0,     0,     0,  2659,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,   947,    75,
       0,  4198,     0,    14,   810,     0,     0,     0,   948,     0,
       0,    75,     0,     0,     0,     0,     0,     0,  4769,     0,
     955,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   955,     0,     0,  4951,     0,   949,     0,     0,
       0,     0,     0,     0,   950,     0,  5065,  -815,  2600,     0,
       0,     0,     0,     0,   794,     0,     0,     0,     0,     0,
    5083,    23,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   810,  4951,     0,     0,     0,   957,     0,  4202,
       0,     0,     0,  5120,     0,  4192,   951,     0,     0,  3779,
       0,     0,     0,  4951,   956,     0,     0,     0,     0,  4769,
    5125,     0,     0,     0,     0,  5136,   956,     0,     0,  4194,
       0,   623,     0,     0,     0,     0,  5146,  4196,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,   952,   953,     0,  2192,
       0,  4205,  4206,  4207,     0,  5160,     0,     0,     0,     0,
     954,  5121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4208,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3956,     0,     0,     0,     0,     0,    16,    17,     0,
       0,  4209,  4198,     0,     0,     0,  3149,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    43,     0,     0,     0,     0,     0,     0,     0,     0,
    4211,     0,  4212,  4199,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   957,     0,     0,     0,     0,
       0,  4213,     0,     0,     0,     0,     0,   957,     0,  4496,
      75,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4215,  2600,  4201,     0,     0,     0,     0,  4216,     0,     0,
    4202,   955,     0,     0,     0,     0,     0,     0,     0,     0,
    3756,     0,  4217,     0,     0,     0,     0,     0,  4565,     0,
       0,     0,  4218,     0,     0,     0,  4204,     0,   810,     0,
       0,     0,  4769,     0,     0,     0,     0,  4222,     0,     0,
     794,     0,     0,     0,     0,     0,     0,     0,     0,  3725,
       0,     0,     0,     0,     0,     0,     0,     0,  4019,  3725,
       0,     0,  4205,  4206,  4207,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   956,     0,     0,     0,     0,
       0,     0,  4090,     0,     0,     0,     0,  4208,     0,     0,
       0,     0,     0,  1401,     0,  4226,     0,  1401,     0,     0,
       0,     0,     0,     0,     0,  4227,     0,     0,     0,  5328,
       0,     0,  4209,     0,  4769,  4951,  4769,     0,   810,  4769,
       0,  4951,     0,     0,     0,     0,  4769,  4769,     0,     0,
       0,  4951,     0,  4210,     0,     0,     0,     0,     0,     0,
       0,  4211,  4228,  4212,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4229,     0,  1163,     0,     0,
       0,     0,  4213,     0,     0,     0,  4769,     0,     0,     0,
    4951,     0,  4951,     0,     0,     0,     0,     0,     0,     0,
       0,  4215,     0,     0,     0,  1163,     0,     0,  4216,     0,
       0,  5357,     0,     0,   794,     0,  4231,  5364,     0,     0,
       0,     0,  4232,  4217,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,  4218,  5373,     0,   957,  4219,     0,     0,
       0,     0,     0,     0,  4221,     0,     0,     0,  4222,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4224,     0,     0,     0,
       0,  4237,     0,     0,     0,     0,     0,     0,  4238,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4226,     0,     0,  1401,
       0,     0,     0,     0,     0,     0,  4227,     0,  5422,  4239,
       0,     0,  4896,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4951,     0,  4240,  4241,     0,     0,     0,     0,
    4371,  5435,  5435,  5437,     0,  1163,  4769,  4242,     0,     0,
       0,     0,     0,  4228,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4229,     0,  4230, -1127,
       0, -1127,     0,   623,     0,     0,     0,     0,   623,     0,
       0,     0,  3577,     0,  3577,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2192,     0,
       0,     0,     0,     0,  5491,     0,     0,  4231,     0,     0,
       0,  5496,     0,  4232,  4769,  4769,     0,     0,  4769,     0,
       0,     0,  4769,     0,  5508,     0,     0,     0,     0,     0,
    2600,     0,     0,   794,     0,     0,     0,     0,     0,  4951,
       0,     0,  1163,     0,     0,     0,    16,    17,     0,     0,
       0,  4198,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5537,     0,     0,
       0,     0,  4237,     0,     0,   794,     0,     0,     0,  4238,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     4,     0,     0,     0,     0,     0,     0,     0,
    4239,   946,     0,     0,     0,     0,     0,  5435,     0,     0,
       0,     0,     0,     0,     0,  4240,  4241,  1163,     0,  4202,
    1737,     0,     0,     8,     0,     0,     0,  1163,  4242,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3725,     0,
       0,     0,     0,     0,     0,     0,     0,     4,     0,     0,
     947,     0,     0,     0,     0,    14,   946,     0,     0,     0,
     948,     0,     0,     0,  4769,  1737,     0,     0,     0,  4769,
       0,     0,     0,     0,    18,     0,     0,     0,  -549,     0,
       0,  4205,  4206,  4207,     0,     0,     0,     0,   794,   949,
       0,     0,     0,  5640,     0,     0,   950,     0,     0,     0,
    5671,  4600,  4601,     0,     0,   947,  4208,     0,  5678,  5682,
    1685,     0,     0,    23,     0,   948,  1163,  1163,  1163,  1163,
       0,     0,  1737,     0,     0,     0,     0,     0,     0,    18,
    1163,  4209,  1401,  1401,  5700,     0,     0,     0,   951,     0,
       0,     0,     0,     0,   949,     0,     0,     0,  5435,     0,
       0,   950,  5724,     0,     0,     0,     0,     0,     0,     0,
    4211,     0,  4212,  5734,     0,  5735,   623,     0,  1686,     0,
       0,     0,   623,     0,     0,     0,     0,     0,     0, -1127,
       0,  4213,    31,     0,     0,     0,     0,     0,   952,   953,
       0,     0,     0,   951,     0,     0,  5754,     0,     0,     0,
    4215,     0,   954,     0,     0,     0,     0,  4216,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4217,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4218,     0,   810,     0,     0,  1687,     0,     0,
       0,     0,     0,   952,   953,     0,     0,  4222,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   954,     0,     0,
    2600,     0,     0,    43,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    75,     0,     0,  4226,     0,  1163,     0,     0,
       0,  1737,     0,     0,  5859,  4227,     0,   794,  1688,     0,
     623,   623,     0,   955,  4565,  4565,     0,     0,     0,     0,
       0,     0,     0,  5435,     0,  5435,  5435,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5880,     0,  4228,     0,     0,     0,     0,  -549,     0,     0,
       0,     0,     0,  5886,     0,  4229,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   955,  5682,
    5181,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5700,     0,     0,     0,     0,     0,     0,   956,     0,     0,
       0,     0,     0,   810,     0,     0,  4231,     0,  1737,     0,
       0,     0,  4232,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5936,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,  5435,  5435,     0,     0,  5435,     0,
       0,     0,   956,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2600,  4237,     0,     0,     0,     0,     0,     0,  4238,  1163,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   810,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5999,  4239,
       0,     0,     0,     0,     0,   623,     0,     0,     0,     0,
       0,  6009,     0,     0,  4240,  4241,     0,     0,     0,  5435,
       0,     0,     0,     0,     0,     0,     0,  4242,   957,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   810,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  6044,  6044,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   957,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1127,     0,
   -1127,     0,     0,  4964,     0,     0,     0,     0,  4976,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2192,     0,  2600,
       0,     0,     0,   810,     0,     0,     0,     0,     0,   810,
       0,     0,     0,  2600,     0,     0,     0,  1163,     0,  2600,
       0,     0,     0,     0,     0,  2600,     0,     0,     0,     0,
    1163,  1163,     0,     0,     0,     0,  1163,     0,     0,     0,
    1163,  1163,  1163,     0,     0,    16,    17,     0,     0,     0,
    4198,  1163,  1163,  1737,     0,     0,     0,  1163,     0,  1163,
    1163,  1163,  1163,  1163,     0,  1163,     0,     0,  1737,  1737,
       0,  4602,     0,  4603,     0,  4604,  1163,     0,  1163,     0,
       0,  1163,  1163,     0,  1163,  1163,  1163,     0,  1163,  1163,
    1163,     0,     0,  5074,     0,  1163,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,  1163,  1163,     0,  1163,
    1163,  1163,     0,     0,  1163,  1163,  1163,  1163,  1163,  1163,
    1163,     0,  1163,  1163,  1163,  1163,  1163,  1163,  4202,  1163,
    1163,     0,  1163,  1163,  1163,  1163,  1163,  1163,  1163,     0,
       0,  1163,  1163,  1163,  1163,     0,  1163,  1163,  1163,     0,
    1163,     0,  1163,     0,  1163,     0,     0,     0,  1163,  1163,
    1163,     0,     0,  1163,  1163,  1163,  1163,  1163,     0,  1163,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,  1163,  1163,  1163,  1163,     0,     0,
    4205,  4206,  4207,     0,  1163,  1163,     0,  1163,  1163,     0,
       0,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,  1163,
    1163,  1163,  1163,  1163,     0,  4208,  1163,     0,     0,     0,
       0,  1737,     0,     0,     0,     0,     0,     0,  1737,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4209,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,  1163,     0,     0,  4211,
       0,  4212,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1127,     0,
    4213,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4215,
       0,     0,     0,     0,     0,     0,  4216,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4217,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4218,     0,  1163,     0,     0,     0,     0,     0,  5262,
       0,     0,     0,     0,     0,     0,  4222,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1737,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,  4226,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4227,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4228,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4229,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,  1737,     0,  5358,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4231,     0,     0,     0,     0,
       0,  4232,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4237,     0,     0,     0,     0,     0,     0,  4238,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4239,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4240,  4241,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4242,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5542,     0,     0,     0,  1163,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,  1163,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1129,     0,     0,
       0,     0,  1737,  1737,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1295,     0,  1163,  1163,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1737,     0,     0,     0,     0,     0,  5636,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1737,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,  1737,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
    1163,  1163,     0,  1163,  1163,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1488,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1639,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5861,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1700,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1737,     0,  1737,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1727,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1742,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,  1737,     0,     0,  1737,  1737,  1737,
       0,  1163,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1837,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2035,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,  1163,     0,  1163,     0,  1163,  1163,  1163,
    1163,  1163,  1163,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,  1163,     0,     0,  1163,  1163,  1163,
    1163,     0,     0,  1163,  1163,     0,     0,  1163,     0,  1163,
       0,  1163,     0,  1163,     0,     0,     0,  1163,     0,  2189,
       0,     0,     0,     0,     0,  1163,     0,  1163,     0,  1163,
    1163,  1163,  1163,  1163,     0,     0,  1163,  1163,  1163,     0,
    1163,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,  2229,
       0,  1163,  2230,     0,  1163,     0,  1163,  1163,  1163,     0,
       0,  1163,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,  1163,     0,  1163,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,  1737,  1163,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1737,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2394,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2424,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2439,     0,     0,     0,
    2444,     0,  2446,     0,     0,     0,     0,     0,     0,     0,
       0,  2462,  2463,     0,     0,     0,     0,  2492,     0,  2495,
    2496,  2497,  2498,  2499,     0,  2501,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,  2509,     0,  2512,     0,
       0,  2513,  2514,     0,  2516,  2517,     0,     0,  2520,  2521,
    2522,     0,     0,  1163,     0,  2527,     0,     0,  2533,     0,
    1737,     0,     0,     0,     0,     0,  2537,  2538,     0,  2541,
       0,  2543,     0,     0,  2545,  2546,  2547,  2550,  2551,  2552,
    2553,     0,  2554,  2555,  2556,  2557,  2558,     0,     0,  2565,
    2566,     0,     0,  2570,  2571,  2572,     0,     0,     0,     0,
       0,  2578,  2579,  2580,     0,     0,  2583,  2584,  2585,     0,
    2587,     0,  2589,     0,  2590,     0,     0,     0,  2593,  2533,
    2595,     0,     0,  2601,  2602,  2603,  2604,  2605,     0,  2606,
       0,     0,     0,     0,     0,     0,  2610,     0,     0,     0,
       0,     0,  1163,     0,  2620,  2621,  2622,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2715,     0,     0,     0,     0,  2189,     0,     0,     0,
       0,     0,     0,     0,     0,  1737,  2189,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2788,     0,     0,     0,     0,     0,     0,
    1163,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2819,     0,  2824,  1163,     0,  1163,     0,  1163,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,  2846,  1737,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,  1163,     0,     0,     0,     0,     0,
    1163,     0,  1163,     0,  1163,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1737,  1163,  1163,     0,     0,
       0,     0,  2919,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1737,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3104,  3105,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1295,     0,
    3201,     0,     0,     0,     0,     0,     0,     0,  3208,  3209,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,  3261,  3263,  3265,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,  1163,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,  1163,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,  1163,     0,  1163,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,  1163,  3351,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3359,     0,  3360,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3382,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3388,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3408,     0,     0,  2189,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,  3443,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3453,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3583,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3583,     0,  2189,     0,     0,     0,     0,     0,     0,
    1163,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3673,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,     0,     0,     0,  1737,
    1163,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3817,     0,     0,  3818,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3845,     0,     0,     0,  3847,     0,  3848,  3849,  3850,
    3851,  3852,  3853,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3857,     0,  3858,     0,     0,  3859,  3860,  3861,
    3862,     0,     0,  3863,  3864,     0,     0,  3866,     0,  3868,
       0,  3870,     0,  3872,     0,     0,     0,  3874,     0,     0,
       0,     0,     0,     0,     0,  2547,     0,  3877,     0,  2547,
       0,  3880,  3881,  3882,     0,     0,  3883,  3884,  3886,     0,
    3887,     0,     0,  3888,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3889,     0,     0,     0,
       0,     0,     0,     0,  3896,     0,  3897,  3898,  3899,     0,
       0,  3900,     0,     0,     0,     0,     0,  3904,     0,     0,
       0,     0,  3915,     0,  1163,     0,     0,     0,     0,     0,
       0,  3919,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3926,     0,     0,     0,     0,     0,     0,  1737,
       0,     0,  1163,     0,  3938,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2189,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2189,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,  2189,     0,  2824,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4117,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,     0,
       0,     0,  1737,  1737,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1737,
       0,  4376,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4382,     0,     0,  4383,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1737,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
    4401,  4402,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4426,     0,  4427,     0,  4428,     0,
    4429,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4454,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4477,  4478,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3583,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4498,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2189,  2189,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2189,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4641,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3583,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3583,     0,  4653,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4826,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4855,  4856,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4863,     0,  4864,
       0,     0,  4865,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4885,     0,  4886,     0,  4887,
       0,  4888,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4894,  4895,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2824,     0,     0,     0,
    2824,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5138,  5139,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3583,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3583,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2824,     0,     0,     0,     0,     0,
    2189,  2189,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2824,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5296,     0,  5298,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5398,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3583,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5493,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3583,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2185,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2186,   986,   987,   988,   989,     0,     0,  5798,
       0,     0,     0,     0,   990,   991,     0,   992,     0,     0,
       0,     0,     0,     0,   993,   994,     0,     0,   995,   996,
     997,   998,     0,   999,  1000,     0,  1001,  1002,     0,     0,
       0,     0,  1003,     0,     0,     0,  2187,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1006,
    1007,  1008,     0,  1009,  1010,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1011,  1012,  1013,     0,  1014,
    1015,     0,     0,     0,  1016,  1017,  1018,     0,     0,     0,
       0,  1837,     0,     0,  1019,     0,  1020,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1021,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,     0,     0,  5893,     0,  1023,  1024,
       0,  1025,     0,     0,     0,     0,     0,  1026,     0,  1027,
       0,     0,  1028,     0,     0,  1029,  1030,  1031,     0,  1032,
    1033,  1034,     0,  1035,  2188,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,  1038,  1039,     0,  1040,     0,     0,     0,
       0,     0,     0,  1041,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1042,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,     0,     0,  1045,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2824,     0,     0,  1046,     0,     0,     0,
       0,     0,  1047,  1048,     0,  1049,  1050,  1051,     0,     0,
       0,  1052,     0,     0,     0,     0,     0,     0,     0,  1053,
    1054,  1055,  1056,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1057,  1058,  1059,     0,     0,     0,     0,     0,
    1060,     0,  1061,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,  1062,    58,    59,    60,
      61,    62,    63,  1063,    65,    66,    67,    68,    69,    70,
      71,  1064,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,  1065,    88,   590,
      90,    91,    92,    93,    94,   591,  1066,    96,  1067,  1068,
      99,  1069,  1070,  1071,  1072,  1073,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
    1074,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,  1075,  1076,  1077,   594,  1078,  1079,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,  1080,   176,   177,   600,   179,   180,
    1081,   182,  1082,   601,   185,   186,   602,   188,   189,   603,
    2824,   191,   192,   193,  1083,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,  1084,  1085,   217,   218,
     219,  1086,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,  1087,
     259,  1088,   261,   262,   263,   264,  1089,  1090,  1091,  1092,
     269,   270,   271,   272,   273,   274,   275,   276,   277,  1093,
    1094,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,  1095,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
    1096,   308,   309,   310,   311,   312,  1097,  1098,   315,   608,
     316,   609,   318,   319,  1099,   321,   322,   323,   324,   325,
     326,  1100,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,  1101,   358,   612,   360,   361,   362,  1102,  1103,   365,
     366,   613,   368,   369,  1104,   371,   372,   373,   374,   375,
     376,  1105,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,  1106,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
    1107,  1108,  1109,  1110,   429,   430,   431,  1111,  1112,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,  1113,   448,  1114,   450,   451,   452,   453,   454,
     455,   456,   457,   458,  1115,  1116,   619,  1117,   463,   464,
     465,     0,   466,   620,   468,  1118,     0,     0,     0,     0,
       0,     0,     0,     0,  1119,  1120,     0,     0,     0,     0,
    1121,     0,     0,     0,  2624,  1122,     0,     0,     0,  1123,
    1124,     0,     0,  1125,  1126,   985,   986,   987,   988,   989,
       0,     0,     0,     0,     0,     0,     0,   990,   991,     0,
     992,     0,     0,     0,     0,     0,     0,   993,   994,     0,
       0,   995,   996,   997,   998,     0,   999,  1000,     0,  1001,
    1002,     0,     0,     0,     0,  1003,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,  1007,  1008,     0,  1009,  1010,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1011,  1012,
    1013,     0,  1014,  1015,     0,     0,     0,  1016,  1017,  1018,
       0,     0,     0,     0,     0,     0,     0,  1019,     0,  1020,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1022,     0,     0,     0,
       0,  1023,  1024,     0,  1025,     0,     0,     0,     0,     0,
    1026,     0,  1027,     0,     0,  1028,     0,     0,  1029,     0,
    1031,     0,  1032,  1033,  1034,     0,  1035,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1036,     0,     0,     0,  1037,  1038,  1039,     0,  1040,
       0,     0,     0,     0,     0,     0,  1041,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1042,  1043,     0,
       0,     0,     0,     0,     0,     0,  1044,     0,     0,  1045,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1046,
       0,     0,     0,     0,     0,  1047,  1048,     0,  1049,  1050,
    1051,     0,     0,     0,  1052,     0,     0,     0,     0,     0,
       0,     0,  1053,  1054,  1055,  1056,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1057,  1058,  1059,     0,     0,
       0,     0,     0,  1060,     0,  1061,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    46,    47,    48,
     584,    49,    50,    51,    52,    53,    54,    55,    56,  1062,
      58,    59,    60,    61,    62,  2625,  1063,    65,    66,    67,
      68,    69,    70,    71,  1064,   585,     0,   586,   587,    77,
      78,    79,    80,    81,    82,   588,    84,    85,    86,    87,
    1065,    88,   590,    90,    91,    92,    93,    94,   591,  1066,
      96,  1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,     0,
     105,   106,   107,   592,   109,   110,   111,   112,   113,   114,
     115,   116,   117,  1074,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,  1075,  1076,  1077,   594,  1078,
    1079,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     595,   144,   145,   146,   147,   596,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   597,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   598,   599,   174,     0,  1080,   176,   177,
     600,   179,   180,  1081,   182,  1082,   601,   185,   186,   602,
     188,   189,   603,     0,   191,   192,   193,  1083,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   604,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   605,   214,  1084,
    1085,   217,   218,   219,  1086,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,  1087,   259,  1088,   261,   262,   263,   264,  1089,
    1090,  1091,  1092,   269,   270,   271,   272,   273,   274,   275,
     276,   277,  1093,  1094,   280,   281,   282,   283,   284,   606,
     285,   286,   287,   288,   289,   290,   291,   292,   293,  1095,
     295,   296,   297,   607,   298,   299,   300,   301,   302,   303,
     304,   305,   306,  1096,   308,   309,   310,   311,   312,  1097,
    1098,   315,   608,   316,   609,   318,   319,  1099,   321,   322,
     323,   324,   325,   326,  1100,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   610,   347,   348,   611,   350,   351,   352,
     353,   354,   355,   356,  1101,   358,   612,   360,   361,   362,
    1102,  1103,   365,   366,   613,   368,   369,  1104,   371,   372,
     373,   374,   375,   376,  1105,   378,   614,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   615,   399,   400,   616,
     402,   403,   404,   405,  1106,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,  1107,  1108,  1109,  1110,   429,   430,   431,
    1111,  1112,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   618,   444,   445,   446,  1113,   448,  1114,   450,   451,
     452,   453,   454,   455,   456,   457,   458,  1115,  1116,   619,
    1117,   463,   464,   465,     0,   466,   620,   468,  1118,     0,
       0,     0,     0,     0,     0,     0,     0,  1119,  1120,     1,
       2,     0,     0,  1121,     0,     0,     0,     0,  1122,     0,
       0,     0,  1123,  1124,     0,     0,  1125,  1126,     0,     3,
       0,     4,     0,     5,     0,     6,     0,     0,     0,     0,
       0,     0,     0,     7,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     8,     0,     0,     9,     0,    10,    11,     0,
       0,     0,     0,     0,     0,    12,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    14,     0,     0,     0,     0,     0,
      15,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,    18,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    20,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,    22,     0,     0,
       0,     0,    23,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    24,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    25,    26,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    27,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
      30,    31,    32,     0,    33,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,    35,     0,     0,     0,    36,
       0,     0,     0,    37,    38,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    39,     0,    40,     0,    41,     0,     0,
       0,     0,    42,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    43,    44,     0,     0,     0,     0,     0,     0,
      45,    46,    47,    48,     0,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,     0,    88,    89,    90,    91,    92,
      93,    94,     0,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,     0,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,     0,   174,
       0,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,     0,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,     0,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,     0,   466,
     467,   468,   469,     1,     2,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   470,     3,     0,     4,     0,     5,     0,     6,
       0,     0,     0,     0,     0,     0,     0,     7,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     8,     0,     0,     9,
       0,    10,    11,     0,     0,     0,     0,     0,     0,    12,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    14,     0,
       0,     0,     0,     0,    15,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,    18,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    21,
       0,    22,     0,     0,     0,     0,    23,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    24,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      25,    26,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    27,    28,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,    30,    31,    32,     0,    33,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,    35,
       0,     0,     0,    36,     0,     0,     0,    37,    38,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    39,     0,    40,
       0,    41,     0,     0,     0,     0,    42,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    43,    44,     0,     0,
       0,     0,     0,     0,    45,    46,    47,    48,     0,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,     0,    88,
      89,    90,    91,    92,    93,    94,     0,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,     0,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,     0,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,     0,   174,     0,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,     0,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,     0,   466,   467,   468,   469,     1,     2,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   470,     3,     0,     0,
       0,     5,     0,     6,     0,     0,     0,     0,     0,     0,
       0,     7,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     9,     0,    10,    11,     0,     0,     0,
       0,     0,     0,    12,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    15,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      24,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    25,    26,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    27,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,    30,     0,
      32,     0,    33,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,    35,     0,     0,     0,    36,     0,     0,
       0,    37,    38,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    39,     0,    40,     0,    41,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,     0,     0,     0,     0,     0,     0,    45,    46,
      47,    48,     0,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,     0,     0,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,     0,    88,    89,    90,    91,    92,    93,    94,
       0,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,     0,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,     0,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,     0,   174,     0,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,     0,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,     0,   466,   467,   468,
     469,   985,   986,   987,   988,   989,     0,     0,     0,     0,
       0,     0,     0,   990,   991,     0,   992,     0,     0,     0,
     470,     0,     0,   993,   994,     0,     0,   995,   996,   997,
     998,     0,   999,  1000,     0,  1001,  1002,     0,     0,     0,
       0,  1003,     0,     0,     0,  1004,     0,     0,  1005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1006,  1007,
    1008,     0,  1009,  1010,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1011,  1012,  1013,     0,  1014,  1015,
       0,     0,     0,  1016,  1017,  1018,     0,     0,     0,     0,
       0,     0,     0,  1019,     0,  1020,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1022,     0,     0,     0,     0,  1023,  1024,     0,
    1025,     0,     0,     0,     0,     0,  1026,     0,  1027,     0,
       0,  1028,     0,     0,  1029,  1030,  1031,     0,  1032,  1033,
    1034,     0,  1035,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1036,     0,     0,
       0,  1037,  1038,  1039,     0,  1040,     0,     0,     0,     0,
       0,     0,  1041,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1042,  1043,     0,     0,     0,     0,     0,
       0,     0,  1044,     0,     0,  1045,     0,    35,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1046,     0,     0,     0,     0,
       0,  1047,  1048,     0,  1049,  1050,  1051,     0,     0,     0,
    1052,     0,     0,     0,     0,     0,     0,     0,  1053,  1054,
    1055,  1056,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1057,  1058,  1059,    42,     0,     0,     0,     0,  1060,
       0,  1061,     0,     0,     0,    44,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,  1062,    58,    59,    60,    61,
      62,    63,  1063,    65,    66,    67,    68,    69,    70,    71,
    1064,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,  1065,    88,   590,    90,
      91,    92,    93,    94,   591,  1066,    96,  1067,  1068,    99,
    1069,  1070,  1071,  1072,  1073,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,  1074,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,  1075,  1076,  1077,   594,  1078,  1079,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,  1080,   176,   177,   600,   179,   180,  1081,
     182,  1082,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,  1083,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,  1084,  1085,   217,   218,   219,
    1086,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,  1087,   259,
    1088,   261,   262,   263,   264,  1089,  1090,  1091,  1092,   269,
     270,   271,   272,   273,   274,   275,   276,   277,  1093,  1094,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,  1095,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,  1096,
     308,   309,   310,   311,   312,  1097,  1098,   315,   608,   316,
     609,   318,   319,  1099,   321,   322,   323,   324,   325,   326,
    1100,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
    1101,   358,   612,   360,   361,   362,  1102,  1103,   365,   366,
     613,   368,   369,  1104,   371,   372,   373,   374,   375,   376,
    1105,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
    1106,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,  1107,
    1108,  1109,  1110,   429,   430,   431,  1111,  1112,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,  1113,   448,  1114,   450,   451,   452,   453,   454,   455,
     456,   457,   458,  1115,  1116,   619,  1117,   463,   464,   465,
       0,   466,   620,   468,  1118,     0,     0,     0,   985,   986,
     987,   988,   989,  1119,  1120,     0,  2530,     0,     0,  1121,
     990,   991,     0,   992,  1122,     0,     0,     0,  1123,  1124,
     993,   994,  1125,  1126,   995,   996,   997,   998,     0,   999,
    1000,     0,  1001,  1002,     0,     0,     0,     0,  1003,     0,
       0,     0,  1004,     0,     0,  1005,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1006,  1007,  1008,     0,  1009,
    1010,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1011,  1012,  1013,     0,  1014,  1015,     0,     0,     0,
    1016,  1017,  1018,     0,     0,     0,     0,     0,     0,     0,
    1019,     0,  1020,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2531,     0,  1021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1022,
       0,     0,     0,     0,  1023,  1024,     0,  1025,     0,     0,
       0,     0,     0,  1026,     0,  1027,     0,     0,  1028,     0,
       0,  1029,  1030,  1031,     0,  1032,  1033,  1034,     0,  1035,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,  1038,
    1039,     0,  1040,     0,     0,     0,     0,     0,     0,  1041,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1042,  1043,     0,     0,     0,     0,     0,     0,     0,  1044,
       0,     0,  1045,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1046,     0,     0,     0,     0,     0,  1047,  1048,
       0,  1049,  1050,  1051,     0,     0,     0,  1052,     0,     0,
       0,     0,     0,  2532,     0,  1053,  1054,  1055,  1056,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1057,  1058,
    1059,     0,     0,     0,     0,     0,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,  1062,    58,    59,    60,    61,    62,    63,  1063,
      65,    66,    67,    68,    69,    70,    71,  1064,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,  1065,    88,   590,    90,    91,    92,    93,
      94,   591,  1066,    96,  1067,  1068,    99,  1069,  1070,  1071,
    1072,  1073,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,  1074,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,  1075,  1076,
    1077,   594,  1078,  1079,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
    1080,   176,   177,   600,   179,   180,  1081,   182,  1082,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
    1083,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,  1084,  1085,   217,   218,   219,  1086,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,  1087,   259,  1088,   261,   262,
     263,   264,  1089,  1090,  1091,  1092,   269,   270,   271,   272,
     273,   274,   275,   276,   277,  1093,  1094,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,  1095,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,  1096,   308,   309,   310,
     311,   312,  1097,  1098,   315,   608,   316,   609,   318,   319,
    1099,   321,   322,   323,   324,   325,   326,  1100,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,  1101,   358,   612,
     360,   361,   362,  1102,  1103,   365,   366,   613,   368,   369,
    1104,   371,   372,   373,   374,   375,   376,  1105,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,  1106,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,
     429,   430,   431,  1111,  1112,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,  1113,   448,
    1114,   450,   451,   452,   453,   454,   455,   456,   457,   458,
    1115,  1116,   619,  1117,   463,   464,   465,     0,   466,   620,
     468,  1118,     0,     0,     0,   985,   986,   987,   988,   989,
    1119,  1120,     0,     0,     0,     0,  1121,   990,   991,     0,
     992,  1122,     0,     0,     0,  1123,  1124,   993,   994,  1125,
    1126,   995,   996,   997,   998,     0,   999,  1000,     0,  1001,
    1002,     0,     0,     0,     0,  1003,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,  1007,  1008,     0,  1009,  1010,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1011,  1012,
    1013,     0,  1014,  1015,     0,     0,     0,  1016,  1017,  1018,
       0,     0,     0,     0,     0,     0,     0,  1019,     0,  1020,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1022,     0,     0,     0,
       0,  1023,  1024,     0,  1025,     0,     0,     0,     0,     0,
    1026,     0,  1027,     0,     0,  1028,     0,     0,  1029,  1030,
    1031,     0,  1032,  1033,  1034,     0,  1035,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1036,     0,     0,     0,  1037,  1038,  1039,     0,  1040,
       0,     0,     0,     0,     0,     0,  1041,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1042,  1043,     0,
       0,     0,     0,     0,     0,     0,  1044,     0,     0,  1045,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1046,
       0,     0,     0,     0,     0,  1047,  1048,     0,  1049,  1050,
    1051,     0,     0,     0,  1052,     0,     0,     0,     0,     0,
       0,     0,  1053,  1054,  1055,  1056,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1057,  1058,  1059,     0,     0,
       0,     0,     0,  1060,     0,  1061,  1699,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    46,    47,    48,
     584,    49,    50,    51,    52,    53,    54,    55,    56,  1062,
      58,    59,    60,    61,    62,    63,  1063,    65,    66,    67,
      68,    69,    70,    71,  1064,   585,     0,   586,   587,    77,
      78,    79,    80,    81,    82,   588,    84,    85,    86,    87,
    1065,    88,   590,    90,    91,    92,    93,    94,   591,  1066,
      96,  1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,     0,
     105,   106,   107,   592,   109,   110,   111,   112,   113,   114,
     115,   116,   117,  1074,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,  1075,  1076,  1077,   594,  1078,
    1079,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     595,   144,   145,   146,   147,   596,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   597,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   598,   599,   174,     0,  1080,   176,   177,
     600,   179,   180,  1081,   182,  1082,   601,   185,   186,   602,
     188,   189,   603,     0,   191,   192,   193,  1083,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   604,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   605,   214,  1084,
    1085,   217,   218,   219,  1086,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,  1087,   259,  1088,   261,   262,   263,   264,  1089,
    1090,  1091,  1092,   269,   270,   271,   272,   273,   274,   275,
     276,   277,  1093,  1094,   280,   281,   282,   283,   284,   606,
     285,   286,   287,   288,   289,   290,   291,   292,   293,  1095,
     295,   296,   297,   607,   298,   299,   300,   301,   302,   303,
     304,   305,   306,  1096,   308,   309,   310,   311,   312,  1097,
    1098,   315,   608,   316,   609,   318,   319,  1099,   321,   322,
     323,   324,   325,   326,  1100,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   610,   347,   348,   611,   350,   351,   352,
     353,   354,   355,   356,  1101,   358,   612,   360,   361,   362,
    1102,  1103,   365,   366,   613,   368,   369,  1104,   371,   372,
     373,   374,   375,   376,  1105,   378,   614,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   615,   399,   400,   616,
     402,   403,   404,   405,  1106,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,  1107,  1108,  1109,  1110,   429,   430,   431,
    1111,  1112,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   618,   444,   445,   446,  1113,   448,  1114,   450,   451,
     452,   453,   454,   455,   456,   457,   458,  1115,  1116,   619,
    1117,   463,   464,   465,     0,   466,   620,   468,  1118,     0,
       0,     0,   985,   986,   987,   988,   989,  1119,  1120,     0,
       0,     0,     0,  1121,   990,   991,     0,   992,  1122,     0,
       0,     0,  1123,  1124,   993,   994,  1125,  1126,   995,   996,
     997,   998,     0,   999,  1000,     0,  1001,  1002,     0,     0,
       0,     0,  1003,     0,     0,     0,  2821,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1006,
    1007,  1008,     0,  1009,  1010,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1011,  1012,  1013,     0,  1014,
    1015,     0,     0,     0,  1016,  1017,  1018,     0,  2822,     0,
       0,     0,     0,     0,  1019,     0,  1020,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1021,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,     0,     0,     0,     0,  1023,  1024,
       0,  1025,     0,     0,     0,     0,     0,  1026,     0,  1027,
       0,     0,  1028,     0,     0,  1029,  1030,  1031,     0,  1032,
    1033,  1034,     0,  1035,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,  1038,  1039,     0,  1040,     0,     0,     0,
       0,     0,     0,  1041,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1042,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,     0,     0,  1045,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1046,     0,     0,     0,
       0,     0,  1047,  1048,     0,  1049,  1050,  1051,     0,     0,
       0,  1052,     0,     0,     0,     0,     0,     0,     0,  1053,
    1054,  1055,  1056,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1057,  1058,  1059,     0,     0,     0,     0,     0,
    1060,     0,  1061,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,  1062,    58,    59,    60,
      61,    62,    63,  1063,    65,    66,    67,    68,    69,    70,
      71,  1064,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,  1065,    88,   590,
      90,    91,    92,    93,    94,   591,  1066,    96,  1067,  1068,
      99,  1069,  1070,  1071,  1072,  1073,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
    1074,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,  1075,  1076,  1077,   594,  1078,  1079,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,  1080,   176,   177,   600,   179,   180,
    1081,   182,  1082,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,  1083,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,  1084,  1085,   217,   218,
     219,  1086,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,  1087,
     259,  1088,   261,   262,   263,   264,  1089,  1090,  1091,  1092,
     269,   270,   271,   272,   273,   274,   275,   276,   277,  1093,
    1094,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,  1095,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
    1096,   308,   309,   310,   311,   312,  1097,  1098,   315,   608,
     316,   609,   318,   319,  1099,   321,   322,   323,   324,   325,
     326,  1100,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,  1101,   358,   612,   360,   361,   362,  1102,  1103,   365,
     366,   613,   368,   369,  1104,   371,   372,   373,   374,   375,
     376,  1105,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,  1106,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
    1107,  1108,  1109,  1110,   429,   430,   431,  1111,  1112,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,  1113,   448,  1114,   450,   451,   452,   453,   454,
     455,   456,   457,   458,  1115,  1116,   619,  1117,   463,   464,
     465,     0,   466,   620,   468,  1118,     0,     0,     0,   985,
     986,   987,   988,   989,  1119,  1120,     0,     0,     0,     0,
    1121,   990,   991,     0,   992,  1122,     0,     0,     0,  1123,
    1124,   993,   994,  1125,  1126,   995,   996,   997,   998,     0,
     999,  1000,     0,  1001,  1002,     0,     0,     0,     0,  1003,
       0,     0,     0,  1004,     0,     0,  1005,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1006,  1007,  1008,     0,
    1009,  1010,     0,     0,     0,     0,  3260,     0,     0,     0,
       0,     0,  1011,  1012,  1013,     0,  1014,  1015,     0,     0,
       0,  1016,  1017,  1018,     0,     0,     0,     0,     0,     0,
       0,  1019,     0,  1020,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1022,     0,     0,     0,     0,  1023,  1024,     0,  1025,     0,
       0,     0,     0,     0,  1026,     0,  1027,     0,     0,  1028,
       0,     0,  1029,  1030,  1031,     0,  1032,  1033,  1034,     0,
    1035,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1036,     0,     0,     0,  1037,
    1038,  1039,     0,  1040,     0,     0,     0,     0,     0,     0,
    1041,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1042,  1043,     0,     0,     0,     0,     0,     0,     0,
    1044,     0,     0,  1045,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1046,     0,     0,     0,     0,     0,  1047,
    1048,     0,  1049,  1050,  1051,     0,     0,     0,  1052,     0,
       0,     0,     0,     0,     0,     0,  1053,  1054,  1055,  1056,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1057,
    1058,  1059,     0,     0,     0,     0,     0,  1060,     0,  1061,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,   584,    49,    50,    51,    52,    53,
      54,    55,    56,  1062,    58,    59,    60,    61,    62,    63,
    1063,    65,    66,    67,    68,    69,    70,    71,  1064,   585,
       0,   586,   587,    77,    78,    79,    80,    81,    82,   588,
      84,    85,    86,    87,  1065,    88,   590,    90,    91,    92,
      93,    94,   591,  1066,    96,  1067,  1068,    99,  1069,  1070,
    1071,  1072,  1073,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,  1074,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,  1075,
    1076,  1077,   594,  1078,  1079,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,   596,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   598,   599,   174,
       0,  1080,   176,   177,   600,   179,   180,  1081,   182,  1082,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,  1083,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   605,   214,  1084,  1085,   217,   218,   219,  1086,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,  1087,   259,  1088,   261,
     262,   263,   264,  1089,  1090,  1091,  1092,   269,   270,   271,
     272,   273,   274,   275,   276,   277,  1093,  1094,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,   289,   290,
     291,   292,   293,  1095,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,  1096,   308,   309,
     310,   311,   312,  1097,  1098,   315,   608,   316,   609,   318,
     319,  1099,   321,   322,   323,   324,   325,   326,  1100,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,  1101,   358,
     612,   360,   361,   362,  1102,  1103,   365,   366,   613,   368,
     369,  1104,   371,   372,   373,   374,   375,   376,  1105,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,  1106,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,  1107,  1108,  1109,
    1110,   429,   430,   431,  1111,  1112,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,  1113,
     448,  1114,   450,   451,   452,   453,   454,   455,   456,   457,
     458,  1115,  1116,   619,  1117,   463,   464,   465,     0,   466,
     620,   468,  1118,     0,     0,     0,   985,   986,   987,   988,
     989,  1119,  1120,     0,     0,     0,     0,  1121,   990,   991,
       0,   992,  1122,     0,     0,     0,  1123,  1124,   993,   994,
    1125,  1126,   995,   996,   997,   998,     0,   999,  1000,     0,
    1001,  1002,     0,     0,     0,     0,  1003,     0,     0,     0,
    1004,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1006,  1007,  1008,     0,  1009,  1010,     0,
       0,     0,     0,  3262,     0,     0,     0,     0,     0,  1011,
    1012,  1013,     0,  1014,  1015,     0,     0,     0,  1016,  1017,
    1018,     0,     0,     0,     0,     0,     0,     0,  1019,     0,
    1020,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1021,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1022,     0,     0,
       0,     0,  1023,  1024,     0,  1025,     0,     0,     0,     0,
       0,  1026,     0,  1027,     0,     0,  1028,     0,     0,  1029,
    1030,  1031,     0,  1032,  1033,  1034,     0,  1035,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1036,     0,     0,     0,  1037,  1038,  1039,     0,
    1040,     0,     0,     0,     0,     0,     0,  1041,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1042,  1043,
       0,     0,     0,     0,     0,     0,     0,  1044,     0,     0,
    1045,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1046,     0,     0,     0,     0,     0,  1047,  1048,     0,  1049,
    1050,  1051,     0,     0,     0,  1052,     0,     0,     0,     0,
       0,     0,     0,  1053,  1054,  1055,  1056,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1057,  1058,  1059,     0,
       0,     0,     0,     0,  1060,     0,  1061,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
    1062,    58,    59,    60,    61,    62,    63,  1063,    65,    66,
      67,    68,    69,    70,    71,  1064,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,  1065,    88,   590,    90,    91,    92,    93,    94,   591,
    1066,    96,  1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,  1074,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,  1075,  1076,  1077,   594,
    1078,  1079,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,  1080,   176,
     177,   600,   179,   180,  1081,   182,  1082,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,  1083,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
    1084,  1085,   217,   218,   219,  1086,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,  1087,   259,  1088,   261,   262,   263,   264,
    1089,  1090,  1091,  1092,   269,   270,   271,   272,   273,   274,
     275,   276,   277,  1093,  1094,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
    1095,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,  1096,   308,   309,   310,   311,   312,
    1097,  1098,   315,   608,   316,   609,   318,   319,  1099,   321,
     322,   323,   324,   325,   326,  1100,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,  1101,   358,   612,   360,   361,
     362,  1102,  1103,   365,   366,   613,   368,   369,  1104,   371,
     372,   373,   374,   375,   376,  1105,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,  1106,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,   430,
     431,  1111,  1112,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,  1113,   448,  1114,   450,
     451,   452,   453,   454,   455,   456,   457,   458,  1115,  1116,
     619,  1117,   463,   464,   465,     0,   466,   620,   468,  1118,
       0,     0,     0,   985,   986,   987,   988,   989,  1119,  1120,
       0,     0,     0,     0,  1121,   990,   991,     0,   992,  1122,
       0,     0,     0,  1123,  1124,   993,   994,  1125,  1126,   995,
     996,   997,   998,     0,   999,  1000,     0,  1001,  1002,     0,
       0,     0,     0,  1003,     0,     0,     0,  1004,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1006,  1007,  1008,     0,  1009,  1010,     0,     0,     0,     0,
    3264,     0,     0,     0,     0,     0,  1011,  1012,  1013,     0,
    1014,  1015,     0,     0,     0,  1016,  1017,  1018,     0,     0,
       0,     0,     0,     0,     0,  1019,     0,  1020,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1022,     0,     0,     0,     0,  1023,
    1024,     0,  1025,     0,     0,     0,     0,     0,  1026,     0,
    1027,     0,     0,  1028,     0,     0,  1029,  1030,  1031,     0,
    1032,  1033,  1034,     0,  1035,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,  1038,  1039,     0,  1040,     0,     0,
       0,     0,     0,     0,  1041,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1042,  1043,     0,     0,     0,
       0,     0,     0,     0,  1044,     0,     0,  1045,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1046,     0,     0,
       0,     0,     0,  1047,  1048,     0,  1049,  1050,  1051,     0,
       0,     0,  1052,     0,     0,     0,     0,     0,     0,     0,
    1053,  1054,  1055,  1056,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1057,  1058,  1059,     0,     0,     0,     0,
       0,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,  1062,    58,    59,
      60,    61,    62,    63,  1063,    65,    66,    67,    68,    69,
      70,    71,  1064,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,  1065,    88,
     590,    90,    91,    92,    93,    94,   591,  1066,    96,  1067,
    1068,    99,  1069,  1070,  1071,  1072,  1073,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,  1074,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,  1075,  1076,  1077,   594,  1078,  1079,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,  1080,   176,   177,   600,   179,
     180,  1081,   182,  1082,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,  1083,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,  1084,  1085,   217,
     218,   219,  1086,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
    1087,   259,  1088,   261,   262,   263,   264,  1089,  1090,  1091,
    1092,   269,   270,   271,   272,   273,   274,   275,   276,   277,
    1093,  1094,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,  1095,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,  1096,   308,   309,   310,   311,   312,  1097,  1098,   315,
     608,   316,   609,   318,   319,  1099,   321,   322,   323,   324,
     325,   326,  1100,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,  1101,   358,   612,   360,   361,   362,  1102,  1103,
     365,   366,   613,   368,   369,  1104,   371,   372,   373,   374,
     375,   376,  1105,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,  1106,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,  1107,  1108,  1109,  1110,   429,   430,   431,  1111,  1112,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,  1113,   448,  1114,   450,   451,   452,   453,
     454,   455,   456,   457,   458,  1115,  1116,   619,  1117,   463,
     464,   465,     0,   466,   620,   468,  1118,     0,     0,     0,
     985,   986,   987,   988,   989,  1119,  1120,     0,     0,     0,
       0,  1121,   990,   991,     0,   992,  1122,     0,     0,     0,
    1123,  1124,   993,   994,  1125,  1126,   995,   996,   997,   998,
       0,   999,  1000,     0,  1001,  1002,     0,     0,     0,     0,
    1003,     0,     0,     0,  1004,     0,     0,  1005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,  1007,  1008,
       0,  1009,  1010,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1011,  1012,  1013,     0,  1014,  1015,     0,
       0,     0,  1016,  1017,  1018,     0,     0,     0,     0,     0,
       0,     0,  1019,     0,  1020,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1021,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1022,     0,     0,     0,     0,  1023,  1024,     0,  1025,
       0,     0,     0,     0,     0,  1026,     0,  1027,     0,     0,
    1028,     0,     0,  1029,  1030,  1031,     0,  1032,  1033,  1034,
       0,  1035,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1036,     0,     0,     0,
    1037,  1038,  1039,     0,  1040,     0,     0,     0,     0,     0,
       0,  1041,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1042,  1043,     0,     0,     0,     0,     0,     0,
       0,  1044,     0,     0,  1045,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1046,     0,     0,     0,     0,     0,
    1047,  1048,     0,  1049,  1050,  1051,     0,     0,     0,  1052,
       0,     0,     0,     0,     0,     0,     0,  1053,  1054,  1055,
    1056,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1057,  1058,  1059,     0,     0,     0,     0,     0,  1060,     0,
    1061,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,  1062,    58,    59,    60,    61,    62,
      63,  1063,    65,    66,    67,    68,    69,    70,    71,  1064,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,  1065,    88,   590,    90,    91,
      92,    93,    94,   591,  1066,    96,  1067,  1068,    99,  1069,
    1070,  1071,  1072,  1073,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,  1074,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
    1075,  1076,  1077,   594,  1078,  1079,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,  1080,   176,   177,   600,   179,   180,  1081,   182,
    1082,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,  1083,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,  1084,  1085,   217,   218,   219,  1086,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,  1087,   259,  1088,
     261,   262,   263,   264,  1089,  1090,  1091,  1092,   269,   270,
     271,   272,   273,   274,   275,   276,   277,  1093,  1094,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,  1095,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,  1096,   308,
     309,   310,   311,   312,  1097,  1098,   315,   608,   316,   609,
     318,   319,  1099,   321,   322,   323,   324,   325,   326,  1100,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,  1101,
     358,   612,   360,   361,   362,  1102,  1103,   365,   366,   613,
     368,   369,  1104,   371,   372,   373,   374,   375,   376,  1105,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,  1106,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,  1107,  1108,
    1109,  1110,   429,   430,   431,  1111,  1112,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
    1113,   448,  1114,   450,   451,   452,   453,   454,   455,   456,
     457,   458,  1115,  1116,   619,  1117,   463,   464,   465,     0,
     466,   620,   468,  1118,     0,     0,     0,   985,   986,   987,
     988,   989,  1119,  1120,     0,     0,     0,     0,  1121,   990,
     991,     0,   992,  1122,     0,     0,     0,  1123,  1124,   993,
     994,  1125,  1126,   995,   996,   997,   998,     0,   999,  1000,
       0,  1001,  1002,     0,     0,     0,     0,  1003,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,  1007,  1008,     0,  1009,  1010,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1011,  1012,  1013,     0,  1014,  1015,     0,     0,     0,  1016,
    1017,  1018,     0,     0,     0,     0,     0,     0,     0,  1019,
       0,  1020,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,     0,
       0,     0,     0,  1023,  1024,     0,  1025,     0,     0,     0,
       0,     0,  1026,     0,  1027,     0,     0,  1028,     0,     0,
    1029,  1030,  1031,     0,  1032,  1033,  1034,     0,  1035,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1036,     0,     0,     0,  1037,  1038,  1039,
       0,  1040,     0,     0,     0,     0,     0,     0,  1041,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1042,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,     0,
       0,  1045,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1046,     0,     0,     0,     0,     0,  1047,  1048,     0,
    1049,  1050,  1051,     0,     0,     0,  1052,     0,     0,     0,
       0,     0,     0,     0,  1053,  1054,  1055,  1056,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1057,  1058,  1059,
       0,     0,     0,     0,     0,  1060,     0,  1061,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,  1062,    58,    59,    60,    61,    62,    63,  1063,    65,
      66,    67,    68,    69,    70,    71,  1064,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,  1065,    88,   590,    90,    91,    92,    93,    94,
     591,  1066,    96,  1067,  1068,    99,  1069,  1070,  1071,  1072,
    1073,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,  1074,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,  1075,  1076,  1077,
     594,  1078,  1079,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,  1080,
     176,   177,   600,   179,   180,  1081,   182,  1082,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,  1083,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,  1084,  1085,   217,   218,   219,  1086,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,  1087,   259,  1088,   261,   262,   263,
     264,  1089,  1090,  1091,  1092,   269,   270,   271,   272,   273,
     274,   275,   276,   277,  1093,  1094,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,  1095,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,  1096,   308,   309,   310,   311,
     312,  1097,  1098,   315,   608,   316,   609,   318,   319,  1099,
     321,   322,   323,   324,   325,   326,  1100,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,  1101,   358,   612,   360,
     361,   362,  1102,  1103,   365,   366,   613,   368,   369,  1104,
     371,   372,   373,   374,   375,   376,  1105,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,  1111,  1112,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,  1113,   448,  1114,
     450,   451,   452,   453,   454,   455,   456,   457,   458,  1115,
    1116,   619,  1117,   463,   464,   465,     0,   466,   620,   468,
    1118,     0,     0,     0,   985,   986,   987,   988,   989,  1119,
    1120,     0,     0,     0,     0,  1121,   990,   991,     0,   992,
    1726,     0,     0,     0,  1123,  1124,   993,   994,  1125,  1126,
     995,   996,   997,   998,     0,   999,  1000,     0,  1001,  1002,
       0,     0,     0,     0,  1003,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1006,  1007,  1008,     0,  1009,  1010,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1011,  1012,  1013,
       0,  1014,  1015,     0,     0,     0,  1016,  1017,  1018,     0,
       0,     0,     0,     0,     0,     0,  1019,     0,  1020,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1022,     0,     0,     0,     0,
    1023,  1024,     0,  1025,     0,     0,     0,     0,     0,  1026,
       0,  1027,     0,     0,  1028,     0,     0,  1029,  1030,  1031,
       0,  1032,  1033,  1034,     0,  1035,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1036,     0,     0,     0,  1037,  1038,  1039,     0,  1040,     0,
       0,     0,     0,     0,     0,  1041,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1042,  1043,     0,     0,
       0,     0,     0,     0,     0,  1044,     0,     0,  1045,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1046,     0,
       0,     0,     0,     0,  1047,  1048,     0,  1049,  1050,  1051,
       0,     0,     0,  1052,     0,     0,     0,     0,     0,     0,
       0,  1053,  1054,  1055,  1056,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1057,  1058,  1059,     0,     0,     0,
       0,     0,  1060,     0,  1061,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,  1062,    58,
      59,    60,    61,    62,    63,  1063,    65,    66,    67,    68,
      69,    70,    71,  1064,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,  1065,
      88,   590,    90,    91,    92,    93,    94,   591,  1066,    96,
    1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,  1074,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,  1075,  1076,  1077,   594,  1078,  1079,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,  1080,   176,   177,   600,
     179,   180,  1081,   182,  1082,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,  1083,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,  1084,  1085,
     217,   218,   219,  1086,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,  1087,   259,  1088,   261,   262,   263,   264,  1089,  1090,
    1091,  1092,   269,   270,   271,   272,   273,   274,   275,   276,
     277,  1093,  1094,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,  1095,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,  1096,   308,   309,   310,   311,   312,  1097,  1098,
     315,   608,   316,   609,   318,   319,  1099,   321,   322,   323,
     324,   325,   326,  1100,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,  1101,   358,   612,   360,   361,   362,  1102,
    1103,   365,   366,   613,   368,   369,  1104,   371,   372,   373,
     374,   375,   376,  1105,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,  1106,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,  1107,  1108,  1109,  1110,   429,   430,   431,  1111,
    1112,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,  2393,   448,  1114,   450,   451,   452,
     453,   454,   455,   456,   457,   458,  1115,  1116,   619,  1117,
     463,   464,   465,     0,   466,   620,   468,  1118,     0,     0,
       0,   985,   986,   987,   988,   989,  1119,  1120,     0,     0,
       0,     0,  1121,   990,   991,     0,   992,  1122,     0,     0,
       0,  1123,  1124,   993,   994,  1125,  1126,   995,   996,   997,
     998,     0,   999,  1000,     0,  1001,  1002,     0,     0,     0,
       0,  1003,     0,     0,     0,  1004,     0,     0,  1005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1006,  1007,
    1008,     0,  1009,  1010,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1011,  1012,  1013,     0,  1014,  1015,
       0,     0,     0,  1016,  1017,  1018,     0,     0,     0,     0,
       0,     0,     0,  1019,     0,  3873,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1022,     0,     0,     0,     0,  1023,  1024,     0,
    1025,     0,     0,     0,     0,     0,  1026,     0,  1027,     0,
       0,  1028,     0,     0,  1029,  1030,  1031,     0,  1032,  1033,
    1034,     0,  1035,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1036,     0,     0,
       0,  1037,  1038,  1039,     0,  1040,     0,     0,     0,     0,
       0,     0,  1041,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1042,  1043,     0,     0,     0,     0,     0,
       0,     0,  1044,     0,     0,  1045,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1046,     0,     0,     0,     0,
       0,  1047,  1048,     0,  1049,  1050,  1051,     0,     0,     0,
    1052,     0,     0,     0,     0,     0,     0,     0,  1053,  1054,
    1055,  1056,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1057,  1058,  1059,     0,     0,     0,     0,     0,  1060,
       0,  1061,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,  1062,    58,    59,    60,    61,
      62,    63,  1063,    65,    66,    67,    68,    69,    70,    71,
    1064,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,  1065,    88,   590,    90,
      91,    92,    93,    94,   591,  1066,    96,  1067,  1068,    99,
    1069,  1070,  1071,  1072,  1073,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,  1074,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,  1075,  1076,  1077,   594,  1078,  1079,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,  1080,   176,   177,   600,   179,   180,  1081,
     182,  1082,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,  1083,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,  1084,  1085,   217,   218,   219,
    1086,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,  1087,   259,
    1088,   261,   262,   263,   264,  1089,  1090,  1091,  1092,   269,
     270,   271,   272,   273,   274,   275,   276,   277,  1093,  1094,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,  1095,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,  1096,
     308,   309,   310,   311,   312,  1097,  1098,   315,   608,   316,
     609,   318,   319,  1099,   321,   322,   323,   324,   325,   326,
    1100,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
    1101,   358,   612,   360,   361,   362,  1102,  1103,   365,   366,
     613,   368,   369,  1104,   371,   372,   373,   374,   375,   376,
    1105,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
    1106,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,  1107,
    1108,  1109,  1110,   429,   430,   431,  1111,  1112,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,  1113,   448,  1114,   450,   451,   452,   453,   454,   455,
     456,   457,   458,  1115,  1116,   619,  1117,   463,   464,   465,
       0,   466,   620,   468,  1118,     0,     0,     0,   985,   986,
     987,   988,   989,  1119,  1120,     0,     0,     0,     0,  1121,
     990,   991,     0,   992,  1122,     0,     0,     0,  1123,  1124,
     993,   994,  1125,  1126,   995,   996,   997,   998,     0,   999,
    1000,     0,  1001,  1002,     0,     0,     0,     0,  1003,     0,
       0,     0,  1004,     0,     0,  1005,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1006,  1007,  1008,     0,  1009,
    1010,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1011,  1012,  1013,     0,  1014,  1015,     0,     0,     0,
    1016,  1017,  1018,     0,     0,     0,     0,     0,     0,     0,
    1019,     0,  3895,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1022,
       0,     0,     0,     0,  1023,  1024,     0,  1025,     0,     0,
       0,     0,     0,  1026,     0,  1027,     0,     0,  1028,     0,
       0,  1029,  1030,  1031,     0,  1032,  1033,  1034,     0,  1035,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1036,     0,     0,     0,  1037,  1038,
    1039,     0,  1040,     0,     0,     0,     0,     0,     0,  1041,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1042,  1043,     0,     0,     0,     0,     0,     0,     0,  1044,
       0,     0,  1045,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1046,     0,     0,     0,     0,     0,  1047,  1048,
       0,  1049,  1050,  1051,     0,     0,     0,  1052,     0,     0,
       0,     0,     0,     0,     0,  1053,  1054,  1055,  1056,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1057,  1058,
    1059,     0,     0,     0,     0,     0,  1060,     0,  1061,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,  1062,    58,    59,    60,    61,    62,    63,  1063,
      65,    66,    67,    68,    69,    70,    71,  1064,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,  1065,    88,   590,    90,    91,    92,    93,
      94,   591,  1066,    96,  1067,  1068,    99,  1069,  1070,  1071,
    1072,  1073,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,  1074,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,  1075,  1076,
    1077,   594,  1078,  1079,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
    1080,   176,   177,   600,   179,   180,  1081,   182,  1082,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
    1083,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,  1084,  1085,   217,   218,   219,  1086,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,  1087,   259,  1088,   261,   262,
     263,   264,  1089,  1090,  1091,  1092,   269,   270,   271,   272,
     273,   274,   275,   276,   277,  1093,  1094,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,  1095,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,  1096,   308,   309,   310,
     311,   312,  1097,  1098,   315,   608,   316,   609,   318,   319,
    1099,   321,   322,   323,   324,   325,   326,  1100,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,  1101,   358,   612,
     360,   361,   362,  1102,  1103,   365,   366,   613,   368,   369,
    1104,   371,   372,   373,   374,   375,   376,  1105,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,  1106,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,
     429,   430,   431,  1111,  1112,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,  1113,   448,
    1114,   450,   451,   452,   453,   454,   455,   456,   457,   458,
    1115,  1116,   619,  1117,   463,   464,   465,     0,   466,   620,
     468,  1118,     0,     0,     0,   985,   986,   987,   988,   989,
    1119,  1120,     0,     0,     0,     0,  1121,   990,   991,     0,
     992,  1122,     0,     0,     0,  1123,  1124,   993,   994,  1125,
    1126,   995,   996,   997,   998,     0,   999,  1000,     0,  1001,
    1002,     0,     0,     0,     0,  1003,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,  1007,  1008,     0,  1009,  1010,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1011,  1012,
    1013,     0,  1014,  1015,     0,     0,     0,  1016,  1017,  1018,
       0,     0,     0,     0,     0,     0,     0,  1019,     0,  1020,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1022,     0,     0,     0,
       0,  1023,  1024,  5978,  1025,     0,     0,     0,     0,     0,
    1026,     0,  1027,     0,     0,  1028,     0,     0,  1029,     0,
    1031,     0,  1032,  1033,  1034,     0,  1035,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1036,     0,     0,     0,  1037,  1038,  1039,     0,  1040,
       0,     0,     0,     0,     0,     0,  1041,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1042,  1043,     0,
       0,     0,     0,     0,     0,     0,  1044,     0,     0,  1045,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1046,
       0,     0,     0,     0,     0,  1047,  1048,     0,  1049,  1050,
    1051,     0,     0,     0,  1052,     0,     0,     0,     0,     0,
       0,     0,  1053,  1054,  1055,  1056,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1057,  1058,  1059,     0,     0,
       0,     0,     0,  1060,     0,  1061,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    46,    47,    48,
     584,    49,    50,    51,    52,    53,    54,    55,    56,  1062,
      58,    59,    60,    61,    62,    63,  1063,    65,    66,    67,
      68,    69,    70,    71,  1064,   585,     0,   586,   587,    77,
      78,    79,    80,    81,    82,   588,    84,    85,    86,    87,
    1065,    88,   590,    90,    91,    92,    93,    94,   591,  1066,
      96,  1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,     0,
     105,   106,   107,   592,   109,   110,   111,   112,   113,   114,
     115,   116,   117,  1074,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,  1075,  1076,  1077,   594,  1078,
    1079,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     595,   144,   145,   146,   147,   596,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   597,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   598,   599,   174,     0,  1080,   176,   177,
     600,   179,   180,  1081,   182,  1082,   601,   185,   186,   602,
     188,   189,   603,     0,   191,   192,   193,  1083,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   604,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   605,   214,  1084,
    1085,   217,   218,   219,  1086,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,  1087,   259,  1088,   261,   262,   263,   264,  1089,
    1090,  1091,  1092,   269,   270,   271,   272,   273,   274,   275,
     276,   277,  1093,  1094,   280,   281,   282,   283,   284,   606,
     285,   286,   287,   288,   289,   290,   291,   292,   293,  1095,
     295,   296,   297,   607,   298,   299,   300,   301,   302,   303,
     304,   305,   306,  1096,   308,   309,   310,   311,   312,  1097,
    1098,   315,   608,   316,   609,   318,   319,  1099,   321,   322,
     323,   324,   325,   326,  1100,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   610,   347,   348,   611,   350,   351,   352,
     353,   354,   355,   356,  1101,   358,   612,   360,   361,   362,
    1102,  1103,   365,   366,   613,   368,   369,  1104,   371,   372,
     373,   374,   375,   376,  1105,   378,   614,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   615,   399,   400,   616,
     402,   403,   404,   405,  1106,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,  1107,  1108,  1109,  1110,   429,   430,   431,
    1111,  1112,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   618,   444,   445,   446,  1113,   448,  1114,   450,   451,
     452,   453,   454,   455,   456,   457,   458,  1115,  1116,   619,
    1117,   463,   464,   465,     0,   466,   620,   468,  1118,     0,
       0,     0,   985,   986,   987,   988,   989,  1119,  1120,     0,
       0,     0,     0,  1121,   990,   991,     0,   992,  1122,     0,
       0,     0,  1123,  1124,   993,   994,  1125,  1126,   995,   996,
     997,   998,     0,   999,  1000,     0,  1001,  1002,     0,     0,
       0,     0,  1003,     0,     0,     0,  1004,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1006,
    1007,  1008,     0,  1009,  1010,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1011,  1012,  1013,     0,  1014,
    1015,     0,     0,     0,  1016,  1017,  1018,     0,     0,     0,
       0,     0,     0,     0,  1019,     0,  1692,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1021,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,     0,     0,     0,     0,  1023,  1024,
       0,  1025,     0,     0,     0,     0,     0,  1026,     0,  1027,
       0,     0,  1028,     0,     0,  1029,     0,  1031,     0,  1032,
    1033,  1034,     0,  1035,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1036,     0,
       0,     0,  1037,  1038,  1039,     0,  1040,     0,     0,     0,
       0,     0,     0,  1041,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1042,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,     0,     0,  1045,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1046,     0,     0,     0,
       0,     0,  1047,  1048,     0,  1049,  1050,  1051,     0,     0,
       0,  1052,     0,     0,     0,     0,     0,     0,     0,  1053,
    1054,  1055,  1056,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1057,  1058,  1059,     0,     0,     0,     0,     0,
    1060,     0,  1061,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,  1062,    58,    59,    60,
      61,    62,    63,  1063,    65,    66,    67,    68,    69,    70,
      71,  1064,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,  1065,    88,   590,
      90,    91,    92,    93,    94,   591,  1066,    96,  1067,  1068,
      99,  1069,  1070,  1071,  1072,  1073,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
    1074,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,  1075,  1076,  1077,   594,  1078,  1079,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,  1080,   176,   177,   600,   179,   180,
    1081,   182,  1082,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,  1083,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,  1084,  1085,   217,   218,
     219,  1086,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,  1087,
     259,  1088,   261,   262,   263,   264,  1089,  1090,  1091,  1092,
     269,   270,   271,   272,   273,   274,   275,   276,   277,  1093,
    1094,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,  1095,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
    1096,   308,   309,   310,   311,   312,  1097,  1098,   315,   608,
     316,   609,   318,   319,  1099,   321,   322,   323,   324,   325,
     326,  1100,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,  1101,   358,   612,   360,   361,   362,  1102,  1103,   365,
     366,   613,   368,   369,  1104,   371,   372,   373,   374,   375,
     376,  1105,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,  1106,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
    1107,  1108,  1109,  1110,   429,   430,   431,  1111,  1112,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,  1113,   448,  1114,   450,   451,   452,   453,   454,
     455,   456,   457,   458,  1115,  1116,   619,  1117,   463,   464,
     465,     0,   466,   620,   468,  1118,     0,     0,     0,   985,
     986,   987,   988,   989,  1693,  1694,     0,     0,     0,     0,
    1121,   990,   991,     0,   992,  1122,     0,     0,     0,  1123,
    1124,   993,   994,  1125,  1126,   995,   996,   997,   998,     0,
     999,  1000,     0,  1001,  1002,     0,     0,     0,     0,  1003,
       0,     0,     0,  1004,     0,     0,  1005,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1006,  1007,  1008,     0,
    1009,  1010,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1011,  1012,  1013,     0,  1014,  1015,     0,     0,
       0,  1016,  1017,  1018,     0,     0,     0,     0,     0,     0,
       0,  1019,     0,  1830,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1022,     0,     0,     0,     0,  1023,  1024,     0,  1025,     0,
       0,     0,     0,     0,  1026,     0,  1027,     0,     0,  1028,
       0,     0,  1029,     0,  1031,     0,  1032,  1033,  1034,     0,
    1035,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1036,     0,     0,     0,  1037,
    1038,  1039,     0,  1040,     0,     0,     0,     0,     0,     0,
    1041,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1042,  1043,     0,     0,     0,     0,     0,     0,     0,
    1044,     0,     0,  1045,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1046,     0,     0,     0,     0,     0,  1047,
    1048,     0,  1049,  1050,  1051,     0,     0,     0,  1052,     0,
       0,     0,     0,     0,     0,     0,  1053,  1054,  1055,  1056,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1057,
    1058,  1059,     0,     0,     0,     0,     0,  1060,     0,  1061,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,   584,    49,    50,    51,    52,    53,
      54,    55,    56,  1062,    58,    59,    60,    61,    62,    63,
    1063,    65,    66,    67,    68,    69,    70,    71,  1064,   585,
       0,   586,   587,    77,    78,    79,    80,    81,    82,   588,
      84,    85,    86,    87,  1065,    88,   590,    90,    91,    92,
      93,    94,   591,  1066,    96,  1067,  1068,    99,  1069,  1070,
    1071,  1072,  1073,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,  1074,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,  1075,
    1076,  1077,   594,  1078,  1079,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,   596,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   598,   599,   174,
       0,  1080,   176,   177,   600,   179,   180,  1081,   182,  1082,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,  1083,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   605,   214,  1084,  1085,   217,   218,   219,  1086,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,  1087,   259,  1088,   261,
     262,   263,   264,  1089,  1090,  1091,  1092,   269,   270,   271,
     272,   273,   274,   275,   276,   277,  1093,  1094,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,   289,   290,
     291,   292,   293,  1095,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,  1096,   308,   309,
     310,   311,   312,  1097,  1098,   315,   608,   316,   609,   318,
     319,  1099,   321,   322,   323,   324,   325,   326,  1100,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,  1101,   358,
     612,   360,   361,   362,  1102,  1103,   365,   366,   613,   368,
     369,  1104,   371,   372,   373,   374,   375,   376,  1105,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,  1106,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,  1107,  1108,  1109,
    1110,   429,   430,   431,  1111,  1112,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,  1113,
     448,  1114,   450,   451,   452,   453,   454,   455,   456,   457,
     458,  1115,  1116,   619,  1117,   463,   464,   465,     0,   466,
     620,   468,  1118,     0,     0,     0,   985,   986,   987,   988,
     989,  1693,  1694,     0,     0,     0,     0,  1121,   990,   991,
       0,   992,  1122,     0,     0,     0,  1123,  1124,   993,   994,
    1125,  1126,   995,   996,   997,   998,     0,   999,  1000,     0,
    1001,  1002,     0,     0,     0,     0,  1003,     0,     0,     0,
    1004,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1006,  1007,  1008,     0,  1009,  1010,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1011,
    1012,  1013,     0,  1014,  1015,     0,     0,     0,  1016,  1017,
    1018,     0,     0,     0,     0,     0,     0,     0,  1019,     0,
    1832,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1021,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1022,     0,     0,
       0,     0,  1023,  1024,     0,  1025,     0,     0,     0,     0,
       0,  1026,     0,  1027,     0,     0,  1028,     0,     0,  1029,
       0,  1031,     0,  1032,  1033,  1034,     0,  1035,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1036,     0,     0,     0,  1037,  1038,  1039,     0,
    1040,     0,     0,     0,     0,     0,     0,  1041,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1042,  1043,
       0,     0,     0,     0,     0,     0,     0,  1044,     0,     0,
    1045,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1046,     0,     0,     0,     0,     0,  1047,  1048,     0,  1049,
    1050,  1051,     0,     0,     0,  1052,     0,     0,     0,     0,
       0,     0,     0,  1053,  1054,  1055,  1056,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1057,  1058,  1059,     0,
       0,     0,     0,     0,  1060,     0,  1061,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
    1062,    58,    59,    60,    61,    62,    63,  1063,    65,    66,
      67,    68,    69,    70,    71,  1064,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,  1065,    88,   590,    90,    91,    92,    93,    94,   591,
    1066,    96,  1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,  1074,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,  1075,  1076,  1077,   594,
    1078,  1079,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,  1080,   176,
     177,   600,   179,   180,  1081,   182,  1082,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,  1083,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
    1084,  1085,   217,   218,   219,  1086,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,  1087,   259,  1088,   261,   262,   263,   264,
    1089,  1090,  1091,  1092,   269,   270,   271,   272,   273,   274,
     275,   276,   277,  1093,  1094,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
    1095,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,  1096,   308,   309,   310,   311,   312,
    1097,  1098,   315,   608,   316,   609,   318,   319,  1099,   321,
     322,   323,   324,   325,   326,  1100,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,  1101,   358,   612,   360,   361,
     362,  1102,  1103,   365,   366,   613,   368,   369,  1104,   371,
     372,   373,   374,   375,   376,  1105,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,  1106,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,   430,
     431,  1111,  1112,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,  1113,   448,  1114,   450,
     451,   452,   453,   454,   455,   456,   457,   458,  1115,  1116,
     619,  1117,   463,   464,   465,     0,   466,   620,   468,  1118,
       0,     0,     0,   985,   986,   987,   988,   989,  1693,  1694,
       0,     0,     0,     0,  1121,   990,   991,     0,   992,  1122,
       0,     0,     0,  1123,  1124,   993,   994,  1125,  1126,   995,
     996,   997,   998,     0,   999,  1000,     0,  1001,  1002,     0,
       0,     0,     0,  1003,     0,     0,     0,  1004,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1006,  1007,  1008,     0,  1009,  1010,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1011,  1012,  1013,     0,
    1014,  1015,     0,     0,     0,  1016,  1017,  1018,     0,     0,
       0,     0,     0,     0,     0,  1019,     0,  1020,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1021,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1022,     0,     0,     0,     0,  1023,
    1024,     0,  1025,     0,     0,     0,     0,     0,  1026,     0,
    1027,     0,     0,  1028,     0,     0,  1029,     0,  1031,     0,
    1032,  1033,  1034,     0,  1035,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1036,
       0,     0,     0,  1037,  1038,  1039,     0,  1040,     0,     0,
       0,     0,     0,     0,  1041,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1042,  1043,     0,     0,     0,
       0,     0,     0,     0,  1044,     0,     0,  1045,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1046,     0,     0,
       0,     0,     0,  1047,  1048,     0,  1049,  1050,  1051,     0,
       0,     0,  1052,     0,     0,     0,     0,     0,     0,     0,
    1053,  1054,  1055,  1056,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1057,  1058,  1059,     0,     0,     0,     0,
       0,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,  1062,    58,    59,
      60,    61,    62,    63,  1063,    65,    66,    67,    68,    69,
      70,    71,  1064,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,  1065,    88,
     590,    90,    91,    92,    93,    94,   591,  1066,    96,  1067,
    1068,    99,  1069,  1070,  1071,  1072,  1073,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,  1074,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,  1075,  1076,  1077,   594,  1078,  1079,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,  1080,   176,   177,   600,   179,
     180,  1081,   182,  1082,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,  1083,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,  1084,  1085,   217,
     218,   219,  1086,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
    1087,   259,  1088,   261,   262,   263,   264,  1089,  1090,  1091,
    1092,   269,   270,   271,   272,   273,   274,   275,   276,   277,
    1093,  1094,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,  1095,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,  1096,   308,   309,   310,   311,   312,  1097,  1098,   315,
     608,   316,   609,   318,   319,  1099,   321,   322,   323,   324,
     325,   326,  1100,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,  1101,   358,   612,   360,   361,   362,  1102,  1103,
     365,   366,   613,   368,   369,  1104,   371,   372,   373,   374,
     375,   376,  1105,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,  1106,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,  1107,  1108,  1109,  1110,   429,   430,   431,  1111,  1112,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,  1113,   448,  1114,   450,   451,   452,   453,
     454,   455,   456,   457,   458,  1115,  1116,   619,  1117,   463,
     464,   465,     0,   466,   620,   468,  1118,     0,     0,     0,
     985,   986,   987,   988,   989,  1119,  1120,     0,     0,     0,
       0,  1121,   990,   991,     0,   992,  1122,     0,     0,     0,
    1123,  1124,   993,   994,  1125,  1126,   995,   996,   997,   998,
       0,   999,  1000,     0,  1001,  1002,     0,     0,     0,     0,
    1003,     0,     0,     0,  1004,     0,     0,  1005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,  1007,  1008,
       0,  1009,  1010,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1011,  1012,  1013,     0,  1014,  1015,     0,
       0,     0,  1016,  1017,  1018,     0,     0,     0,     0,     0,
       0,     0,  1019,     0,  2645,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1021,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1022,     0,     0,     0,     0,  1023,  1024,     0,  1025,
       0,     0,     0,     0,     0,  1026,     0,  1027,     0,     0,
    1028,     0,     0,  1029,     0,  1031,     0,  1032,  1033,  1034,
       0,  1035,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1036,     0,     0,     0,
    1037,  1038,  1039,     0,  1040,     0,     0,     0,     0,     0,
       0,  1041,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1042,  1043,     0,     0,     0,     0,     0,     0,
       0,  1044,     0,     0,  1045,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1046,     0,     0,     0,     0,     0,
    1047,  1048,     0,  1049,  1050,  1051,     0,     0,     0,  1052,
       0,     0,     0,     0,     0,     0,     0,  1053,  1054,  1055,
    1056,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1057,  1058,  1059,     0,     0,     0,     0,     0,  1060,     0,
    1061,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,  1062,    58,    59,    60,    61,    62,
      63,  1063,    65,    66,    67,    68,    69,    70,    71,  1064,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,  1065,    88,   590,    90,    91,
      92,    93,    94,   591,  1066,    96,  1067,  1068,    99,  1069,
    1070,  1071,  1072,  1073,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,  1074,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
    1075,  1076,  1077,   594,  1078,  1079,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,  1080,   176,   177,   600,   179,   180,  1081,   182,
    1082,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,  1083,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,  1084,  1085,   217,   218,   219,  1086,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,  1087,   259,  1088,
     261,   262,   263,   264,  1089,  1090,  1091,  1092,   269,   270,
     271,   272,   273,   274,   275,   276,   277,  1093,  1094,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,  1095,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,  1096,   308,
     309,   310,   311,   312,  1097,  1098,   315,   608,   316,   609,
     318,   319,  1099,   321,   322,   323,   324,   325,   326,  1100,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,  1101,
     358,   612,   360,   361,   362,  1102,  1103,   365,   366,   613,
     368,   369,  1104,   371,   372,   373,   374,   375,   376,  1105,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,  1106,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,  1107,  1108,
    1109,  1110,   429,   430,   431,  1111,  1112,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
    1113,   448,  1114,   450,   451,   452,   453,   454,   455,   456,
     457,   458,  1115,  1116,   619,  1117,   463,   464,   465,     0,
     466,   620,   468,  1118,     0,     0,     0,   985,   986,   987,
     988,   989,  1119,  1120,     0,     0,     0,     0,  1121,   990,
     991,     0,   992,  1122,     0,     0,     0,  1123,  1124,   993,
     994,  1125,  1126,   995,   996,   997,   998,     0,   999,  1000,
       0,  1001,  1002,     0,     0,     0,     0,  1003,     0,     0,
       0,  1004,     0,     0,  1005,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,  1007,  1008,     0,  1009,  1010,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1011,  1012,  1013,     0,  1014,  1015,     0,     0,     0,  1016,
    1017,  1018,     0,     0,     0,     0,     0,     0,     0,  1019,
       0,  2647,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1021,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,     0,
       0,     0,     0,  1023,  1024,     0,  1025,     0,     0,     0,
       0,     0,  1026,     0,  1027,     0,     0,  1028,     0,     0,
    1029,     0,  1031,     0,  1032,  1033,  1034,     0,  1035,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1036,     0,     0,     0,  1037,  1038,  1039,
       0,  1040,     0,     0,     0,     0,     0,     0,  1041,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1042,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,     0,
       0,  1045,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1046,     0,     0,     0,     0,     0,  1047,  1048,     0,
    1049,  1050,  1051,     0,     0,     0,  1052,     0,     0,     0,
       0,     0,     0,     0,  1053,  1054,  1055,  1056,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1057,  1058,  1059,
       0,     0,     0,     0,     0,  1060,     0,  1061,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,  1062,    58,    59,    60,    61,    62,    63,  1063,    65,
      66,    67,    68,    69,    70,    71,  1064,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,  1065,    88,   590,    90,    91,    92,    93,    94,
     591,  1066,    96,  1067,  1068,    99,  1069,  1070,  1071,  1072,
    1073,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,  1074,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,  1075,  1076,  1077,
     594,  1078,  1079,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,  1080,
     176,   177,   600,   179,   180,  1081,   182,  1082,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,  1083,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,  1084,  1085,   217,   218,   219,  1086,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,  1087,   259,  1088,   261,   262,   263,
     264,  1089,  1090,  1091,  1092,   269,   270,   271,   272,   273,
     274,   275,   276,   277,  1093,  1094,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,  1095,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,  1096,   308,   309,   310,   311,
     312,  1097,  1098,   315,   608,   316,   609,   318,   319,  1099,
     321,   322,   323,   324,   325,   326,  1100,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,  1101,   358,   612,   360,
     361,   362,  1102,  1103,   365,   366,   613,   368,   369,  1104,
     371,   372,   373,   374,   375,   376,  1105,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,  1111,  1112,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,  1113,   448,  1114,
     450,   451,   452,   453,   454,   455,   456,   457,   458,  1115,
    1116,   619,  1117,   463,   464,   465,     0,   466,   620,   468,
    1118,     0,     0,     0,     0,   986,   987,   988,   989,  1119,
    1120,     0,     0,     0,     0,  1121,   990,   991,     0,   992,
    1122,     0,     0,     0,  1123,  1124,   993,   994,  1125,  1126,
     995,   996,   997,   998,     0,   999,  1000,     0,  1001,  1002,
       0,     0,     0,     0,  1003,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1006,  1007,  1008,     0,  1009,  1010,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1011,  1012,  1013,
       0,  1014,  1015,     0,     0,     0,  1016,  1017,  1018,     0,
       0,     0,     0,     0,     0,     0,  1019,     0,  1692,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1022,     0,     0,     0,     0,
    1023,  1024,     0,  1025,     0,     0,     0,     0,     0,  1026,
       0,  1027,     0,     0,  1028,     0,     0,     0,     0,  1031,
       0,  1032,  1033,  1034,     0,  1035,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1036,     0,     0,     0,  1037,  1038,  1039,     0,  1040,     0,
       0,     0,     0,     0,     0,  1041,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1042,  1043,     0,     0,
       0,     0,     0,     0,     0,  1044,     0,     0,  1045,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1046,     0,
       0,     0,     0,     0,  1047,  1048,     0,  1049,  1050,  1051,
       0,     0,     0,  1052,     0,     0,     0,     0,     0,     0,
       0,  1053,  1054,  1055,  1056,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1057,  1058,  1059,     0,     0,     0,
       0,     0,  1060,     0,  1061,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,  1062,    58,
      59,    60,    61,    62,    63,  1063,    65,    66,    67,    68,
      69,    70,    71,  1064,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,  1065,
      88,   590,    90,    91,    92,    93,    94,   591,  1066,    96,
    1067,  1068,    99,  1069,  1070,  1071,  1072,  1073,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,  1074,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,  1075,  1076,  1077,   594,  1078,  1079,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,  1080,   176,   177,   600,
     179,   180,  1081,   182,  1082,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,  1083,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,  1084,  1085,
     217,   218,   219,  1086,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,  1087,   259,  1088,   261,   262,   263,   264,  1089,  1090,
    1091,  1092,   269,   270,   271,   272,   273,   274,   275,   276,
     277,  1093,  1094,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,  1095,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,  1096,   308,   309,   310,   311,   312,  1097,  1098,
     315,   608,   316,   609,   318,   319,  1099,   321,   322,   323,
     324,   325,   326,  1100,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,  1101,   358,   612,   360,   361,   362,  1102,
    1103,   365,   366,   613,   368,   369,  1104,   371,   372,   373,
     374,   375,   376,  1105,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,  1106,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,  1107,  1108,  1109,  1110,   429,   430,   431,  1111,
    1112,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,  1113,   448,  1114,   450,   451,   452,
     453,   454,   455,   456,   457,   458,  1115,  1116,   619,  1117,
     463,   464,   465,   986,   466,   620,   468,  1118,     0,     0,
       0,     0,     0,     0,     0,     0,  5762,  5763,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5764,     0,     0,
       0,     0,  1124,     0,     0,  1125,  1126,     0,     0,     0,
       0,     0,  1003,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1008,     0,     0,  1010,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1014,
    1015,     0,     0,     0,  1729,  1730,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1028,     0,     0,     0,     0,     0,     0,     0,
    1033,  1034,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1052,     0,     0,     0,     0,     0,     0,     0,     0,
    1054,  1055,  1056,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,  1731,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,  2678,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,  3147,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
    2679,   426,   427,  2680,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1125,  1126,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,  3402,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
       0,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,  3148,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   790,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,  1217,
     466,   620,   468,   469,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3148,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1218,     0,
       0,   790,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,  1219,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,  1220,
     179,   180,   181,   182,   183,   601,  1221,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,  1222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,  1223,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,  1224,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,  1225,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,  1226,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,  1227,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,  1228,   462,
     463,   464,   465,  1217,   466,   620,   468,   469,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1218,     0,     0,     0,  1229,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,  1219,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,  1220,   179,   180,   181,   182,   183,   601,
    1221,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,  1222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,  1223,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,  1224,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,  1225,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,  1226,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,  1228,   462,   463,   464,   465,     0,   466,   620,
     468,   469,   902,   903,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1229,     0,     0,     0,     0,     0,     0,   904,     0,     0,
       0,     0,   905,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   906,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   907,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   908,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
     909,     0,     0,     0,     0,   910,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   808,     0,     0,     0,     0,     0,
       0,   911,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   912,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   913,
       0,     0,     0,     0,     0,     0,     0,   914,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   710,     0,     0,     0,     0,     0,     0,   915,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   916,
     917,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,    93,    94,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   918,   157,   158,   159,   160,   919,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   920,   171,
     172,   598,   599,   174,     0,   175,   176,   177,   600,   179,
     180,   181,   182,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     608,   316,   609,   318,   319,   320,   321,   921,   323,   324,
     325,   922,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   923,   344,
     345,   610,   347,   924,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,   363,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   925,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   926,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   619,   462,   463,
     464,   465,     0,   466,   620,   468,   469,  1194,   903,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   904,     0,     0,     0,     0,   905,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   906,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   907,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   908,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,   909,     0,     0,     0,     0,
     910,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   808,
       0,     0,     0,     0,     0,     0,   911,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   913,     0,     0,     0,     0,     0,
       0,     0,   914,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   710,     0,     0,
       0,     0,     0,     0,   915,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   916,   917,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,  1195,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   918,   157,   158,
     159,   160,   919,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   920,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   921,   323,   324,   325,  1196,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   923,   344,   345,   610,   347,   924,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   925,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,  1965,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   926,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   808,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   710,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    46,    47,    48,
     584,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,   585,     0,   586,   587,    77,
      78,    79,    80,    81,    82,   588,    84,    85,    86,    87,
     589,    88,   590,    90,    91,    92,    93,    94,   591,    95,
      96,    97,     0,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   592,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   593,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   594,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     595,   144,   145,   146,   147,   596,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   597,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   598,   599,   174,     0,   175,   176,   177,
     600,   179,   180,   181,   182,   183,   601,   185,   186,   602,
     188,   189,   603,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   604,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   605,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   606,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   607,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   608,   316,   609,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   610,   347,   348,   611,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   612,   360,   361,   362,
     363,   364,   365,   366,   613,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   614,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   615,   399,   400,   616,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   617,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   618,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   619,
     462,   463,   464,   465,  2058,   466,   620,   468,   469,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1729,  1730,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,  4947,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,  2059,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,    93,    94,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,   175,   176,   177,   600,   179,
     180,   181,   182,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,   363,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   619,   462,   463,
     464,   465,  4967,   466,   620,   468,   469,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   759,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
    3491,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3492,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     760,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,    93,    94,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,   175,   176,   177,   600,   179,
     180,   181,   182,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,  4968,   309,   310,   311,   312,   313,   314,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,   363,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,  4521,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   619,   462,   463,
     464,   465,     0,   466,   620,   468,   469,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    16,    17,     0,
       0,     0,     0,     0,  4765,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   710,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    46,    47,    48,
     584,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,   585,     0,   586,   587,    77,
      78,    79,    80,    81,    82,   588,    84,    85,    86,    87,
     589,    88,   590,    90,    91,    92,    93,    94,   591,    95,
      96,    97,     0,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   592,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   593,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   594,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     595,   144,   145,   146,   147,   596,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   597,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   598,   599,   174,     0,   175,   176,   177,
     600,   179,   180,   181,   182,   183,   601,   185,   186,   602,
     188,   189,   603,     0,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   604,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   605,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   606,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   607,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   608,   316,   609,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   610,   347,   348,   611,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   612,   360,   361,   362,
     363,   364,   365,   366,   613,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   614,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   615,   399,   400,   616,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   617,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   618,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   619,
     462,   463,   464,   465,  1918,   466,   620,   468,   469,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1919,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   808,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1920,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   710,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,  1503,  1504,
       0,  1921,     0,     0,  1505,  1506,     0,     0,     0,     0,
       0,     0,     0,     0,  1507,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1508,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1509,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1510,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1511,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1512,  1513,
       0,  1514,     0,     0,     0,     0,     0,     0,     0,  1515,
    1516,  1517,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1518,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1519,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1520,
       0,     0,     0,     0,     0,  1521,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1522,  1523,  1524,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1525,  1526,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,     0,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,   585,
       0,     0,   587,  1527,    78,  1528,  1529,    81,    82,   588,
      84,    85,    86,    87,   589,    88,   590,    90,    91,    92,
       0,  1530,   591,    95,    96,    97,     0,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   593,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,  1531,   129,
    1532,   131,   594,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,     0,
     148,   149,   150,  1533,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,  1534,   598,   599,   174,
       0,   175,   176,   177,     0,   179,   180,  1535,  1536,   183,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,  1537,
     213,   605,   214,   215,   216,   217,   218,   219,  1538,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,  1539,  1540,  1541,   269,   270,   271,
     272,   273,  1542,  1543,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,     0,  1544,
    1545,   292,   293,   294,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,  1546,  1547,   315,   608,   316,   609,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,  1548,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     612,   360,   361,   362,  1549,   364,   365,   366,   613,   368,
     369,   370,   371,   372,   373,     0,   375,   376,   377,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,  1550,   423,   424,  1551,   426,   427,
    1552,   429,   430,   431,   432,   617,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,   447,
     448,   449,     0,  1553,   452,   453,   454,   455,   456,   457,
     458,   459,   460,  1554,   462,   463,   464,   465,     0,   466,
     620,   468,  1555,  1503,  4312,     0,     0,     0,     0,  1505,
    1506,     0,     0,     0,     0,     0,     0,     0,     0,  1507,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1508,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1509,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1510,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1511,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1512,  1513,     0,  1514,     0,     0,     0,
       0,     0,     0,     0,  1515,  1516,  1517,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1518,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1519,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1520,     0,     0,     0,     0,     0,
    1521,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1522,  1523,  1524,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4313,  1526,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,     0,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,     0,   587,  1527,    78,
    1528,  1529,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,     0,  1530,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,  1531,   129,  1532,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,     0,   148,   149,   150,  1533,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,  1534,   598,   599,   174,     0,   175,   176,   177,     0,
     179,   180,  1535,  1536,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,  1537,   213,   605,   214,   215,   216,
     217,   218,   219,  1538,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,  1539,
    1540,  1541,   269,   270,   271,   272,   273,  1542,  1543,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,     0,  1544,  1545,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,  1546,  1547,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,     0,  4314,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,  4315,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
       0,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,  1550,
     423,   424,  1551,   426,   427,  1552,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,     0,  4316,   452,
     453,   454,   455,   456,   457,   458,   459,   460,  1554,   462,
     463,   464,   465,     0,   466,   620,   468,  1555,  1503,  1504,
       0,     0,     0,     0,  1505,  1506,     0,     0,     0,     0,
       0,     0,     0,     0,  1507,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1508,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1509,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1510,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1511,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1512,  1513,
       0,  1514,     0,     0,     0,     0,     0,     0,     0,  1515,
    1516,  1517,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1518,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1519,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1520,
       0,     0,     0,     0,     0,  1521,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1522,  1523,  1524,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1525,  1526,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,     0,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,   585,
       0,     0,   587,  1527,    78,  1528,  1529,    81,    82,   588,
      84,    85,    86,    87,   589,    88,   590,    90,    91,    92,
       0,  1530,   591,    95,    96,    97,     0,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   593,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,  1531,   129,
    1532,   131,   594,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,     0,
     148,   149,   150,  1533,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,  1534,   598,   599,   174,
       0,   175,   176,   177,     0,   179,   180,  1535,  1536,   183,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,  1537,
     213,   605,   214,   215,   216,   217,   218,   219,  1538,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,  1539,  1540,  1541,   269,   270,   271,
     272,   273,  1542,  1543,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,     0,  1544,
    1545,   292,   293,   294,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,  1546,  1547,   315,   608,   316,   609,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,  1548,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     612,   360,   361,   362,     0,   364,   365,   366,   613,   368,
     369,   370,   371,   372,   373,  5359,   375,   376,   377,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,  1550,   423,   424,  1551,   426,   427,
    1552,   429,   430,   431,   432,   617,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,   447,
     448,   449,     0,  1553,   452,   453,   454,   455,   456,   457,
     458,   459,   460,  1554,   462,   463,   464,   465,     0,   466,
     620,   468,  1555,  1503,  4312,     0,     0,     0,     0,  1505,
    1506,     0,     0,     0,     0,     0,     0,     0,     0,  1507,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1508,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1509,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1510,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1511,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1512,  1513,     0,  1514,     0,     0,     0,
       0,     0,     0,     0,  1515,  1516,  1517,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1518,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1519,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1520,     0,     0,     0,     0,     0,
    1521,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1522,  1523,  1524,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4313,  1526,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,     0,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,     0,   587,  1527,    78,
    1528,  1529,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,     0,  1530,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,  1531,   129,  1532,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,     0,   148,   149,   150,  1533,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,  1534,   598,   599,   174,     0,   175,   176,   177,     0,
     179,   180,  1535,  1536,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,  1537,   213,   605,   214,   215,   216,
     217,   218,   219,  1538,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,  1539,
    1540,  1541,   269,   270,   271,   272,   273,  1542,  1543,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,     0,  1544,  1545,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,  1546,  1547,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,     0,  4314,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,  5593,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
       0,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,  1550,
     423,   424,  1551,   426,   427,  1552,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,  1934,  4316,   452,
     453,   454,   455,   456,   457,   458,   459,   460,  1554,   462,
     463,   464,   465,     0,   466,   620,   468,  1555,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1935,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   808,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   710,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,  1918,   466,   620,   468,
     469,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1919,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   808,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   710,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,  1918,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   808,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   710,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,  1347,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,     0,     0,     0,     0,
       0,     0,     0,     0,  1348,  1349,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1350,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,  2743,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,     0,   466,   620,   468,
     469,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,  1450,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   808,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   710,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,     0,   466,   620,   468,
     469,   851,   852,     0,     0,     0,     0,     0,     0,     0,
       0,   853,     0,     0,     0,     0,     0,     0,     0,     0,
    1824,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,     0,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,     0,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,     0,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,   854,   855,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   856,   462,   463,   464,   465,
       0,   466,   620,   468,   469,  1450,   905,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   808,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   710,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,  1450,   466,   620,   468,
     469,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   808,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   710,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,  1384,   466,   620,
     468,   469,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,   905,
     466,   620,   468,   469,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1385,     0,     0,     0,     0,  1386,     0,
       0,   790,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   808,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   710,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,   853,
     466,   620,   468,   469,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    46,    47,    48,     0,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,   585,
       0,     0,   587,    77,    78,    79,    80,    81,    82,   588,
      84,    85,    86,    87,   589,    88,   590,    90,    91,    92,
      93,    94,   591,    95,    96,    97,     0,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   592,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   593,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   594,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   595,   144,   145,   146,   147,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   597,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   598,   599,   174,
       0,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     601,   185,   186,   602,   188,   189,   603,     0,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   604,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   605,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   606,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   607,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   608,   316,   609,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   610,   347,   348,
     611,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     612,   360,   361,   362,   363,   364,   365,   366,   613,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     614,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     615,   399,   400,   616,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   617,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   618,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   856,   462,   463,   464,   465,     0,   466,
     620,   468,   469,  2451,     0,     0,     0,  5133,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2452,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4136,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4137,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4138,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   710,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4139,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,   584,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,   586,   587,    77,    78,    79,
      80,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,    93,    94,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,   596,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   598,   599,   174,     0,   175,   176,   177,   600,   179,
     180,   181,   182,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   605,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,   363,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   619,   462,   463,
     464,   465,     0,   466,   620,   468,   469,  2451,     0,     0,
       0,  5883,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2452,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4136,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4137,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4138,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   710,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4139,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
      47,    48,   584,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,   585,     0,   586,
     587,    77,    78,    79,    80,    81,    82,   588,    84,    85,
      86,    87,   589,    88,   590,    90,    91,    92,    93,    94,
     591,    95,    96,    97,     0,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   592,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   593,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     594,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   595,   144,   145,   146,   147,   596,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   597,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   598,   599,   174,     0,   175,
     176,   177,   600,   179,   180,   181,   182,   183,   601,   185,
     186,   602,   188,   189,   603,     0,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   604,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   605,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   606,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   607,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   608,   316,   609,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   610,   347,   348,   611,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   612,   360,
     361,   362,   363,   364,   365,   366,   613,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   614,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   615,   399,
     400,   616,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   617,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   618,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   619,   462,   463,   464,   465,     0,   466,   620,   468,
     469,  2451,     0,     0,     0,  5996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2452,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4136,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4137,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4138,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     710,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4139,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
    3092,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   808,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   710,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,  1911,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
    1911,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,  2735,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,  3484,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
    5064,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,  5082,   466,   620,   468,   469,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    46,    47,    48,   584,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,   585,     0,   586,   587,    77,    78,    79,    80,    81,
      82,   588,    84,    85,    86,    87,   589,    88,   590,    90,
      91,    92,    93,    94,   591,    95,    96,    97,     0,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   592,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   593,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   594,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   595,   144,   145,   146,
     147,   596,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   597,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   598,
     599,   174,     0,   175,   176,   177,   600,   179,   180,   181,
     182,   183,   601,   185,   186,   602,   188,   189,   603,     0,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   604,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   605,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   606,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   607,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   608,   316,
     609,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   610,
     347,   348,   611,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   612,   360,   361,   362,   363,   364,   365,   366,
     613,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   614,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   615,   399,   400,   616,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   617,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   618,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   619,   462,   463,   464,   465,
    3429,   466,   620,   468,   469,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   710,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,  3430,   179,   180,   181,   182,   183,   601,     0,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,     0,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
    3431,   462,   463,   464,   465,     0,   466,   620,   468,   469,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,  2597,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  6093,     0,     0,     0,     0,     0,     0,  2598,
    6094,   808,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   710,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1932,   808,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   710,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2149,   808,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   710,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2612,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,  2597,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
    1729,  1730,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2598,  6094,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2059,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    35,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    42,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,  1729,  1730,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1385,     0,     0,     0,     0,     0,     0,
       0,   790,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,  1731,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1732,     0,     0,     0,     0,
       0,     0,     0,  1125,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,  1729,  1730,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1385,     0,     0,
       0,     0,  1386,     0,     0,   790,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,  1731,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,  2597,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2598,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1385,     0,     0,     0,     0,     0,     0,
       0,   790,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,  3148,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   790,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,    16,    17,
    5030,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4764,     0,     0,
       0,     0,     0,     0,     0,  4765,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4765,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   787,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     788,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   789,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   790,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   790,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4765,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,  3107,   466,   620,   468,   469,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2656,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   706,
     707,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3748,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3749,   676,  3750,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,  1662,   466,   620,   468,   469,
    1663,     0,     0,     0,     0,     0,     0,     0,     0,  3108,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,  1664,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,  1585,   466,   620,
     468,   469,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,  3124,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,  1729,  1730,
       0,     0,     0,     0,     0,     0,     0,     0,  4362,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
    4525,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,  1729,  1730,     0,     0,     0,     0,     0,     0,
       0,     0,  4923,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,  5240,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,  5424,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   808,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1920,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   710,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,  1729,  1730,
       0,  1921,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2160,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2161,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1036,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2162,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,  2164,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
    1729,  1730,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2160,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2161,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1036,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4345,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,  2164,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,  1729,  1730,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2160,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2161,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1036,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,  2164,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   675,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   676,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   808,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   710,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   676,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
    1729,  1730,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1775,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4561,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   710,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,   613,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5679,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,   600,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     619,   462,   463,   464,   465,     0,   466,   620,   468,   469,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,   600,   179,   180,   181,   182,   183,   601,
     185,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   719,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   619,   462,   463,   464,   465,     0,   466,   620,
     468,   469,  1729,  1730,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,   584,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,   586,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,   589,    88,   590,    90,    91,
      92,    93,    94,   591,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   592,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   593,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   595,   144,   145,   146,   147,
     596,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,   599,
     174,     0,   175,   176,   177,   600,   179,   180,   181,   182,
     183,   601,   185,   186,   602,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   605,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   606,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   607,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   608,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   610,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   612,   360,   361,   362,   363,   364,   365,   366,   613,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   614,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   617,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   619,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,   584,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,   585,     0,   586,   587,    77,    78,    79,    80,
      81,    82,   588,    84,    85,    86,    87,   589,    88,   590,
      90,    91,    92,    93,    94,   591,    95,    96,    97,     0,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     592,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     593,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   594,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   595,   144,   145,
     146,   147,   596,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   597,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     598,   599,   174,     0,   175,   176,   177,   600,   179,   180,
     181,   182,   183,   601,   185,   186,   602,   188,   189,   603,
       0,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   604,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   605,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   606,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     607,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   608,
     316,   609,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     610,   347,   348,   611,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   612,   360,   361,   362,   363,   364,   365,
     366,  2078,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   614,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   615,   399,   400,   616,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   617,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   618,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   619,   462,   463,   464,
     465,     0,   466,   620,   468,   469,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,   584,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,   585,     0,   586,   587,    77,    78,
      79,    80,    81,    82,   588,    84,    85,    86,    87,   589,
      88,   590,    90,    91,    92,    93,    94,   591,    95,    96,
      97,     0,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   592,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   593,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   594,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   595,
     144,   145,   146,   147,   596,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   597,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
    3512,   172,   598,   599,   174,     0,   175,   176,   177,   600,
     179,   180,   181,   182,   183,   601,   185,   186,   602,   188,
     189,   603,     0,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   604,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   605,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,  3513,   279,   280,   281,   282,   283,   284,   606,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   607,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   608,   316,   609,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   610,   347,   348,   611,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   612,   360,   361,   362,   363,
     364,   365,   366,   613,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   614,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   615,   399,   400,   616,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     617,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     618,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   619,   462,
     463,   464,   465,     0,   466,   620,   468,   469,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,    47,
      48,   584,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,   585,     0,   586,   587,
      77,    78,    79,    80,    81,    82,   588,    84,    85,    86,
      87,   589,    88,   590,    90,    91,    92,    93,    94,   591,
      95,    96,    97,     0,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   592,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   593,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   594,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   595,   144,   145,   146,   147,   596,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     597,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   598,   599,   174,     0,   175,   176,
     177,  3164,   179,   180,   181,   182,   183,   601,   185,   186,
     602,   188,   189,   603,     0,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   604,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   605,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     606,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   607,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   608,   316,   609,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   610,   347,   348,   611,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   612,   360,   361,
     362,   363,   364,   365,   366,   613,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   614,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   615,   399,   400,
     616,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   617,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   618,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
       0,   462,   463,   464,   465,     0,   466,   620,   468,   469,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   710,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,   584,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,   585,     0,
     586,   587,    77,    78,    79,    80,    81,    82,   588,    84,
      85,    86,    87,   589,    88,   590,    90,    91,    92,    93,
      94,   591,    95,    96,    97,     0,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   592,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   593,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   594,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   595,   144,   145,   146,   147,   596,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   597,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   598,   599,   174,     0,
     175,   176,   177,  3430,   179,   180,   181,   182,   183,   601,
       0,   186,   602,   188,   189,   603,     0,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     604,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     605,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   606,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   607,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   608,   316,   609,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   610,   347,   348,   611,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   612,
     360,   361,   362,   363,   364,   365,   366,   613,   368,   369,
     370,   371,   372,   373,   374,     0,   376,   377,   378,   614,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,     0,   394,   395,   396,   397,   615,
     399,   400,   616,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   617,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   618,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,  3431,   462,   463,   464,   465,     0,   466,   620,
     468,   469,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,    47,    48,     0,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
     585,     0,     0,   587,    77,    78,    79,    80,    81,    82,
     588,    84,    85,    86,    87,     0,    88,   590,    90,    91,
      92,    93,    94,     0,    95,    96,    97,     0,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,   114,   115,   116,   117,     0,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   594,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,     0,   144,   145,   146,   147,
       0,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   597,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   598,     0,
     174,     0,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   601,   185,   186,     0,   188,   189,   603,     0,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   604,   205,   206,   207,   208,   209,   210,   211,
     212,   213,     0,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,     0,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   609,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   347,
     348,   611,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   360,   361,   362,   363,   364,   365,   366,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   615,   399,   400,   616,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,     0,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   618,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,     0,
     466,   620,   468,   469,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1652,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,    47,    48,     0,    49,     0,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,     0,    65,    66,    67,    68,    69,    70,
      71,    72,     0,     0,     0,     0,    77,    78,    79,    80,
      81,     0,     0,    84,    85,    86,    87,     0,     0,     0,
      90,    91,    92,    93,    94,     0,    95,    96,    97,     0,
      99,     0,     0,     0,     0,     0,     0,   105,     0,   107,
       0,   109,   110,  1653,   112,   113,   114,   115,   116,   117,
       0,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,     0,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,     0,   144,   145,
     146,   147,     0,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,     0,     0,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
       0,     0,     0,     0,     0,   176,   177,  1654,   179,   180,
     181,   182,   183,     0,   185,   186,     0,   188,   189,     0,
       0,   191,     0,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,     0,   205,   206,   207,   208,   209,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      16,    17,     0,     0,   301,   302,     0,   304,   305,   306,
     307,     0,   309,   310,   311,   312,   313,   314,     0,     0,
       0,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,     0,   345,
       0,   347,   348,     0,   350,   351,     0,   353,   354,   355,
     356,   357,   358,     0,   360,   361,   362,   363,   364,   365,
     366,     0,   368,   369,   370,     0,   372,   373,   374,   375,
       0,   377,   378,     0,     0,   381,     0,     0,   384,   385,
     386,     0,   388,     0,   390,   391,   392,   393,     0,   394,
     395,   396,   397,     0,   399,   400,     0,   402,     0,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     425,   426,   427,   428,   429,   430,   431,   432,     0,   434,
     435,   436,     0,   438,   439,   440,   441,     0,     0,   444,
     445,     0,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,     0,     0,   463,   464,
       0,     0,   466,     0,   468,   469,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1671,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,    47,    48,     0,    49,     0,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,     0,
      65,    66,    67,    68,    69,    70,    71,    72,     0,     0,
       0,     0,    77,    78,    79,    80,    81,     0,     0,    84,
      85,    86,    87,     0,     0,     0,    90,    91,    92,    93,
      94,     0,    95,    96,    97,     0,    99,     0,     0,     0,
       0,     0,     0,   105,     0,   107,     0,   109,   110,  1653,
     112,   113,   114,   115,   116,   117,     0,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,     0,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,     0,   144,   145,   146,   147,     0,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,     0,     0,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,     0,     0,     0,     0,
       0,   176,   177,  1654,   179,   180,   181,   182,   183,     0,
     185,   186,     0,   188,   189,     0,     0,   191,     0,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
       0,   205,   206,   207,   208,   209,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    16,    17,     0,     0,
     301,   302,     0,   304,   305,   306,   307,     0,   309,   310,
     311,   312,   313,   314,     0,     0,     0,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,     0,   345,     0,   347,   348,     0,
     350,   351,     0,   353,   354,   355,   356,   357,   358,     0,
     360,   361,   362,   363,   364,   365,   366,     0,   368,   369,
     370,     0,   372,   373,   374,   375,     0,   377,   378,     0,
       0,   381,     0,     0,   384,   385,   386,     0,   388,     0,
     390,   391,   392,   393,     0,   394,   395,   396,   397,     0,
     399,   400,     0,   402,     0,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   425,   426,   427,   428,
     429,   430,   431,   432,     0,   434,   435,   436,     0,   438,
     439,   440,   441,     0,     0,   444,   445,     0,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,     0,     0,   463,   464,     0,     0,   466,     0,
     468,   469,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,    47,    48,     0,
      49,     0,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,     0,    65,    66,    67,    68,
      69,    70,    71,    72,     0,     0,     0,     0,    77,    78,
      79,    80,    81,     0,     0,    84,    85,    86,    87,     0,
       0,     0,    90,    91,    92,    93,    94,     0,    95,    96,
      97,     0,    99,     0,     0,     0,     0,     0,     0,   105,
       0,   107,     0,   109,   110,  1653,   112,   113,   114,   115,
     116,   117,     0,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,     0,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,     0,
     144,   145,   146,   147,     0,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,     0,     0,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,     0,     0,     0,     0,     0,   176,   177,  1654,
     179,   180,   181,   182,   183,     0,   185,   186,     0,   188,
     189,     0,     0,   191,     0,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,     0,   205,   206,   207,
     208,   209,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,     0,     0,     0,     0,   301,   302,     0,   304,
     305,   306,   307,     0,   309,   310,   311,   312,   313,   314,
       0,     0,     0,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
       0,   345,     0,   347,   348,     0,   350,   351,     0,   353,
     354,   355,   356,   357,   358,     0,   360,   361,   362,   363,
     364,   365,   366,     0,   368,   369,   370,     0,   372,   373,
     374,   375,     0,   377,   378,    16,    17,   381,     0,     0,
     384,   385,   386,     0,   388,     0,   390,   391,   392,   393,
       0,   394,   395,   396,   397,     0,   399,   400,     0,   402,
       0,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,     0,   425,   426,   427,   428,   429,   430,   431,   432,
       0,   434,   435,   436,     0,   438,   439,   440,   441,     0,
       0,   444,   445,     0,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,     0,     0,
     463,   464,     0,     0,   466,     0,   468,   469,     0,     0,
    5443,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,    47,    48,     0,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,   585,     0,     0,   587,     0,    78,     0,
       0,    81,    82,   588,    84,    85,    86,    87,   589,    88,
     590,    90,    91,    92,     0,     0,   591,    95,    96,    97,
       0,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   592,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   593,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,     0,   129,     0,   131,   594,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   595,   144,
     145,   146,   147,     0,   148,   149,   150,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   597,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
       0,   598,   599,   174,     0,   175,   176,   177,  5444,   179,
     180,     0,     0,   183,   601,   185,   186,   602,   188,   189,
     603,     0,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   604,   205,   206,   207,   208,
     209,   210,   211,     0,   213,   605,   214,   215,   216,   217,
     218,   219,     0,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,     0,     0,
       0,   269,   270,   271,   272,   273,     0,     0,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   606,   285,   286,
     287,   288,     0,     0,     0,   292,   293,   294,   295,   296,
     297,   607,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,     0,     0,   315,
     608,   316,   609,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,     0,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   610,   347,   348,   611,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   612,   360,   361,   362,     0,   364,
     365,   366,   613,   368,   369,   370,   371,   372,   373,     0,
     375,   376,   377,   378,   614,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   615,   399,   400,   616,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,     0,   423,
     424,     0,   426,   427,     0,   429,   430,   431,   432,   617,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   618,
     444,   445,   446,   447,   448,   449,     0,     0,   452,   453,
     454,   455,   456,   457,   458,   459,   460,  1554,   462,   463,
     464,   465,     0,   466,   620,   468
};

static const yytype_int16 yycheck[] =
{
       0,     0,   470,   692,   575,   861,    24,    75,   691,   692,
     583,   691,   573,   571,  1878,  1514,   684,     0,  1438,  1411,
       0,  1898,     0,  1825,  1411,  1514,     0,  2250,   758,  1891,
    2036,     0,   762,   763,  1711,     0,     0,     0,  2331,  1591,
     895,  2426,   958,     0,  1923,   773,  1409,  1223,  1224,  1225,
    1718,  1278,   803,  2341,  2317,  1185,  1232,     3,  3068,  3409,
    1570,  1635,  3664,  1510,  1929,     0,  1749,  1941,    34,  2934,
     718,  1518,   639,    76,  1939,  3155,   639,  3198,  3199,  2812,
     641,  1605,   643,   644,   645,   646,   647,  1534,   649,   650,
       0,  1444,   653,   654,  1531,  3664,  2065,  1544,  2318,   657,
    1727,  1385,   657,   735,   657,  1023,   738,  2870,  3698,  1444,
    3614,  1955,  1956,  1550,  1551,  1552,  3723,  1564,  1555,  3778,
     846,  1403,  3472,  2010,   691,  4065,  1257,  3458,   691,  3599,
     688,  2810,  1569,   688,  4104,   688,  3640,  3641,  3579,  3723,
    4072,  1891,  1344,  4619,  2423,  3809,  3723,  3723,  1279,     0,
    4631,  3723,  3723,   711,   860,   173,  2204,  4315,  2193,  2058,
    3140,  3214,  3603,   803,  2838,  3044,  4630,   725,    30,  3664,
    2277,  2976,  4770,  3044,  2899,  2900,  3530,  4070,     0,   740,
     741,  1864,  1865,  1866,  1867,  1868,  1869,  1870,  1871,  1872,
    1873,  1874,  1875,  1876,    11,   583,  2058,  2305,  3670,  2247,
    4191,  3705,  3706,   583,  2427,  1962,  2376,  4191,  2378,  2379,
    4191,   583,  2056,   583,  2091,  4192,   583,  4194,  2405,    11,
    4197,    11,  1979,   985,  1587,  1280,    28,    89,  2900,    11,
      26,  2976,  2968,  4203,    11,  1850,    61,     6,    50,  3044,
       6,  2909,  1857,  1858,  4255,  1860,  1861,  2004,  2005,    32,
    2957,   155,    61,  4230,  2138,    80,  1512,    94,     6,  1515,
      61,    80,     6,    80,  4642,  4775,  1522,   825,   179,     9,
      10,  1187,    61,  1513,  1514,     9,    10,  1517,    24,  1481,
    3034,  1537,   184,  1504,  1524,  1506,    12,  1508,    26,  1510,
    1530,    80,   859,  3712,   861,   104,   859,  1518,   861,  3044,
       6,   179,  3549,   104,  1525,   196,  1527,    10,  2058,   196,
     196,     9,    10,  1534,     9,    10,    11,     9,    10,    63,
      11,     9,    10,  1544,   196,   886,    83,  1548,   346,   196,
       9,    10,  1553,    61,    92,   125,   894,   898,   899,    65,
    2217,  1671,    61,  1564,  1565,  1566,  1567,  1568,   125,   238,
      11,     9,    10,   226,  3685,  1697,  1698,  1119,  1120,  1121,
      61,    80,   785,   120,  1706,   127,   196,    92,     9,    10,
     238,  1133,    86,    86,  3644,   119,   104,    61,   226,   267,
      80,   179,   155,   286,    17,   125,   104,   264,   378,  3114,
     104,   125,  5056,  5131,   365,   264,  1738,   173,  1740,    32,
    2693,   148,    94,   104,    17,  3640,  3641,  1513,  1514,    32,
      80,  1517,   301,  5602,  1756,  1757,  4738,  1759,  1524,    32,
     104,   223,  4609,   357,  1530,  1767,  1768,   125,  1514,  1771,
     125,  1517,    15,   125,   778,     9,    10,   125,  1524,   783,
      80,   785,  3114,   183,  1530,   185,   125,     9,    10,   183,
     217,   185,   113,  5361,     9,    10,  3375,   151,     9,    10,
     151,   784,   175,  5293,  1023,    11,   266,   125,   769,    35,
    3705,  3706,   355,   113,     9,    10,   220,  1607,   462,   271,
     179,  5668,   104,  3162,   125,   183,   145,   185,   183,   233,
     185,   183,    73,   185,  4996,   183,   637,   185,    80,  5520,
     238,  2794,  1632,   210,   183,   301,   185,    80,    76,  1068,
     380,    42,   573,   238,   104,   848,   210,   210,   104,   210,
       9,    10,   279,   824,    58,   183,   590,   185,   238,  2699,
    2700,  2701,  2702,  2107,   114,   210,   253,   519,   122,   283,
    5845,   124,   183,   715,   185,   328,   290,   621,   265,   179,
      57,   125,   286,    94,   537,  2432,   139,   301,   140,   892,
     470,   275,   275,   125,  3316,   305,  1125,   140,   238,   352,
     125,   305,   537,   179,   125,   104,   237,   179,  1304,   294,
     220,   296,    89,   124,   583,   116,   286,   170,  3938,   123,
     125,  4602,     9,    10,  3674,  4185,   127,   104,     9,    10,
     583,   675,   485,   134,   668,    12,   778,   305,   301,   183,
     305,   185,  4084,   305,   221,  3946,  5921,   305,   583,   565,
     204,   183,   568,   185,   285,   247,   305,   537,   183,  5650,
     185,   634,   183,   216,   185,   166,   125,   778,  1368,   639,
    1370,   148,  1274,  1373,  1374,  1375,  1376,   305,   183,   238,
     185,   266,   355,   360,  1122,   136,   656,  1385,    65,   639,
     293,   294,  2849,   195,   305,  1223,   325,  1225,   233,   176,
     670,  1229,  1230,   583,  2094,   145,   656,  4784,   212,  4992,
    2204,    92,   639,   667,    69,   746,    42,   656,   135,   136,
    5354,   691,   692,  3662,   183,   328,   185,   228,   698,   656,
      17,  1259,   296,   266,   639,  5892,  3458,  3629,   125,  5617,
     266,   691,   251,   346,   125,   328,   682,   299,   718,   352,
     582,   656,   498,  2247,   727,   290,   299,   661,   259,   352,
     298,   305,   735,   346,   691,   738,  1912,   607,  2925,   352,
     286,   238,   266,   305,   266,   378,   312,  1602,  5937,  5938,
     305,  4246,   233,  4764,   305,  1314,   691,  1933,   141,   113,
     116,  5591,    80,   113,   537,  1491,   183,  5597,   185,   276,
     305,   127,   183,   635,   185,   238,  1906,   238,   134,   164,
     770,   238,   485,  5521,   238,   585,   233,   448,   639,  2795,
     237,   230,  4979,   655,   561,  4984,  1926,   151,  1716,   770,
     495,   286,   238,  4307,   687,   656,    81,   669,   483,   290,
     166,   281,   715,   301,  1732,   395,   305,   639,   301,   696,
     301,    96,   286,  1953,   207,  4432,  2350,   696,  1959,  1469,
    1961,  4078,   694,  3712,   656,   301,  2710,  3562,   838,  3644,
    2193,  3712,  1973,   290,  2709,  1976,  2130,  1405,   230,  1980,
     727,   817,  1411,   853,   301,   173,   131,  2141,  2193,   859,
     185,   861,   773,   286,  1437,   754,   770,   230,  2288,   691,
     632,   773,   228,   853,   784,  2295,  2007,  2008,  2009,   859,
    3100,   861,  1608,  4990,   853,   773,   754,   778,   305,  4308,
    3562,   778,   778,   168,   305,   773,   853,   770,   770,  3644,
    4170,  3569,   859,   259,   861,  3573,  3642,  3712,  3615,  2957,
     636,   778,   264,   661,    17,  5745,  5746,  1385,   853,  5297,
     238,  5299,   770,   735,   859,  5247,   861,   893,  2976,    32,
     896,  1693,  1694,  3685,   680,   935,   773,   754,   734,   722,
     770,   887,   888,   889,   890,  2914,   946,  2002,   948,   949,
     950,   760,   777,  3707,   954,   661,   956,  5467,   777,   760,
     777,   709,   754,   963,   963,  1691,   946,  3712,   948,   949,
     950,   773,   754,  1891,   954,   773,   956,  3147,  2605,  2606,
     963,  3089,  3090,   963,   687,   985,  3034,   777,   777,   946,
     990,   948,   949,   950,   963,  1635,  3044,   954,   963,   956,
     777,   770,   853,  2259,   770,  2261,   963,  5471,   859,  5473,
     861,   724,   759,   760,   771,   773,   754,  1440,  2633,  2634,
    1020,  2636,  2637,  2907,  2908,  2281,   770,  2784,   963,   754,
    1030,   853,   760,   759,  3953,  2291,   776,   859,  5049,   773,
    5051,  2243,   760,  5054,  2284,  1603,   760,  2303,  1603,  1437,
    5061,  5062,   746,   963,   635,   746,  1704,  1437,   777,   760,
      63,     9,    10,   754,  2320,  1437,  2306,  1437,   778,  2309,
    1437,  2936,  4307,   771,   773,   773,   760,   777,   773,  2319,
    2410,   773,  1383,   771,  2260,   773,   669,  2417,  4981,   722,
    5101,   623,   771,   754,   773,   946,  1440,   948,   949,   950,
     770,  5603,  5604,   954,  3211,   956,  3213,   777,   778,   722,
    5940,  1434,   963,   771,   497,   773,   119,  1879,  3797,  1119,
    1120,  1121,  1122,  1122,   946,  1773,   948,   949,   950,  5120,
     771,  1859,   954,  1133,   956,    99,  5120,   777,   760,  5120,
    2058,   963,  1790,   773,  5121,  1793,  3333,  1795,  5461,  4071,
     684,  1799,  1800,  1801,     9,    10,  1907,  1716,  4760,  1807,
    4632,    61,     9,    10,   779,  2507,   773,   773,  2510,   749,
     760,   773,  1731,  1732,   760,   500,   770,   125,  2284,  4649,
     498,   771,  4652,   773,    36,   771,  2528,   773,  5295,   778,
    5788,  4760,     9,    10,  3946,   777,   735,  2539,  2284,   773,
    2306,  4551,   519,  2309,   777,   770,   676,   770,    57,   771,
      28,   773,  1122,  2319,   770,  1945,   771,   220,   773,  4188,
    2306,   121,   773,  2309,   574,   328,  1977,  5825,  5826,   636,
     233,   760,  3402,  2319,  4588,   183,  3123,   185,   773,    91,
      89,   773,   771,   346,   773,   776,   770,  4112,   770,   352,
    5261,    33,  1320,   264,   608,   104,   362,   754,  1726,  4124,
    3137,   266,   114,  2393,   771,  4760,  4770,  1907,   113,     6,
     125,  1274,   151,  1276,  5463,   378,   715,   129,   125,   264,
     283,   778,  2010,  1841,   773,   773,   771,   290,   773,   770,
     773,   754,  4695,   754,     9,    10,   233,   754,   301,   148,
     754,    37,    38,  4653,   264,     5,   151,   773,   125,   773,
    1310,   359,   695,  1313,   778,   778,   374,   778,   754,   438,
    1878,   778,  5333,   770,   778,  1884,  5337,   176,   183,   129,
     185,    31,  1891,   715,   266,  5933,   183,  1977,   185,   266,
     365,   377,   778,  1346,   696,   129,  3533,  2073,  5280,  2204,
     773,   203,   715,   290,   771,   778,   773,   305,  1916,  5269,
     771,  1916,  4036,  1916,   301,  4170,   183,   423,   185,  4094,
    4095,    10,   697,    73,    15,  4355,   761,   762,   763,   764,
    2110,  2111,  4435,   735,  2114,  4992,  1385,  5044,   362,  2119,
    2120,  2121,  2247,  4145,  4146,  4726,   350,  4149,  4150,   362,
    1366,  1367,  2130,  4155,  4156,   223,     9,    10,  4992,    60,
     125,  4742,  4743,  2141,  2142,  4992,  4992,   773,  2050,   237,
    4992,  4992,  4094,  4095,  2186,  4170,   390,   276,    32,  4308,
    4098,  4099,   492,  2957,  4186,  5593,   113,  4308,  1437,    32,
    2011,    34,  1442,    14,  2076,  5101,     9,    10,  3635,  5619,
     305,  1313,   770,   139,  1437,  4831,  4832,  4833,   305,   777,
     778,  5942,  1324,   468,  4197,  5941,    28,  2107,   183,    35,
     185,   171,  1437,   332,  3737,  1385,  3739,   438,  5489,   754,
     755,   756,  1482,   124,  3383,  1485,   302,   303,   305,   608,
     634,  3497,  3679,   210,  3681,  3682,   166,    92,   139,  2058,
    3687,  2059,  3537,  4308,   996,   997,   998,   417,  3695,   210,
    3034,   211,   646,  3700,  2197,  2868,  5180,  5267,   578,   371,
    3044,  3383,   125,    14,  1434,   404,    35,  1437,  3807,   170,
     171,  1477,    11,  2868,  5444,  2927,  5468,  2713,  2930,  2931,
    2716,  2099,  6006,  2930,  2931,  2251,  2117,  2118,  2106,    73,
    2108,  2106,  3417,  2780,  3237,  2685,  2686,  5497,  2734,  5499,
       9,    10,   125,  4308,  2232,  1057,   348,  3615,   282,    83,
    3144,   204,  6048,  3125,   680,   216,    49,   602,    92,  3444,
     183,   447,   185,   151,    92,    35,   465,  2505,   109,   110,
     305,  2149,   204,   307,    92,  2199,  3644,   561,  2202,  5069,
    4363,  4364,  4365,  4366,  2888,  2164,   120,   561,   285,   728,
    2894,   647,  5053,   299,  3971,  3972,  3973,  3974,   477,   722,
     183,   466,   185,    35,  4983,  2756,   140,   679,   365,  2760,
    3495,   145,   271,  3383,   778,  2361,  2362,   145,  5041,   571,
     651,   213,  2773,  2201,  1644,     6,   125,   608,  5580,  5581,
    1596,   170,   552,   585,   773,  2786,  2787,   705,   585,  3707,
     718,   223,   188,   463,  3712,   438,  5636,   526,  3470,  5326,
     184,   696,  5329,  5330,   344,   680,   125,  5333,   170,   463,
    1680,  3349,   738,  5342,   345,  5625,   711,   151,   339,  3372,
     294,   651,  4371,  1693,  1694,  2363,  5446,   433,   434,  1699,
     271,  3378,   305,  1703,  1704,  1705,   680,    68,   113,  5879,
    3467,   696,   772,   237,  1714,  1715,   498,   680,  5188,  2277,
    1720,  2401,  1722,  1723,  1724,  1725,  1726,  1726,  1728,   595,
       9,    10,  3359,  3360,   586,  3350,   696,  3352,    61,  1739,
     704,  1741,   305,   561,  1744,  1745,   312,  1747,  1748,  1749,
     735,  1751,  1752,  1753,  4834,  2313,   351,  5227,  1758,   352,
      35,  1761,  2430,   608,    35,   279,   483,   770,   678,  1769,
    1770,   448,  1772,  1773,  1774,   570,  1844,  1777,  1778,  1779,
    1780,  1781,  1782,  1783,  2986,  1785,  1786,  1787,  1788,  1789,
    1790,   565,  1792,  1793,  5170,  1795,  1796,  1797,  1798,  1799,
    1800,  1801,   463,   312,  1804,  1805,  1806,  1807,  1718,  1809,
    1810,  1811,   773,  1813,  4566,  1815,  1726,  1817,  5728,   452,
    5730,  1821,  1822,  1823,   252,   773,  1826,  1827,  1828,  1829,
    1830,   322,  1832,   770,  2401,   608,   404,  5494,  2401,  1839,
     452,    63,   694,   438,    63,   440,   125,  1847,  1848,  1849,
    1850,    92,   373,   351,  5461,  1838,   305,  1857,  1858,  2426,
    1860,  1861,   312,  2426,  1864,  1865,  1866,  1867,  1868,  1869,
    1870,  1871,  1872,  1873,  1874,  1875,  1876,  5461,  3765,  1879,
     285,  3163,  3565,  5214,  5461,  5461,  1889,   413,  2804,  5461,
    5461,   396,  3068,   398,    10,   173,  3773,   119,   570,    15,
     312,     9,    10,   114,   183,   424,   185,  2635,    61,     9,
      10,   611,  5271,   575,   773,   379,   771,   451,   773,     9,
      10,   564,   771,  3767,  1924,   626,   773,   355,  1838,  1929,
       9,    10,   424,     9,    10,   530,   565,     9,    10,  1939,
     438,   111,   440,     9,    10,   659,  2505,  2506,   145,     9,
      10,   652,   565,   459,   771,   728,   773,   773,  1450,   583,
       6,  4694,  4695,   737,  5434,     9,    10,   488,   291,   292,
     280,   324,    61,  4700,  4726,   391,   409,  1980,   773,  5919,
    5920,    33,   477,   416,   645,  2544,   264,  4852,   109,   110,
    4742,  4743,   498,    99,   467,  4182,  4183,  4184,   220,   773,
    1946,  1947,  3132,  1949,  1950,  1951,  2006,   191,   124,  4015,
    5352,   233,   573,   608,  1960,   744,   251,   125,     9,    10,
     204,   127,    68,   139,   565,   125,   305,  3704,   669,  1975,
      63,  4758,   530,   203,  2034,   125,  2036,   312,  2597,    91,
      49,   312,   770,   448,  4013,  4910,   125,  2050,   582,   125,
     778,  2731,  2611,   125,   170,   171,   771,   485,   773,   125,
     301,   283,   332,   373,   283,   125,  4829,   390,   290,   564,
    2070,  5151,  5447,  2076,  5544,   183,  2992,   185,   184,   301,
     264,   125,    15,   183,   281,   185,   119,  4274,  4275,   163,
    4277,  3615,  2663,   183,   737,   185,    83,     9,    10,   452,
     216,   773,  2957,  3466,   183,   578,   185,   183,   737,   185,
     608,   183,   585,   185,  3979,  3980,   778,   183,   532,   185,
     593,  2847,  4170,   183,   737,   185,   660,     9,    10,  3994,
      61,   559,  2800,   120,   125,   209,   139,  2695,   373,   183,
    2695,   185,  2695,   466,   773,   561,   770,  2706,   654,   238,
    2880,   203,  3515,  2883,   501,  2155,  4379,  2887,  4515,  4516,
    2888,  2629,  5504,  3965,  2731,   286,  2894,   191,  2731,  2115,
     773,   449,  5762,  5763,     9,    10,   486,   251,   773,  3034,
     204,  2909,   191,  3707,  3537,   746,  2186,   682,  3712,  3044,
      18,   124,   183,   666,   185,   204,   737,   305,   545,  2831,
     705,  3593,  3537,   708,  2207,   305,   139,   477,  5583,    86,
     773,     9,    10,   125,  3766,   305,  3790,  3791,  3792,  3793,
     498,   186,  3138,   376,  3723,   378,   305,   251,   280,   305,
    5882,    98,  2915,   305,  3723,  3411,  3412,   322,   420,   305,
       9,    10,   737,   125,   175,   305,   642,   663,  2806,   273,
     283,  5721,   373,   113,   727,   264,   526,   771,  3434,   687,
    4308,   305,   415,   266,   273,   191,  4453,    18,   452,   411,
    3400,   183,  5005,   185,  5007,    12,   104,   105,   204,  2838,
     715,  2840,   447,   216,  5788,  3569,  3416,   701,  4475,  3573,
     125,   444,   279,   170,   171,   477,   299,    96,   175,   373,
     614,   183,   446,   185,  2304,   719,    94,   587,  5041,   760,
    3925,   385,  3927,  3823,   305,   329,     9,    10,  3738,   747,
     771,  5825,  5826,  5050,  2304,  2325,  2326,   125,    65,  5931,
     590,   519,   131,   680,   122,  2304,     9,    10,   264,  5066,
    2980,     9,    10,   778,     9,    10,  5426,  2304,   183,   314,
     185,   148,    79,   104,   105,    82,   125,  5222,   443,  2917,
     220,  5930,  5720,     9,    10,  5723,   450,   488,  2927,  2304,
     596,  2930,  2931,  2932,   770,  3822,  3768,   640,  5105,   176,
    5107,  3768,   564,  3820,  3821,   183,    57,   185,  5121,   531,
       9,    10,  3829,   305,  3831,  3123,  3833,     6,   275,     0,
     484,  2401,   426,   683,  6056,  6057,   720,  3770,   668,  2409,
     109,   110,    24,   427,   183,   489,   185,   426,   696,   607,
      80,  2401,  5543,   305,    24,   339,  2426,   580,  2428,  5933,
     595,  2431,   125,  2433,   697,   142,   403,   700,   266,  4318,
     403,  2441,  2442,   452,  2401,   596,  2426,  5632,  2428,   680,
     594,   117,   125,  2304,   181,  1154,   736,   125,   124,  2428,
     125,    57,  5214,   616,   727,  3383,  2401,     9,    10,  2426,
     305,  2428,   735,   661,   443,  5660,   560,   148,   754,   125,
     519,  5839,  2304,  1182,   566,   567,  2469,   561,  5846,   638,
     183,  2426,   185,  2428,   773,     9,    10,    57,  5250,   111,
     682,   732,   651,   417,  3144,   176,   125,   305,     9,    10,
     183,   111,   185,   480,   754,   266,  5817,   480,   183,  5820,
     185,   490,   229,   189,     6,     6,   452,  4714,  5393,    89,
    2530,  2531,  2532,  4720,  4721,  4722,   305,   183,   265,   185,
    4727,  4728,   403,  4549,   104,  4808,  4733,  4553,   770,  4812,
    2401,  4814,   148,   669,  4741,   737,    99,   641,  4745,  2469,
    3476,   643,     9,    10,   183,  4752,   185,  3215,   607,  4756,
    4757,  3129,  6035,  3131,  3129,  2426,  3129,  2428,  3226,  2401,
     176,   207,  4845,   125,  4847,  4848,    68,    68,   148,   148,
     121,   773,   561,  4813,   715,  4815,     9,    10,  6061,  5957,
    5958,  3822,   301,   229,  2426,   276,  2428,  3828,  2608,   140,
       6,   125,   305,  3834,     9,    10,   176,   176,     9,    10,
    1463,  1464,   661,     6,   125,   170,   171,     9,    10,  2629,
    2629,   390,   305,  2633,  2634,  3283,  2636,  2637,   770,   111,
     305,   183,   651,   185,   443,  2645,   778,  2647,   407,  5955,
    3401,  4939,    92,  3211,  1497,  3213,   523,   524,   155,   305,
     527,   528,   529,  3343,  4538,   773,  3314,  5969,  5970,   183,
      93,   185,    68,   773,   373,  2675,  5977,    93,   125,   238,
     276,   678,   183,   773,   185,    68,   305,   114,   111,  2689,
     687,   490,     9,    10,   773,   111,   693,   773,     9,    10,
     140,   773,   129,     9,    10,   145,  2706,   773,  6014,  2709,
      33,  6017,   125,   773,  1527,    38,   276,  3365,   727,  2629,
      17,     9,    10,   754,     9,    10,   735,  6029,  2731,   773,
     125,  2731,  2732,   342,   125,    32,   183,   778,   185,     9,
      10,  4752,   301,   125,   184,  4547,  4757,    76,  6054,    78,
    2753,  2731,  1565,  1566,  2754,   554,   760,   298,  2761,   266,
    3615,  3401,   760,   305,  6114,  3448,   220,   771,  3448,   773,
     183,    99,   185,   771,  4401,  4402,  3343,   386,  4005,   388,
    3343,  2691,   773,    99,  4308,  5795,  4360,  4464,   183,   488,
     185,   305,   183,    26,   185,  2795,  2731,  2743,   122,   598,
      28,   183,  4429,   185,   305,    33,  2772,  3366,   125,  2755,
      38,     9,    10,     6,   125,   151,   506,   507,    11,   125,
     501,  4048,    15,   729,  3383,  3955,  4503,  4454,  2831,     9,
      10,   521,   237,    57,  2834,  3751,  4012,   125,     9,    10,
     125,  3569,  2845,   330,   771,  3573,   773,   724,     9,    10,
     347,  4314,  3707,  4316,   770,   125,   705,  3712,   305,   778,
     709,   773,    57,  4326,  4327,    89,   183,  3723,   185,    10,
      57,  4498,   183,   482,   185,     9,    10,   183,  4009,   185,
    2731,  3448,     9,    10,    42,  3448,  1419,  3355,  4556,  1422,
    1423,   773,   305,   286,    89,   183,   393,   185,   183,  1335,
     185,    94,    89,  3474,   407,  1341,  1342,   737,   332,  2731,
     305,  4713,    10,   183,   305,   185,   771,    15,   773,   111,
    2920,  4927,   531,   305,   148,    92,    93,   125,  4470,   619,
     620,  2877,  4474,  2879,  2934,   771,  2936,   773,   773,  2885,
    2886,  2944,   771,  4432,   773,   125,  5209,    94,  2951,  2952,
     759,   760,   176,   148,   125,   754,   755,   756,   116,     9,
      10,   148,   745,   746,   125,   748,  5153,   750,  5155,   127,
    5157,   580,     9,    10,   662,   773,   134,   662,   475,  4342,
     771,   176,   773,     9,    10,   183,   264,   185,   305,   176,
    2990,   125,   449,   771,   305,   773,     9,    10,   125,   305,
      94,     9,    10,   183,   773,   185,     9,    10,   166,   771,
       9,    10,   183,   777,   185,     9,    10,   305,   655,  1031,
     305,  3579,   183,   299,   185,   116,   124,   114,   771,  3600,
     773,     9,    10,  5220,  3593,   305,   127,  3765,  3106,  1051,
     537,   139,  5229,   134,  3602,  3603,  1058,  1059,   114,   183,
      57,   185,   276,   477,   114,   771,   183,   773,   185,   556,
     557,   670,    92,    93,   561,   562,   563,   778,  4933,  4934,
     228,   726,   170,   171,   771,   125,   773,   771,    84,   773,
     773,   276,    89,   692,  4260,   771,   264,   773,   125,   276,
     735,  4312,  4313,  4314,  3652,  4316,   771,   104,   773,   125,
     773,   259,   526,  4324,  4325,  4326,  4327,   305,   773,  4145,
    4146,   650,   125,  4149,  4150,  4783,   426,   125,   216,  4155,
    4156,   771,   125,   773,  4926,   305,   125,   773,   770,   338,
     339,   125,   629,   183,   305,   185,   251,   228,  1627,  1628,
     564,   148,  1631,   771,   305,   773,   183,   125,   185,    76,
    3790,  3791,  3792,  3793,   773,   271,  3723,   183,     5,   185,
    3723,   771,   777,   773,  4324,  4325,   375,  4388,   259,   176,
     183,   305,   185,   777,   771,   183,   773,   185,   305,   461,
     183,   678,   185,   773,   183,  4548,   185,    94,   771,   183,
     773,   185,   771,   111,   773,   754,   682,  3197,  3198,  3199,
     759,   760,   771,  3203,   773,   183,  3206,   185,   417,  3768,
     771,   600,   773,  5598,   771,  3215,   773,  3197,  3198,  3199,
    3971,  3972,  3973,  3974,  3224,   771,  3226,   773,  3228,   771,
    3230,  3231,  3232,  3233,  3234,  3235,   640,  3237,     9,    10,
    3197,  3198,  3199,   109,   110,  3245,  3156,  3247,   770,  5542,
    3250,  3251,  3252,  3253,   466,   305,  3256,  3257,   682,   773,
    3260,   771,  3262,   773,  3264,   577,  3266,  4819,   305,   276,
    3270,   771,   773,   773,   271,  3923,  1818,  1819,  3278,   305,
    3280,   696,  3282,  3283,  3284,  3285,  3286,   179,   179,  3289,
    3290,  3291,   305,  3293,   523,   524,  3296,   305,   527,   528,
     529,   771,   305,   773,   773,   771,   305,   773,   417,  3309,
    4061,   305,   113,   737,  3314,   347,   777,  3317,  4545,  3319,
    3320,  3321,   399,   771,  3324,   773,   773,   305,   770,   770,
    3330,  3971,  3972,  3973,  3974,  3335,   196,   771,  4514,   773,
    3343,   770,  3901,  3343,  3344,   770,  3197,  3198,  3199,   771,
    3350,   773,  3352,   770,   125,  3355,  3355,    34,  4534,  4535,
     773,   770,   770,  3343,  5226,  3365,   165,  3367,     3,  3940,
    4098,  4099,  3372,     9,    10,  3197,  3198,  3199,   773,   729,
       9,    10,   773,     9,    10,   190,   771,   596,   773,   771,
     770,  3390,   469,    28,   504,   770,   506,   507,    33,   771,
     771,   773,   773,    38,   613,    69,    41,   770,  3343,   417,
    5087,   521,   183,   770,   185,  3415,  3415,  3417,   770,  3978,
    4867,  4061,     9,    10,    69,   771,   770,   773,   373,   638,
       9,    10,  3415,  4853,   729,  3415,  4873,  3415,   770,  3349,
    4877,  3415,     9,    10,  3444,  3355,  3415,  5257,  3448,   770,
    3415,  3415,  3415,  4308,   771,   770,  5335,   534,  3415,   536,
     771,   770,   770,    98,   541,   771,   770,   770,  3448,   678,
     373,     9,    10,   190,   770,  3475,   770,  4036,     9,    10,
    3415,   129,   190,   771,  5167,  3395,   771,   190,   771,   125,
     773,  3448,  3343,  4992,   742,  3495,   125,  3497,  2269,   125,
     164,   771,   770,  4992,  4075,  3415,   770,   770,  5731,   619,
     620,   770,  5139,  3448,   770,   770,  2287,   420,   182,   164,
     770,  3343,   170,   171,   770,  2296,   161,     9,    10,   606,
     770,  2302,   477,   770,   305,     9,    10,   182,   125,  2310,
     770,     9,    10,  5345,   770,  5407,   125,   183,   770,   185,
    2321,   770,   770,  2324,   183,   203,   185,   183,   125,   185,
     771,   771,   773,   773,  3415,  3565,   771,   771,   773,   773,
     770,   669,   649,   771,   477,   239,   240,   266,     9,    10,
     770,     9,    10,   771,   770,   773,  3586,   125,   770,   770,
     332,   771,   196,  3415,   125,   771,   183,   773,   185,   771,
     771,   773,   196,   771,   183,   773,   185,  3553,   778,   771,
     771,   773,   754,   558,  3614,   771,   183,   773,   185,   564,
     770,   770,  5432,     9,    10,   771,  3448,   773,  3631,  3632,
    3633,  3634,   280,  3636,  3637,   773,   771,   771,   773,   770,
    3640,  3641,   770,   125,   771,   183,  4867,   185,   771,   770,
     773,   125,   183,   770,   185,   558,    69,   125,   770,     9,
      10,   564,   739,   770,  3664,     9,    10,   770,   770,   305,
     615,     9,    10,   750,   770,  3675,   305,   770,   420,   305,
    3683,  3684,   317,  3686,   770,  3688,  3689,  3690,  3691,  3692,
    3693,  3694,   770,  3696,   125,  5572,  3699,   125,   770,  5576,
    3703,   183,   771,   185,   773,  3705,  3706,   770,    69,   183,
     122,   185,   615,  4381,   770,   183,     6,   185,   305,   770,
    4360,   771,   770,  3723,  5947,   373,   305,   771,   770,   773,
       9,    10,   367,   577,   771,   477,  5419,   682,   305,   125,
     179,  5928,  3742,  3723,   771,   771,   773,   770,     9,    10,
     770,   164,   183,   770,   185,   183,   770,   185,   771,   771,
     770,   773,  3742,  4411,  4515,  4516,  3723,   305,   771,   182,
       9,    10,   771,  3742,   305,   125,   721,   771,    68,   682,
     771,   125,   773,   770,   526,  3742,   770,   125,  3723,   771,
     770,   773,   737,   771,   771,  5659,   773,   183,   770,   185,
    5192,   770,   770,   164,  3804,  5192,   771,  3742,   773,  3809,
       9,    10,   771,   771,   773,   773,  3816,   770,   721,  3819,
     770,   182,   564,   305,   770,    94,   239,   240,   770,  3809,
    5692,   305,   770,   183,   737,   185,  4484,   305,   486,   183,
     770,   185,  5719,  3843,  3844,   183,   125,   185,   771,   770,
     773,  4697,  3809,  4699,  4537,  5538,  4702,  4537,   271,  4705,
       9,    10,  4708,  4709,   125,   179,   771,  3867,   773,  3869,
     773,  3871,  3723,  3873,   305,  4515,  4516,   305,   239,   240,
     770,     9,    10,  5685,  5304,  5305,   125,  5307,   770,   770,
    5896,  3742,   527,   778,   771,  3895,   773,   771,  4744,   773,
     770,     9,    10,   770,   183,   946,   185,   948,   949,   950,
     237,     9,    10,   954,   770,   956,  3916,  3917,   770,   305,
    3742,   770,   183,  3923,   185,  3925,   125,  3927,  4844,   564,
     565,   770,  3932,   568,     9,    10,   571,   572,   770,   770,
     682,  5618,   770,   770,   183,  3945,   185,   770,  5758,   770,
    5760,  5761,   770,   770,  4684,   305,   778,   662,  3809,   249,
     250,   305,  5461,  4693,   778,   778,   778,   305,   778,   259,
    4537,   778,  5461,  3976,  4537,   778,   125,   770,   778,  3979,
    3980,  3964,   778,   778,   183,   680,   185,  3809,   425,   140,
     280,    92,   680,   668,  3994,   737,    34,   125,   696,   501,
     771,   419,    92,   638,     9,    10,   773,   773,   773,     9,
      10,   575,   347,     9,    10,  4015,   651,   125,  4701,   773,
      92,   381,   657,    61,   773,  5702,   305,   125,   773,   572,
     691,   773,     9,    10,   183,   754,   185,    80,   735,    93,
     773,  4612,   452,   452,   305,   195,   681,   266,    99,   283,
     125,   124,    26,   688,  3964,   183,   691,   185,   238,  5869,
    5870,   395,  5482,  5873,  5484,  5485,   305,    61,   703,  4069,
    4070,   109,   110,  4076,     5,   183,   711,   185,   779,   576,
       4,   394,   735,   339,  4655,   183,   417,   185,   770,   724,
     725,   129,   777,  5895,   758,   759,   760,   761,   762,   763,
     764,   777,  4102,   770,   378,   770,   305,  6113,   183,   202,
     185,  4669,  4112,   770,   759,   760,   761,   762,   763,   764,
     125,    69,   757,   770,  4124,   125,  4126,   196,   778,   125,
      34,   770,   170,   171,    92,   771,  4082,   175,   773,    92,
      14,   179,   771,  4704,  5954,   771,    92,   778,   125,   773,
    5827,     9,    10,  5545,  5546,   790,   305,    84,  5545,  5546,
     778,   420,   150,   798,   124,   203,   696,   770,   803,   771,
     805,   111,   470,   150,   498,   465,   124,   305,   183,  4737,
     185,    67,   298,   183,   771,   185,   554,   183,    94,   185,
     825,   240,   771,  4261,   122,     9,    10,   305,   298,   770,
     835,   150,    33,   777,   771,    36,   183,   305,   185,  5055,
     773,   846,   770,   848,     6,   417,   164,   771,     9,    10,
    5903,   771,   771,    68,   323,    53,    54,    55,    56,   773,
     305,   778,   125,   771,   182,   332,    94,   771,   771,   771,
     771,   641,   280,  4816,    92,    92,  4246,   882,   771,   884,
       9,    10,   887,   888,   889,   890,   891,   892,   778,   894,
      91,    32,   771,   771,    95,   778,   304,   125,   139,   770,
    4338,   770,    99,   773,   271,  5131,   373,   163,   106,   107,
     108,   773,  6084,   114,   170,   171,   773,    58,    92,   771,
    5967,   239,   240,   778,   761,   333,  6098,   771,   129,    70,
     305,   114,  6104,   771,   773,   305,   680,  4307,  6110,   305,
     945,   125,   947,  5043,   773,   761,  5046,  5047,   124,    90,
     955,   481,   957,   209,   693,   183,   441,   185,   305,    92,
     773,   425,   160,   161,   125,   373,   771,   972,   680,   773,
     771,   770,   439,   771,   757,   758,   759,   760,   761,   762,
     763,   764,   123,   770,  4354,   417,  6039,   109,   110,     9,
      10,    11,   124,   779,   195,   251,   125,   773,   238,   183,
     195,   185,   203,  4932,   350,   217,   501,   129,   501,   501,
     477,   671,   672,   673,   674,   771,   347,   501,   501,   501,
     773,   773,   183,    84,   185,   754,   757,   758,   759,   760,
     761,   762,   763,   764,   232,  4963,   668,   271,  4408,  4409,
       6,  4411,   665,   244,   588,   735,   771,   771,   170,   171,
    4420,   771,  4422,   771,   183,  4425,   185,   771,   771,   526,
     771,   127,   127,   771,   187,    26,   773,   770,  4438,   778,
    4440,   212,  4442,   103,  4444,   429,   229,   305,   486,   280,
     778,   203,   657,   267,   408,  2357,   471,  4457,  4458,   770,
     471,   558,    29,   773,   771,   773,   587,   564,    29,   298,
       5,    38,     7,     8,   726,   125,   285,   770,   306,    17,
     378,  5657,   214,   176,  4484,    83,   296,   373,  4491,  1124,
     773,   305,   771,    60,    92,  5053,    31,   296,    33,   385,
     695,   200,   184,   179,    39,    94,   773,   298,   267,   773,
     771,   282,   636,   271,   305,   115,   122,   771,  4521,   761,
      87,   771,   120,    36,    17,    92,    61,   771,   280,   417,
      97,   642,   771,   183,   771,   185,   771,  4537,    73,    32,
     371,   771,   140,   771,   111,    80,   305,   145,    94,  4549,
    1185,  1186,   304,  4553,   760,   770,   773,  4537,   771,   126,
     373,   771,   771,   771,  5131,    58,   133,   380,  5131,   773,
     771,   399,   771,   771,   109,   110,   773,    70,    91,   114,
    4537,  1216,   395,   150,  4587,   682,   184,   771,  1223,   771,
    1225,   778,   771,  5323,  1229,  1230,   771,    90,   771,   771,
     771,   114,  4537,   489,   773,  5461,   773,   420,   175,  4609,
     145,   238,  5528,   771,   770,   653,   129,   770,   170,  5795,
     764,   373,   771,   770,  1259,   396,   195,   398,   121,   770,
     123,   771,  5808,  5192,   365,   754,   583,   266,   266,   271,
     737,   469,   266,   771,    98,   180,  4556,    94,    92,   184,
      92,   495,   219,   773,   771,   305,  6076,   192,   225,   226,
     195,  1296,  1297,   771,  4667,   770,  5842,   773,  1303,  1304,
    1305,   773,   239,   771,   770,   561,    94,   607,   773,   237,
    4698,   279,   195,   218,    62,   771,  1321,   778,   773,   778,
     203,   778,   773,     6,  4712,  1330,   771,   662,   725,   773,
    5267,    92,   773,   569,  5267,   743,   534,   127,   536,  1344,
    1345,  4729,   525,   541,   127,  4537,   741,   429,   539,   254,
     255,   256,   770,     9,    10,   538,   549,  4730,  4731,  4747,
    1365,  4749,  4750,   300,   486,   251,   251,    69,   650,   251,
     251,   251,   301,  4746,   279,   558,   179,   770,    92,   267,
    1385,  1386,     9,    10,   773,   586,   754,   726,   500,   754,
    4760,   754,   754,   754,   754,   754,   771,  4770,   754,   304,
    1405,   771,   339,  4773,  4774,   771,   754,   125,   606,   550,
     551,   754,   754,   754,   754,  1420,   754,   754,   754,   282,
     325,   754,   754,   360,   417,   754,    49,   754,   333,   754,
     335,   294,   754,  1438,  1439,   307,   282,   771,    94,   757,
     758,   759,   760,   761,   762,   763,   764,  4816,   754,   354,
     754,   649,   778,   773,   286,  1460,   361,   771,   771,   771,
    4776,   754,   164,  4816,  1469,  1470,   569,   140,   373,   125,
       9,    10,  1477,  1478,   271,   380,  1481,   773,   770,   778,
     182,   320,  4852,   778,     9,    10,  1491,   778,   371,   271,
     395,   114,   271,   694,     9,    10,   271,   434,   125,   682,
     405,   773,   498,  4783,   409,   410,   379,  4945,  5567,  5446,
     122,   416,   771,  5446,   697,   420,   746,   417,   121,   121,
     771,   778,   771,   428,  5461,  5466,   771,   183,  5461,   185,
     190,   778,   771,   396,  5632,   398,  4816,   239,   240,   771,
    4910,   739,    26,   448,   760,   778,   771,  4985,   771,   760,
     689,    49,   750,   773,   325,    94,   183,  4927,   185,   271,
     770,  6107,  5660,  4933,  4934,   770,   301,   708,   191,   474,
     577,    94,    57,   478,    94,  1580,    94,    94,  1583,    94,
    1585,   204,   778,   488,   266,   266,   125,   483,   210,  4959,
    1595,  1596,  5030,   778,     9,    10,    11,  5035,  1603,   176,
     125,   773,  1607,  1608,    89,   760,    11,    49,   312,  4979,
     125,  4981,   777,   770,   754,   773,  5545,  5546,   754,   104,
     525,   743,  4995,   535,   109,   110,   320,  1632,    91,  4999,
    1635,  5001,   179,   538,    15,   540,   179,    18,   575,    10,
     267,   271,   773,   395,   183,  5033,   185,   127,   127,   305,
     273,   771,   395,    95,   318,   266,  5715,  1662,   183,   266,
     185,  5598,   266,   148,    11,  5598,  2938,  2939,   183,   218,
     185,    11,   114,   770,   579,   770,    57,   770,   305,    99,
     585,   176,   176,  2955,   450,   761,  1691,    34,   551,   778,
    5063,   176,   224,  2965,  2966,   150,  5794,    72,   577,   271,
       9,    10,    11,   586,   761,    86,   204,   612,    89,   179,
     125,   113,   150,   339,    61,    56,   123,  5090,   623,   624,
     625,   771,   123,   104,   105,   176,   771,   771,   771,   778,
     770,  5659,   773,   771,   773,   184,   778,   771,   771,   644,
      26,   770,   754,   770,   219,   771,   651,   778,   773,    94,
      94,   210,    69,   251,   771,   771,  5809,  3029,  3030,  3031,
    3032,  5131,   109,   110,   773,   771,   305,   148,   183,   773,
     185,  5144,   150,   210,   298,   770,   546,   682,   770,   770,
     305,  5131,   129,   754,   773,   682,   167,   682,   725,  1794,
     305,   276,   697,   698,   175,   176,   659,  5167,  1803,   395,
     179,   770,   244,   426,  5131,   710,   770,   124,   713,  1814,
    5180,   694,   286,  5166,    42,  6101,   125,   286,    11,   773,
    1825,   365,   264,   170,   171,  5195,  5131,   325,   175,   452,
    5180,   771,   179,   266,   185,   773,  1841,   371,   280,   585,
     195,   195,   271,   408,    26,   708,   195,   164,   408,  5287,
     128,   128,  5222,  5180,   697,   733,   203,   195,   195,   697,
     195,   584,   195,   195,   195,   182,    11,   271,   731,   771,
     429,   229,   777,  1878,   183,  1880,   185,   500,   771,    98,
     493,   414,   771,   325,    26,   266,  5166,   235,   116,   301,
     305,   332,   636,   184,   275,   276,   277,  5267,  1903,   127,
    5828,  1906,  1907,   771,   771,   403,   134,   495,   773,    26,
    5131,  1916,  1917,   771,   771,   141,   195,  5267,   773,   771,
     773,  1926,   239,   240,   771,   773,  5764,   437,   426,   145,
     770,   139,   373,   280,   745,  1940,  1941,   195,   166,   179,
    5267,  1946,  1947,  1948,  1949,  1950,  1951,  1952,  1953,  1954,
      11,   179,  5322,   771,   452,  1960,   286,   304,   668,  5180,
     286,   403,  5267,   142,   770,   176,   176,   111,   436,  1974,
    1975,   733,  1977,   596,   129,   733,   203,   215,   778,   420,
     597,   527,  6041,   179,    29,   349,   333,   179,  5180,   373,
    5918,   267,   356,    38,  1999,   476,   305,   230,   439,    94,
     228,   429,   500,   577,   301,  2010,   122,  5948,   372,   390,
     140,   417,   771,   489,   637,    60,   771,   398,   382,   383,
     384,   607,   123,  5393,    32,   539,   373,    26,   392,   771,
     771,   259,   655,   773,   677,    42,   477,   771,   771,   778,
     771,   773,    87,    10,   770,   770,  5267,    92,   647,  5419,
     771,   771,    97,    11,  2059,   770,  5984,   759,   760,   761,
     762,   763,   764,   770,    26,    26,   111,    79,  2073,    26,
      17,   770,   770,  2078,   697,    92,  5446,   700,   770,   129,
     129,   126,  5520,    92,   773,   526,  5524,   129,   133,   301,
     770,  5461,   771,   377,  2099,   773,  5446,   661,   412,   301,
     129,  2106,  2107,  2108,   727,   150,   264,   454,  2113,   116,
    2115,  5461,   735,   150,   773,   539,   771,   558,   771,  5446,
     127,   771,  5510,   564,   435,  2130,   770,   134,   409,   576,
     175,   770,    11,   771,  5461,   417,  2141,  2142,   771,   486,
      67,  5446,   773,   179,  2149,   226,   226,    92,   773,    26,
    5520,    26,    26,   651,  5524,   266,  5461,   655,   176,   166,
    6088,  5441,   109,   110,    84,    84,  6094,   286,  5538,   533,
    6111,   264,   179,  5543,   219,   770,    33,   778,   724,   577,
     225,   226,   771,   547,   778,   283,   771,   595,   642,   430,
     770,   353,   595,  5543,   239,   637,  2201,   770,   777,   697,
     770,   770,   777,   189,   771,   399,   777,   773,    61,   651,
      61,   153,  5650,   655,   771,   677,  5543,   577,  2223,    33,
      33,   228,   196,    10,   688,  5446,   771,   773,  5598,   727,
    5668,   703,   176,   304,    26,   770,    26,   735,  2243,   770,
    5461,   682,    33,   770,   770,    36,   122,   179,  5598,   770,
     694,   129,   259,   175,   326,   300,   733,   129,   700,   283,
      61,    11,  5632,   715,   418,   577,   642,   577,   770,   633,
     408,  5598,  2277,  5646,   408,   771,   349,   770,   777,   286,
    5650,   420,   773,   356,   648,   727,   172,   777,   771,   230,
    5660,   773,   770,  5598,   339,   729,   737,   770,  5668,   372,
      91,   689,  5672,   770,    95,   252,   653,  2312,  2313,   382,
     383,   384,   770,   770,   581,   360,   339,   417,    92,   392,
     770,   685,  5543,   114,   705,   412,   771,   708,   771,   145,
     770,   770,   773,   325,   226,   699,   717,  2342,   129,  2344,
     771,   319,   179,   179,  2349,  3617,  3618,   229,  3620,  3621,
    5720,  5543,   773,  5723,   771,   196,  2361,  2362,   283,  5797,
      63,   771,   471,  2368,   417,   715,    75,    26,   642,   113,
    2375,  2376,   771,  2378,  2379,   770,   176,  5598,   237,   773,
     963,  3415,  2820,  3701,  5157,  5153,  5155,  5446,  2393,   434,
    5443,  2396,  1276,  5444,  5764,  5764,   743,  3546,  5455,   945,
    5446,  2406,  4166,    42,  5285,    32,  5598,    34,  2413,  5570,
    5600,  5743,   203,  5949,   771,  5788,  4078,  2422,  1455,  3547,
    2425,  4994,  5463,  4311,  5857,  1500,  5856,  5797,  3742,  5799,
    3780,  4338,   859,  4945,    61,  2330,  1890,  2840,  3710,  4036,
     757,   758,   759,   760,   761,   762,   763,   764,  3806,  5822,
    5823,  4835,   982,   244,  5892,  4355,  2995,   839,  4558,   406,
     533,  2428,  2431,  5836,  5834,  2430,  2429,  2210,  1496,  5839,
    2350,  5442,  5441,   420,   547,   422,  5846,   116,  5266,  3664,
    4254,    11,   109,   110,  5764,  5073,  4500,   114,   127,   280,
    5231,  4914,  4504,  2671,  5815,   134,  5419,  5898,  5235,  6039,
    5986,  5715,  6041,  2868,  4696,  4246,   453,  5918,  4764,  4255,
    5261,  5578,    42,  5036,  5970,  5764,  5794,  3823,  5660,  5809,
    5797,   468,  5892,  3602,  2271,  3906,  5896,   166,  3081,  4474,
     575,  5969,  5970,  5903,  5907,  6013,  4471,  5910,  4466,   492,
     179,   492,  5957,  5922,  5958,  5846,  5495,  5839,  5573,  2295,
      80,  4062,  5922,    83,   501,  4592,  5926,  4254,  4760,  1474,
    5933,  1290,    92,  2088,  3529,   192,  6004,  3524,  5804,    99,
    5517,  2576,   519,   103,  5334,   648,  2986,  2582,  2687,  2246,
     371,  2808,  3796,   113,  3162,  5955,   116,  5957,  5958,   228,
     120,  6029,   122,  2598,  4372,  3349,   777,   127,   537,  1434,
    1387,  1423,  3471,  1213,   134,  3597,  3407,  4347,  4491,  5855,
     140,  3282,   685,  1822,  3940,   145,  3278,  1732,  1880,  1700,
     259,  1385,  2137,  5302,  2142,  1385,   699,   254,   255,   256,
    6068,  1385,  1385,  5009,  1385,  4550,   166,  5749,  4953,  5750,
    1186,  2923,  1706,  3589,  6014,  2158,    34,  6017,  4650,   179,
    4651,  3932,   279,   600,   184,  2132,  3930,  5226,  5692,  5345,
     607,  4939,  5222,  5243,  1441,  1415,  4655,  3593,   783,  6039,
     617,  2917,   510,    61,   204,  3115,  1641,   304,  1900,  4926,
    2685,  2686,  2687,   630,  6054,   492,  3156,  3395,  3628,  4547,
    2695,  4959,  5895,   695,  2699,  2700,  2701,  2702,   228,   882,
    2342,  2781,  2707,  2708,   692,  2710,   333,   237,   335,   883,
    2782,  1966,   692,  1437,   661,   527,  3465,   664,  2834,  5348,
    5250,   109,   110,  4375,  2077,   352,  6037,   354,   773,   259,
    5014,    71,  5311,   680,  6064,  6110,    18,  2742,  2743,  6104,
    1056,   129,  4509,  6113,  2801,   982,   373,  4537,  3343,   279,
    2755,  1297,  2612,   380,  3446,   285,   286,  1303,   691,  2735,
     691,  2406,  3425,  3424,  1908,   688,  1637,  2980,   395,   299,
    3400,   301,   112,  4181,   304,    57,  1194,  4669,   405,  3784,
    2785,  5387,   170,   171,  3540,  2106,  4261,   175,   731,  1331,
     516,   179,   492,   420,   492,   586,  2801,  2802,   492,    -1,
    6002,  2806,  2807,  2808,    86,    -1,    -1,    89,    -1,    -1,
      -1,    -1,   152,    -1,    -1,   203,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2836,    -1,    -1,    -1,    -1,    -1,    -1,  2843,  1385,
      -1,    -1,  2847,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   488,    -1,    -1,    -1,    -1,   148,  2872,  2873,  2874,
    2875,    -1,  2877,    -1,  2879,    -1,    -1,    -1,    -1,  2884,
    2885,  2886,    -1,  2888,    17,   167,    -1,    -1,    -1,  2894,
      -1,    -1,   280,   175,   176,    -1,    -1,    -1,   525,    -1,
      -1,    -1,    -1,   694,  2909,    -1,    -1,    -1,  2913,    -1,
      -1,   538,  2917,  2918,  1460,    -1,   304,    -1,   448,    -1,
      -1,    -1,    -1,    -1,  1470,    -1,    -1,  4199,    -1,    -1,
    4202,    -1,  1478,  4205,  4206,  4207,  4208,    -1,  4210,  4211,
    4212,  4213,    -1,  4215,  4216,   333,  4218,    -1,    -1,    -1,
    4222,    -1,   579,    -1,  4226,  4227,  4228,  4229,   585,  4231,
    4232,    -1,     9,    10,    -1,  4237,  4238,    -1,    -1,  4241,
    4242,    -1,    -1,    -1,    -1,  2980,   109,   110,    -1,    -1,
      -1,  2986,    -1,    -1,   266,   373,    -1,    -1,    -1,    -1,
     378,    -1,    -1,   275,   276,   277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    53,    54,    55,    56,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   644,    -1,    -1,
      -1,    -1,    -1,    -1,   651,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1583,    -1,  1585,
    3045,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3054,
      -1,    -1,    -1,    -1,    -1,   682,    -1,    -1,    -1,   106,
     107,   108,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     697,   698,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,
      -1,    -1,    -1,   710,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,
      -1,  3106,    -1,    -1,    -1,    -1,    -1,    -1,   390,    -1,
    3115,    -1,  3117,   160,   161,    -1,   398,    -1,  3123,   252,
      -1,  3126,    -1,    -1,  3129,    -1,  3131,  3132,    -1,    -1,
      -1,   264,   472,    -1,    -1,    -1,   183,    -1,   185,  3144,
      -1,    -1,  3147,    -1,    -1,    -1,   773,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   502,   503,    -1,   505,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,   516,   517,   518,    -1,
     520,   521,   522,    -1,    -1,   232,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    16,    17,
      -1,    -1,    -1,    -1,    22,    23,  3211,    -1,  3213,    -1,
      -1,   741,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      58,   771,    -1,   773,    -1,    -1,   776,   777,  1794,    -1,
      -1,    -1,    70,    -1,    -1,    -1,    -1,  1803,   305,   306,
      -1,    -1,    -1,    -1,    -1,   653,    -1,    -1,  1814,    -1,
      -1,    -1,    90,   406,    -1,    -1,    -1,    -1,    -1,   619,
     620,    -1,    -1,    -1,    -1,    -1,    -1,   420,    -1,   422,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     453,    -1,    -1,  3328,    -1,    -1,    -1,    -1,   146,   147,
      -1,   149,    -1,    -1,    -1,   468,    -1,    -1,    -1,   157,
     158,   159,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,   399,    -1,    -1,   743,  3361,  1903,    -1,   177,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,    -1,
      -1,    -1,    -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3387,    -1,  3389,    -1,   519,    -1,    -1,    76,
      -1,    78,    -1,    -1,   212,  3400,  3401,  3402,    -1,    -1,
      87,    -1,  1948,    -1,    -1,    92,  1952,    -1,  1954,    -1,
      97,  3416,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,
      -1,    -1,   469,   705,   111,   243,   708,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   717,    -1,    -1,  4710,   126,
      -1,    -1,    -1,  3448,    -1,    -1,   133,    -1,    -1,    -1,
     268,   269,   270,  1999,    -1,    -1,    -1,    -1,    -1,    -1,
    4732,    -1,    -1,   150,  2010,  3470,    -1,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   607,   293,   294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   617,     6,    -1,   534,   175,   536,
      -1,    -1,    -1,    -1,   541,    -1,    17,   630,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      41,    -1,    -1,   341,    -1,   343,   344,    -1,   661,    50,
      -1,   664,   219,    -1,    -1,    -1,    -1,    -1,   225,   226,
      -1,   359,    -1,    -1,    65,    66,    -1,   680,  3553,    -1,
      -1,    -1,   239,  3558,    -1,    -1,    -1,    -1,    -1,   606,
      -1,    -1,    -1,   696,  3569,    -1,    -1,  2113,  3573,    -1,
      -1,    -1,    -1,    -1,  3579,    -1,    -1,    -1,   396,    -1,
     398,    -1,  3587,    -1,  2130,    29,    -1,    -1,   109,   110,
      -1,    -1,    -1,   114,    38,  2141,  2142,  3602,  3603,    -1,
      -1,    -1,   649,   421,    -1,    -1,    -1,   128,    -1,    -1,
      -1,   298,    -1,   300,    -1,    -1,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   444,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   455,   456,    -1,
      -1,    -1,    -1,    87,    -1,    -1,    -1,  3652,    92,    -1,
      -1,     7,   339,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3668,    -1,    -1,    -1,   111,    -1,   487,
     191,    -1,    -1,   360,    -1,    -1,    -1,  2223,   496,    -1,
      -1,    -1,   126,   204,    -1,    41,    -1,    -1,    -1,   133,
      -1,    -1,   739,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   750,    -1,    -1,   150,    63,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,   542,   543,   544,    -1,    -1,    -1,
     417,   175,   550,   551,    -1,    -1,    -1,    -1,    -1,    -1,
    3745,    -1,    98,   264,    -1,    -1,    -1,   434,    -1,   567,
     568,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   114,    -1,
    3765,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   591,   592,   219,    -1,    -1,    -1,  3784,
      -1,   225,   226,    -1,  3789,  3790,  3791,  3792,  3793,   145,
      -1,  3796,   610,    -1,    -1,   239,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2375,
    2376,   352,  2378,  2379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2396,    16,    17,    -1,    -1,    -1,   300,    22,    23,   215,
    2406,    -1,    -1,    -1,    -1,    -1,   387,    32,   312,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,
      -1,    -1,    -1,    -1,   702,   241,    -1,   705,   575,    -1,
     708,    -1,    -1,    58,    -1,   339,    -1,  3902,   419,   420,
      -1,    -1,   423,    -1,   425,    70,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   731,    -1,    -1,   360,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    90,    -1,   283,   284,    -1,
     451,   452,   750,    -1,    -1,    -1,  3941,    -1,   459,   460,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3955,    -1,    -1,    -1,    -1,   476,    -1,    -1,   123,    -1,
    3965,    -1,    -1,    -1,    -1,    -1,  3971,  3972,  3973,  3974,
      -1,  3976,    -1,   417,    -1,    -1,    -1,   498,    -1,    -1,
      -1,   146,   147,    -1,   149,    -1,    -1,  3992,  3993,    -1,
     434,    61,   157,   158,   159,    -1,    -1,    -1,   519,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      80,    -1,   177,    -1,    -1,    -1,  4021,    -1,    -1,    -1,
      -1,    -1,  4027,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2576,    -1,    -1,    -1,    -1,    -1,  2582,    -1,    -1,   109,
     110,    -1,    -1,    -1,   114,    -1,    -1,   212,    -1,    -1,
      -1,    -1,    -1,    -1,   575,    -1,  4061,    -1,    -1,    -1,
      -1,    -1,  4067,  4068,    -1,    -1,    -1,    -1,   589,    -1,
     426,    -1,   237,    -1,    -1,   431,    -1,  4082,   243,   600,
      -1,    -1,   603,   604,    -1,    -1,   442,    -1,    -1,    -1,
      -1,    -1,    -1,  4098,  4099,    -1,    -1,   618,    -1,    -1,
    4105,    -1,    -1,   268,   269,   270,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,   293,   294,
      -1,   575,    -1,   654,    -1,    -1,    -1,    -1,    -1,    -1,
     661,  2687,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2699,  2700,  2701,  2702,    -1,    -1,   680,
      -1,   682,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   341,    -1,   343,   344,
      -1,    -1,    -1,    -1,   254,   255,   256,    -1,    -1,    -1,
      -1,    29,    -1,    -1,   359,    -1,    -1,    -1,    -1,    -1,
      38,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,
      -1,   732,    -1,    -1,    -1,    -1,    -1,   738,    -1,    -1,
      -1,    -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   396,    -1,   398,   304,  4240,    -1,    -1,    -1,  2785,
      -1,    -1,    -1,    -1,    -1,   601,    -1,    -1,    -1,    87,
    4255,    -1,    -1,    -1,    92,    -1,   421,    -1,    -1,    97,
      -1,    -1,  2808,   333,    -1,   335,   622,    -1,    -1,    -1,
      -1,   627,    -1,   111,    -1,    -1,    -1,    -1,    -1,   444,
      -1,    -1,    -1,    -1,   354,    -1,    -1,    -1,   126,    -1,
     455,   456,    -1,    -1,    -1,   133,    -1,    -1,    -1,    -1,
      -1,  4306,   658,   373,    -1,    -1,  4311,    -1,    -1,    -1,
     380,    -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   487,    -1,    -1,   395,    -1,    -1,    -1,  2875,
      -1,   496,    -1,  4338,   690,   405,  4341,   175,  2884,  4344,
      -1,    -1,  2888,    -1,    -1,    -1,    -1,    -1,  2894,    29,
     420,    -1,    -1,    -1,    -1,  4360,    -1,    -1,    38,    -1,
      -1,    29,    -1,  2909,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    -1,    -1,    -1,    -1,    -1,    -1,   542,   543,   544,
      60,   219,    -1,    -1,    -1,   550,   551,   225,   226,    -1,
      -1,    -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   239,   567,   568,    -1,    -1,    -1,    87,   478,    -1,
      -1,    -1,    92,    -1,    -1,    -1,    -1,    97,   488,    87,
      -1,    -1,    -1,    -1,    92,    -1,   591,   592,    -1,    97,
      -1,   111,    -1,    -1,    -1,  5707,  5708,    -1,  5710,  5711,
    5712,  5713,    -1,   111,    -1,   610,   126,    -1,    -1,    -1,
      -1,    -1,    -1,   133,    -1,   525,    -1,  4462,   126,    -1,
      -1,    -1,   300,    -1,    -1,   133,    -1,    -1,   538,    -1,
     150,    -1,    -1,    -1,  4479,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   150,    -1,    -1,    -1,  4491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,  4504,
      -1,   339,    -1,    -1,  4509,  4510,    -1,   175,    -1,   579,
    4515,  4516,    -1,    -1,    -1,   585,  4521,    -1,    -1,    -1,
      -1,    -1,   360,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4537,  4538,    -1,    -1,    -1,   702,    -1,   219,
     705,    -1,  4547,   708,    -1,   225,   226,    -1,    -1,  5821,
      -1,   219,  5824,    -1,    -1,  4560,    -1,   225,   226,   239,
    5832,    -1,    -1,    -1,    -1,  5837,   731,    -1,    -1,    -1,
      -1,   239,    -1,    -1,   644,    -1,    -1,  3123,    -1,   417,
    3126,   651,    -1,    -1,    -1,   750,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4599,    -1,   434,  4602,    -1,  4604,
      29,  3147,    -1,    -1,    -1,    -1,    -1,    -1,    61,    38,
      -1,    -1,   682,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,    -1,    -1,    -1,    -1,    -1,    -1,   697,   698,    -1,
      -1,    60,   300,    -1,    -1,    -1,    -1,  4642,    -1,    -1,
     710,    -1,    -1,    -1,    -1,    -1,  4651,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    87,   339,
      -1,   114,    -1,    92,  4669,    -1,    -1,    -1,    97,    -1,
      -1,   339,    -1,    -1,    -1,    -1,    -1,    -1,  4683,    -1,
     360,    -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   360,    -1,    -1,  4700,    -1,   126,    -1,    -1,
      -1,    -1,    -1,    -1,   133,    -1,  4711,   777,  4713,    -1,
      -1,    -1,    -1,    -1,  4719,    -1,    -1,    -1,    -1,    -1,
    4725,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4737,  4738,    -1,    -1,    -1,   575,    -1,   192,
      -1,    -1,    -1,     5,    -1,     7,   175,    -1,    -1,   417,
      -1,    -1,    -1,  4758,   434,    -1,    -1,    -1,    -1,  4764,
    4765,    -1,    -1,    -1,    -1,  4770,   434,    -1,    -1,    31,
      -1,  4776,    -1,    -1,    -1,    -1,  4781,    39,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,   225,   226,    -1,    61,
      -1,   254,   255,   256,    -1,  4810,    -1,    -1,    -1,    -1,
     239,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3387,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,   304,   114,    -1,    -1,    -1,  3402,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     333,    -1,   335,   145,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   575,    -1,    -1,    -1,    -1,
      -1,   354,    -1,    -1,    -1,    -1,    -1,   575,    -1,  4914,
     339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     373,  4926,   184,    -1,    -1,    -1,    -1,   380,    -1,    -1,
     192,   360,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4945,    -1,   395,    -1,    -1,    -1,    -1,    -1,  4953,    -1,
      -1,    -1,   405,    -1,    -1,    -1,   218,    -1,  4963,    -1,
      -1,    -1,  4967,    -1,    -1,    -1,    -1,   420,    -1,    -1,
    4975,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4984,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   417,  4994,
      -1,    -1,   254,   255,   256,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,
      -1,    -1,  3558,    -1,    -1,    -1,    -1,   279,    -1,    -1,
      -1,    -1,    -1,  3569,    -1,   478,    -1,  3573,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   488,    -1,    -1,    -1,  5044,
      -1,    -1,   304,    -1,  5049,  5050,  5051,    -1,  5053,  5054,
      -1,  5056,    -1,    -1,    -1,    -1,  5061,  5062,    -1,    -1,
      -1,  5066,    -1,   325,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   333,   525,   335,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   538,    -1,   670,    -1,    -1,
      -1,    -1,   354,    -1,    -1,    -1,  5101,    -1,    -1,    -1,
    5105,    -1,  5107,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,    -1,    -1,    -1,   698,    -1,    -1,   380,    -1,
      -1,  5126,    -1,    -1,  5129,    -1,   579,  5132,    -1,    -1,
      -1,    -1,   585,   395,    -1,   718,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   405,  5149,    -1,   575,   409,    -1,    -1,
      -1,    -1,    -1,    -1,   416,    -1,    -1,    -1,   420,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   448,    -1,    -1,    -1,
      -1,   644,    -1,    -1,    -1,    -1,    -1,    -1,   651,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   478,    -1,    -1,  3765,
      -1,    -1,    -1,    -1,    -1,    -1,   488,    -1,  5233,   682,
      -1,    -1,  5237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5247,    -1,   697,   698,    -1,    -1,    -1,    -1,
    3796,  5256,  5257,  5258,    -1,   838,  5261,   710,    -1,    -1,
      -1,    -1,    -1,   525,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   538,    -1,   540,    32,
      -1,    34,    -1,  5288,    -1,    -1,    -1,    -1,  5293,    -1,
      -1,    -1,  5297,    -1,  5299,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,
      -1,    -1,    -1,    -1,  5319,    -1,    -1,   579,    -1,    -1,
      -1,  5326,    -1,   585,  5329,  5330,    -1,    -1,  5333,    -1,
      -1,    -1,  5337,    -1,  5339,    -1,    -1,    -1,    -1,    -1,
    5345,    -1,    -1,  5348,    -1,    -1,    -1,    -1,    -1,  5354,
      -1,    -1,   935,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,   114,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5382,    -1,    -1,
      -1,    -1,   644,    -1,    -1,  5390,    -1,    -1,    -1,   651,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   985,    -1,    -1,    -1,    -1,   990,    -1,    -1,
      -1,    -1,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     682,    38,    -1,    -1,    -1,    -1,    -1,  5432,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   697,   698,  1020,    -1,   192,
    1023,    -1,    -1,    60,    -1,    -1,    -1,  1030,   710,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5463,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    92,    38,    -1,    -1,    -1,
      97,    -1,    -1,    -1,  5489,  1068,    -1,    -1,    -1,  5494,
      -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,    60,    -1,
      -1,   254,   255,   256,    -1,    -1,    -1,    -1,  5513,   126,
      -1,    -1,    -1,  5518,    -1,    -1,   133,    -1,    -1,    -1,
    5525,  4067,  4068,    -1,    -1,    87,   279,    -1,  5533,  5534,
      92,    -1,    -1,   150,    -1,    97,  1119,  1120,  1121,  1122,
      -1,    -1,  1125,    -1,    -1,    -1,    -1,    -1,    -1,   111,
    1133,   304,  4098,  4099,  5559,    -1,    -1,    -1,   175,    -1,
      -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,  5573,    -1,
      -1,   133,  5577,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     333,    -1,   335,  5588,    -1,  5590,  5591,    -1,   150,    -1,
      -1,    -1,  5597,    -1,    -1,    -1,    -1,    -1,    -1,   352,
      -1,   354,   219,    -1,    -1,    -1,    -1,    -1,   225,   226,
      -1,    -1,    -1,   175,    -1,    -1,  5621,    -1,    -1,    -1,
     373,    -1,   239,    -1,    -1,    -1,    -1,   380,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   405,    -1,  5659,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,   225,   226,    -1,    -1,   420,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   239,    -1,    -1,
    5685,    -1,    -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   339,    -1,    -1,   478,    -1,  1310,    -1,    -1,
      -1,  1314,    -1,    -1,  5739,   488,    -1,  5742,   300,    -1,
    5745,  5746,    -1,   360,  5749,  5750,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5758,    -1,  5760,  5761,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5775,    -1,   525,    -1,    -1,    -1,    -1,   339,    -1,    -1,
      -1,    -1,    -1,  5788,    -1,   538,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   360,  5804,
     417,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5815,    -1,    -1,    -1,    -1,    -1,    -1,   434,    -1,    -1,
      -1,    -1,    -1,  5828,    -1,    -1,   579,    -1,  1411,    -1,
      -1,    -1,   585,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5849,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1442,
      -1,    -1,    -1,    -1,  5869,  5870,    -1,    -1,  5873,    -1,
      -1,    -1,   434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5895,   644,    -1,    -1,    -1,    -1,    -1,    -1,   651,  1482,
      -1,    -1,  1485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5918,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5933,   682,
      -1,    -1,    -1,    -1,    -1,  5940,    -1,    -1,    -1,    -1,
      -1,  5946,    -1,    -1,   697,   698,    -1,    -1,    -1,  5954,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   710,   575,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5984,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  6001,  6002,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   575,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      34,    -1,    -1,  4599,    -1,    -1,    -1,    -1,  4604,    -1,
      -1,  1644,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,  6084,
      -1,    -1,    -1,  6088,    -1,    -1,    -1,    -1,    -1,  6094,
      -1,    -1,    -1,  6098,    -1,    -1,    -1,  1680,    -1,  6104,
      -1,    -1,    -1,    -1,    -1,  6110,    -1,    -1,    -1,    -1,
    1693,  1694,    -1,    -1,    -1,    -1,  1699,    -1,    -1,    -1,
    1703,  1704,  1705,    -1,    -1,   109,   110,    -1,    -1,    -1,
     114,  1714,  1715,  1716,    -1,    -1,    -1,  1720,    -1,  1722,
    1723,  1724,  1725,  1726,    -1,  1728,    -1,    -1,  1731,  1732,
      -1,   135,    -1,   137,    -1,   139,  1739,    -1,  1741,    -1,
      -1,  1744,  1745,    -1,  1747,  1748,  1749,    -1,  1751,  1752,
    1753,    -1,    -1,  4719,    -1,  1758,    -1,    -1,  1761,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1769,  1770,    -1,  1772,
    1773,  1774,    -1,    -1,  1777,  1778,  1779,  1780,  1781,  1782,
    1783,    -1,  1785,  1786,  1787,  1788,  1789,  1790,   192,  1792,
    1793,    -1,  1795,  1796,  1797,  1798,  1799,  1800,  1801,    -1,
      -1,  1804,  1805,  1806,  1807,    -1,  1809,  1810,  1811,    -1,
    1813,    -1,  1815,    -1,  1817,    -1,    -1,    -1,  1821,  1822,
    1823,    -1,    -1,  1826,  1827,  1828,  1829,  1830,    -1,  1832,
      -1,    -1,    -1,    -1,    -1,    -1,  1839,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1847,  1848,  1849,  1850,    -1,    -1,
     254,   255,   256,    -1,  1857,  1858,    -1,  1860,  1861,    -1,
      -1,  1864,  1865,  1866,  1867,  1868,  1869,  1870,  1871,  1872,
    1873,  1874,  1875,  1876,    -1,   279,  1879,    -1,    -1,    -1,
      -1,  1884,    -1,    -1,    -1,    -1,    -1,    -1,  1891,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1924,    -1,    -1,    -1,    -1,  1929,    -1,    -1,   333,
      -1,   335,    -1,    -1,    -1,    -1,  1939,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   352,    -1,
     354,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   405,    -1,  2006,    -1,    -1,    -1,    -1,    -1,  4975,
      -1,    -1,    -1,    -1,    -1,    -1,   420,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2034,    -1,  2036,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2058,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2070,    -1,    -1,
      -1,    -1,    -1,    -1,   478,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   488,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   525,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   538,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2155,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2164,    -1,  5129,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   579,    -1,    -1,    -1,    -1,
      -1,   585,    -1,  2186,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     644,    -1,    -1,    -1,    -1,    -1,    -1,   651,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   682,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   697,   698,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   710,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2325,  2326,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2409,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5390,    -1,    -1,    -1,  2431,    -1,
    2433,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2441,  2442,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   670,    -1,    -1,
      -1,    -1,  2505,  2506,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   698,    -1,  2530,  2531,  2532,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2544,    -1,    -1,    -1,    -1,    -1,  5513,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2597,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2608,    -1,    -1,  2611,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2629,    -1,    -1,    -1,
    2633,  2634,    -1,  2636,  2637,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2645,    -1,  2647,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   838,    -1,    -1,    -1,    -1,
      -1,    -1,  2675,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2689,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2706,    -1,    -1,  2709,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2732,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   935,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2795,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   990,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2838,    -1,  2840,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1020,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1030,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2920,    -1,    -1,
      -1,    -1,    -1,    -1,  2927,    -1,    -1,  2930,  2931,  2932,
      -1,  2934,    -1,  2936,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1122,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2990,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1310,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3203,    -1,    -1,  3206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3215,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3224,    -1,  3226,    -1,  3228,    -1,  3230,  3231,  3232,
    3233,  3234,  3235,    -1,  3237,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3245,    -1,  3247,    -1,    -1,  3250,  3251,  3252,
    3253,    -1,    -1,  3256,  3257,    -1,    -1,  3260,    -1,  3262,
      -1,  3264,    -1,  3266,    -1,    -1,    -1,  3270,    -1,  1442,
      -1,    -1,    -1,    -1,    -1,  3278,    -1,  3280,    -1,  3282,
    3283,  3284,  3285,  3286,    -1,    -1,  3289,  3290,  3291,    -1,
    3293,    -1,    -1,  3296,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3309,    -1,    -1,  1482,
      -1,  3314,  1485,    -1,  3317,    -1,  3319,  3320,  3321,    -1,
      -1,  3324,    -1,    -1,    -1,    -1,    -1,  3330,    -1,    -1,
      -1,    -1,  3335,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3344,    -1,    -1,    -1,    -1,    -1,  3350,    -1,  3352,
      -1,    -1,  3355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3365,  3366,  3367,    -1,    -1,    -1,    -1,  3372,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3417,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3444,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1644,  3475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3495,    -1,  3497,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1680,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1699,    -1,    -1,    -1,
    1703,    -1,  1705,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1714,  1715,    -1,    -1,    -1,    -1,  1720,    -1,  1722,
    1723,  1724,  1725,  1726,    -1,  1728,    -1,    -1,    -1,    -1,
      -1,    -1,  3565,    -1,    -1,    -1,  1739,    -1,  1741,    -1,
      -1,  1744,  1745,    -1,  1747,  1748,    -1,    -1,  1751,  1752,
    1753,    -1,    -1,  3586,    -1,  1758,    -1,    -1,  1761,    -1,
    3593,    -1,    -1,    -1,    -1,    -1,  1769,  1770,    -1,  1772,
      -1,  1774,    -1,    -1,  1777,  1778,  1779,  1780,  1781,  1782,
    1783,    -1,  1785,  1786,  1787,  1788,  1789,    -1,    -1,  1792,
    1793,    -1,    -1,  1796,  1797,  1798,    -1,    -1,    -1,    -1,
      -1,  1804,  1805,  1806,    -1,    -1,  1809,  1810,  1811,    -1,
    1813,    -1,  1815,    -1,  1817,    -1,    -1,    -1,  1821,  1822,
    1823,    -1,    -1,  1826,  1827,  1828,  1829,  1830,    -1,  1832,
      -1,    -1,    -1,    -1,    -1,    -1,  1839,    -1,    -1,    -1,
      -1,    -1,  3675,    -1,  1847,  1848,  1849,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1924,    -1,    -1,    -1,    -1,  1929,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3768,  1939,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3804,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3816,    -1,    -1,  3819,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2006,    -1,    -1,    -1,    -1,    -1,    -1,
    3843,  3844,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2034,    -1,  2036,  3867,    -1,  3869,    -1,  3871,    -1,
    3873,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3895,    -1,    -1,    -1,    -1,  2070,  3901,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3916,  3917,    -1,    -1,    -1,    -1,    -1,
    3923,    -1,  3925,    -1,  3927,    -1,    -1,    -1,    -1,  3932,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3945,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3978,  3979,  3980,    -1,    -1,
      -1,    -1,  2155,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3994,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4015,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4036,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4102,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4124,    -1,  4126,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2325,  2326,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2409,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2431,    -1,
    2433,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2441,  2442,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4354,    -1,    -1,    -1,    -1,    -1,  2530,  2531,  2532,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4408,  4409,    -1,  4411,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4420,    -1,  4422,
      -1,    -1,  4425,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4438,    -1,  4440,    -1,  4442,
      -1,  4444,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4457,  4458,  2629,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2645,    -1,  2647,    -1,    -1,    -1,    -1,    -1,
      -1,  4484,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2675,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2689,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2706,    -1,    -1,  2709,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4549,    -1,    -1,    -1,
    4553,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2732,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2795,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2920,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2934,    -1,  2936,    -1,    -1,    -1,    -1,    -1,    -1,
    4773,  4774,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2990,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4852,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4910,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4927,    -1,    -1,    -1,    -1,  4932,
    4933,  4934,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4959,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4999,    -1,  5001,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3203,    -1,    -1,  3206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3224,    -1,    -1,    -1,  3228,    -1,  3230,  3231,  3232,
    3233,  3234,  3235,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3245,    -1,  3247,    -1,    -1,  3250,  3251,  3252,
    3253,    -1,    -1,  3256,  3257,    -1,    -1,  3260,    -1,  3262,
      -1,  3264,    -1,  3266,    -1,    -1,    -1,  3270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3278,    -1,  3280,    -1,  3282,
      -1,  3284,  3285,  3286,    -1,    -1,  3289,  3290,  3291,    -1,
    3293,    -1,    -1,  3296,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3309,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3317,    -1,  3319,  3320,  3321,    -1,
      -1,  3324,    -1,    -1,    -1,    -1,    -1,  3330,    -1,    -1,
      -1,    -1,  3335,    -1,  5167,    -1,    -1,    -1,    -1,    -1,
      -1,  3344,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3355,    -1,    -1,    -1,    -1,    -1,    -1,  5192,
      -1,    -1,  5195,    -1,  3367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5222,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3417,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3444,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5322,
      -1,    -1,  3495,    -1,  3497,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5393,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3586,    -1,    -1,  5419,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3675,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5538,    -1,    -1,    -1,    -1,
      -1,    -1,  5545,  5546,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5632,
      -1,  3804,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3816,    -1,    -1,  3819,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5660,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5672,
    3843,  3844,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3867,    -1,  3869,    -1,  3871,    -1,
    3873,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3895,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3916,  3917,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3932,
      -1,  5764,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3945,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5799,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3979,  3980,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3994,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4015,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5896,    -1,    -1,    -1,    -1,    -1,    -1,
    5903,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4102,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4124,    -1,  4126,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  6039,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6113,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4354,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4408,  4409,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4420,    -1,  4422,
      -1,    -1,  4425,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4438,    -1,  4440,    -1,  4442,
      -1,  4444,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4457,  4458,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4549,    -1,    -1,    -1,
    4553,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4773,  4774,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4852,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4910,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4927,    -1,    -1,    -1,    -1,    -1,
    4933,  4934,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4959,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4999,    -1,  5001,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5222,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5322,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5393,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     6,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    17,    18,    19,    20,    21,    -1,    -1,  5672,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,  5764,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,  5799,    -1,   153,   154,
      -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,    -1,   167,    -1,    -1,   170,   171,   172,    -1,   174,
     175,   176,    -1,   178,   179,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5896,    -1,    -1,   251,    -1,    -1,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
    6113,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   759,   760,    -1,    -1,    -1,    -1,
     765,    -1,    -1,    -1,     6,   770,    -1,    -1,    -1,   774,
     775,    -1,    -1,   778,   779,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,
     102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,
     162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,    -1,
     172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,
      -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,
     262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   759,   760,     7,
       8,    -1,    -1,   765,    -1,    -1,    -1,    -1,   770,    -1,
      -1,    -1,   774,   775,    -1,    -1,   778,   779,    -1,    27,
      -1,    29,    -1,    31,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    60,    -1,    -1,    63,    -1,    65,    66,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    80,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   119,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   143,    -1,   145,    -1,    -1,
      -1,    -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   180,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   194,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,   206,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,
     218,   219,   220,    -1,   222,    -1,    -1,    -1,    -1,   227,
      -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   281,    -1,   283,    -1,   285,    -1,    -1,
      -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   300,   301,    -1,    -1,    -1,    -1,    -1,    -1,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,    -1,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,    -1,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,    -1,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,     7,     8,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   770,    27,    -1,    29,    -1,    31,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    -1,    63,
      -1,    65,    66,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   130,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,
      -1,   145,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   180,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     194,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   205,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   217,   218,   219,   220,    -1,   222,    -1,
      -1,    -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,   233,
      -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,   283,
      -1,   285,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   300,   301,    -1,    -1,
      -1,    -1,    -1,    -1,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,    -1,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
      -1,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,     7,     8,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   770,    27,    -1,    -1,
      -1,    31,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    63,    -1,    65,    66,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   143,    -1,   145,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   194,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   205,   206,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,   218,    -1,
     220,    -1,   222,    -1,    -1,    -1,    -1,   227,    -1,    -1,
      -1,    -1,    -1,   233,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   281,    -1,   283,    -1,   285,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   301,    -1,    -1,    -1,    -1,    -1,    -1,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,    -1,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,    -1,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,    -1,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
     770,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,
     156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,
      -1,   167,    -1,    -1,   170,   171,   172,    -1,   174,   175,
     176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,
      -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,
      -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,
     276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,   288,   289,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,    -1,    -1,    -1,   301,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,    -1,    -1,    -1,    17,    18,
      19,    20,    21,   759,   760,    -1,    25,    -1,    -1,   765,
      29,    30,    -1,    32,   770,    -1,    -1,    -1,   774,   775,
      39,    40,   778,   779,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,
      -1,   170,   171,   172,    -1,   174,   175,   176,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,
     199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,   272,    -1,   274,   275,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    17,    18,    19,    20,    21,
     759,   760,    -1,    -1,    -1,    -1,   765,    29,    30,    -1,
      32,   770,    -1,    -1,    -1,   774,   775,    39,    40,   778,
     779,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,
     102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,
     162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,   171,
     172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,
      -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,
     262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,    -1,
      -1,    -1,    17,    18,    19,    20,    21,   759,   760,    -1,
      -1,    -1,    -1,   765,    29,    30,    -1,    32,   770,    -1,
      -1,    -1,   774,   775,    39,    40,   778,   779,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,   113,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,
      -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,    -1,   167,    -1,    -1,   170,   171,   172,    -1,   174,
     175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    17,
      18,    19,    20,    21,   759,   760,    -1,    -1,    -1,    -1,
     765,    29,    30,    -1,    32,   770,    -1,    -1,    -1,   774,
     775,    39,    40,   778,   779,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,
      -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,
      -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,
      -1,    -1,   170,   171,   172,    -1,   174,   175,   176,    -1,
     178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,
     198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,
     258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
     288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,    -1,    -1,    -1,    17,    18,    19,    20,
      21,   759,   760,    -1,    -1,    -1,    -1,   765,    29,    30,
      -1,    32,   770,    -1,    -1,    -1,   774,   775,    39,    40,
     778,   779,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,
      -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,
     171,   172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,
     201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
     231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    17,    18,    19,    20,    21,   759,   760,
      -1,    -1,    -1,    -1,   765,    29,    30,    -1,    32,   770,
      -1,    -1,    -1,   774,   775,    39,    40,   778,   779,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      94,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,
     104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,
     154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,    -1,   167,    -1,    -1,   170,   171,   172,    -1,
     174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,
      -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,
      -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,
      -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,
      17,    18,    19,    20,    21,   759,   760,    -1,    -1,    -1,
      -1,   765,    29,    30,    -1,    32,   770,    -1,    -1,    -1,
     774,   775,    39,    40,   778,   779,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,
      -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,
     167,    -1,    -1,   170,   171,   172,    -1,   174,   175,   176,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
     197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
     257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    17,    18,    19,
      20,    21,   759,   760,    -1,    -1,    -1,    -1,   765,    29,
      30,    -1,    32,   770,    -1,    -1,    -1,   774,   775,    39,
      40,   778,   779,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,
     170,   171,   172,    -1,   174,   175,   176,    -1,   178,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,
      -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
     220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,
      -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,
     260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,    -1,    -1,    -1,    17,    18,    19,    20,    21,   759,
     760,    -1,    -1,    -1,    -1,   765,    29,    30,    -1,    32,
     770,    -1,    -1,    -1,   774,   775,    39,    40,   778,   779,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
     153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,   164,    -1,    -1,   167,    -1,    -1,   170,   171,   172,
      -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    17,    18,    19,    20,    21,   759,   760,    -1,    -1,
      -1,    -1,   765,    29,    30,    -1,    32,   770,    -1,    -1,
      -1,   774,   775,    39,    40,   778,   779,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,
     156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,
      -1,   167,    -1,    -1,   170,   171,   172,    -1,   174,   175,
     176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,
      -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,
      -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,
     276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,    -1,    -1,    -1,    17,    18,
      19,    20,    21,   759,   760,    -1,    -1,    -1,    -1,   765,
      29,    30,    -1,    32,   770,    -1,    -1,    -1,   774,   775,
      39,    40,   778,   779,    43,    44,    45,    46,    -1,    48,
      49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,
      -1,   170,   171,   172,    -1,   174,   175,   176,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,
     199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    17,    18,    19,    20,    21,
     759,   760,    -1,    -1,    -1,    -1,   765,    29,    30,    -1,
      32,   770,    -1,    -1,    -1,   774,   775,    39,    40,   778,
     779,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,
     102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,
      -1,   153,   154,   155,   156,    -1,    -1,    -1,    -1,    -1,
     162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,    -1,
     172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,
      -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,
     262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,    -1,
      -1,    -1,    17,    18,    19,    20,    21,   759,   760,    -1,
      -1,    -1,    -1,   765,    29,    30,    -1,    32,   770,    -1,
      -1,    -1,   774,   775,    39,    40,   778,   779,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,   154,
      -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,   164,
      -1,    -1,   167,    -1,    -1,   170,    -1,   172,    -1,   174,
     175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    17,
      18,    19,    20,    21,   759,   760,    -1,    -1,    -1,    -1,
     765,    29,    30,    -1,    32,   770,    -1,    -1,    -1,   774,
     775,    39,    40,   778,   779,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,    -1,
      -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,   167,
      -1,    -1,   170,    -1,   172,    -1,   174,   175,   176,    -1,
     178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,   197,
     198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,   257,
     258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,   277,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
     288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,    -1,    -1,    -1,    17,    18,    19,    20,
      21,   759,   760,    -1,    -1,    -1,    -1,   765,    29,    30,
      -1,    32,   770,    -1,    -1,    -1,   774,   775,    39,    40,
     778,   779,    43,    44,    45,    46,    -1,    48,    49,    -1,
      51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
     101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
     121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,    -1,
      -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,   170,
      -1,   172,    -1,   174,   175,   176,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,    -1,
     201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
     231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    17,    18,    19,    20,    21,   759,   760,
      -1,    -1,    -1,    -1,   765,    29,    30,    -1,    32,   770,
      -1,    -1,    -1,   774,   775,    39,    40,   778,   779,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,
     104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,   153,
     154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,    -1,   167,    -1,    -1,   170,    -1,   172,    -1,
     174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,
      -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,
      -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,    -1,
      -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,
      17,    18,    19,    20,    21,   759,   760,    -1,    -1,    -1,
      -1,   765,    29,    30,    -1,    32,   770,    -1,    -1,    -1,
     774,   775,    39,    40,   778,   779,    43,    44,    45,    46,
      -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,
      -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,
      -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,   153,   154,    -1,   156,
      -1,    -1,    -1,    -1,    -1,   162,    -1,   164,    -1,    -1,
     167,    -1,    -1,   170,    -1,   172,    -1,   174,   175,   176,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
     197,   198,   199,    -1,   201,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   228,    -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
     257,   258,    -1,   260,   261,   262,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   274,   275,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,    -1,    -1,    -1,    17,    18,    19,
      20,    21,   759,   760,    -1,    -1,    -1,    -1,   765,    29,
      30,    -1,    32,   770,    -1,    -1,    -1,   774,   775,    39,
      40,   778,   779,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,   153,   154,    -1,   156,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,    -1,   167,    -1,    -1,
     170,    -1,   172,    -1,   174,   175,   176,    -1,   178,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   193,    -1,    -1,    -1,   197,   198,   199,
      -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
     220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,
      -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   251,    -1,    -1,    -1,    -1,    -1,   257,   258,    -1,
     260,   261,   262,    -1,    -1,    -1,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   274,   275,   276,   277,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    18,    19,    20,    21,   759,
     760,    -1,    -1,    -1,    -1,   765,    29,    30,    -1,    32,
     770,    -1,    -1,    -1,   774,   775,    39,    40,   778,   779,
      43,    44,    45,    46,    -1,    48,    49,    -1,    51,    52,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,
      -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,
     153,   154,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,   164,    -1,    -1,   167,    -1,    -1,    -1,    -1,   172,
      -1,   174,   175,   176,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,   197,   198,   199,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,   231,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,   257,   258,    -1,   260,   261,   262,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   274,   275,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    18,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   759,   760,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,
      -1,    -1,   775,    -1,    -1,   778,   779,    -1,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   167,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     175,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    24,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   778,   779,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    24,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,   761,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    32,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   761,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,
      -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    32,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    -1,    -1,    -1,   779,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,     6,     7,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     779,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
     114,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,
      -1,   145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,
     284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,     6,     7,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    46,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,
      -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   283,   284,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     6,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    35,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     6,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,   779,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    36,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
     114,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    11,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,    -1,    -1,   778,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,    -1,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    17,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   238,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    16,    17,
      -1,   754,    -1,    -1,    22,    23,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      58,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
      -1,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,
     158,   159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   177,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,
      -1,    -1,    -1,    -1,    -1,   243,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,   294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,    -1,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,    -1,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,    -1,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,    -1,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,    -1,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,    16,    17,    -1,    -1,    -1,    -1,    22,
      23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,    -1,   149,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   157,   158,   159,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,
     243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,   269,   270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,    -1,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,    -1,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,    -1,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,    -1,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    16,    17,
      -1,    -1,    -1,    -1,    22,    23,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      58,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
      -1,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,
     158,   159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   177,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,
      -1,    -1,    -1,    -1,    -1,   243,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,   294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,    -1,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,    -1,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,    -1,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,    -1,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,    -1,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,    16,    17,    -1,    -1,    -1,    -1,    22,
      23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,    -1,   149,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   157,   158,   159,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,
     243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,   269,   270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,    -1,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,    -1,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,    -1,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,    17,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    17,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    17,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    18,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    24,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    45,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,    -1,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,    37,    38,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,    45,    46,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    45,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    74,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    46,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   770,    -1,    -1,    -1,    -1,   775,    -1,
      -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    47,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,    -1,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,    57,    -1,    -1,    -1,    61,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,    57,    -1,    -1,
      -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   276,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,    -1,    -1,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,    -1,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,    57,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      61,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    61,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      61,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    61,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      61,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    61,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,    -1,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      61,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,    -1,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,    -1,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   771,    -1,    -1,    -1,    -1,    -1,    -1,   778,
     779,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   779,   138,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   779,   138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   778,   779,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     779,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   301,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,
      -1,    -1,   775,    -1,    -1,   778,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   778,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   778,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   761,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   778,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   778,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   778,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   104,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   170,
     171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   246,   247,   248,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    94,   747,   748,   749,   750,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   760,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    94,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   761,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   761,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     761,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   761,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   761,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   761,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   238,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   276,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   276,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   276,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   203,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     203,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,    -1,    -1,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,    -1,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
      -1,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,    -1,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,    -1,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
      -1,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,    -1,   462,   463,   464,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,    -1,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,    -1,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,    -1,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,    -1,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,    -1,   639,   640,   641,   642,   643,   644,   645,    -1,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,    -1,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,    -1,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   298,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,    -1,    -1,    -1,    -1,   341,   342,   343,   344,
     345,    -1,    -1,   348,   349,   350,   351,    -1,    -1,    -1,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,    -1,
     365,    -1,    -1,    -1,    -1,    -1,    -1,   372,    -1,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    -1,    -1,    -1,   432,    -1,    -1,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
      -1,    -1,    -1,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,    -1,   459,   460,    -1,   462,   463,    -1,
      -1,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,    -1,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,    -1,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     109,   110,    -1,    -1,   579,   580,    -1,   582,   583,   584,
     585,    -1,   587,   588,   589,   590,   591,   592,    -1,    -1,
      -1,    -1,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,    -1,   624,
      -1,   626,   627,    -1,   629,   630,    -1,   632,   633,   634,
     635,   636,   637,    -1,   639,   640,   641,   642,   643,   644,
     645,    -1,   647,   648,   649,    -1,   651,   652,   653,   654,
      -1,   656,   657,    -1,    -1,   660,    -1,    -1,   663,   664,
     665,    -1,   667,    -1,   669,   670,   671,   672,    -1,   674,
     675,   676,   677,    -1,   679,   680,    -1,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,    -1,
     705,   706,   707,   708,   709,   710,   711,   712,    -1,   714,
     715,   716,    -1,   718,   719,   720,   721,    -1,    -1,   724,
     725,    -1,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,    -1,    -1,   743,   744,
      -1,    -1,   747,    -1,   749,   750,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   298,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     309,   310,   311,    -1,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,    -1,    -1,
      -1,    -1,   341,   342,   343,   344,   345,    -1,    -1,   348,
     349,   350,   351,    -1,    -1,    -1,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,    -1,   365,    -1,    -1,    -1,
      -1,    -1,    -1,   372,    -1,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      -1,    -1,    -1,   432,    -1,    -1,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,    -1,    -1,    -1,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,    -1,
     459,   460,    -1,   462,   463,    -1,    -1,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,    -1,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   109,   110,    -1,    -1,
     579,   580,    -1,   582,   583,   584,   585,    -1,   587,   588,
     589,   590,   591,   592,    -1,    -1,    -1,    -1,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,    -1,   624,    -1,   626,   627,    -1,
     629,   630,    -1,   632,   633,   634,   635,   636,   637,    -1,
     639,   640,   641,   642,   643,   644,   645,    -1,   647,   648,
     649,    -1,   651,   652,   653,   654,    -1,   656,   657,    -1,
      -1,   660,    -1,    -1,   663,   664,   665,    -1,   667,    -1,
     669,   670,   671,   672,    -1,   674,   675,   676,   677,    -1,
     679,   680,    -1,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,    -1,   705,   706,   707,   708,
     709,   710,   711,   712,    -1,   714,   715,   716,    -1,   718,
     719,   720,   721,    -1,    -1,   724,   725,    -1,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    -1,    -1,   743,   744,    -1,    -1,   747,    -1,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,    -1,    -1,    -1,    -1,   341,   342,
     343,   344,   345,    -1,    -1,   348,   349,   350,   351,    -1,
      -1,    -1,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,    -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,   372,
      -1,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,    -1,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    -1,    -1,    -1,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,    -1,    -1,    -1,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,    -1,   459,   460,    -1,   462,
     463,    -1,    -1,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,    -1,   480,   481,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,    -1,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,    -1,    -1,    -1,    -1,   579,   580,    -1,   582,
     583,   584,   585,    -1,   587,   588,   589,   590,   591,   592,
      -1,    -1,    -1,    -1,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
      -1,   624,    -1,   626,   627,    -1,   629,   630,    -1,   632,
     633,   634,   635,   636,   637,    -1,   639,   640,   641,   642,
     643,   644,   645,    -1,   647,   648,   649,    -1,   651,   652,
     653,   654,    -1,   656,   657,   109,   110,   660,    -1,    -1,
     663,   664,   665,    -1,   667,    -1,   669,   670,   671,   672,
      -1,   674,   675,   676,   677,    -1,   679,   680,    -1,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,    -1,   705,   706,   707,   708,   709,   710,   711,   712,
      -1,   714,   715,   716,    -1,   718,   719,   720,   721,    -1,
      -1,   724,   725,    -1,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,    -1,    -1,
     743,   744,    -1,    -1,   747,    -1,   749,   750,    -1,    -1,
     204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,    -1,   340,    -1,   342,    -1,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,    -1,   399,   400,   401,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,    -1,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,    -1,
      -1,   435,   436,   437,   438,   439,   440,   441,   442,   443,
      -1,   445,   446,   447,    -1,   449,   450,   451,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,    -1,   488,   489,   490,   491,   492,   493,
     494,   495,    -1,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,    -1,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,    -1,    -1,
      -1,   545,   546,   547,   548,   549,    -1,    -1,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,    -1,    -1,    -1,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,    -1,    -1,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,    -1,    -1,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,    -1,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,    -1,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,    -1,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,    -1,   703,
     704,    -1,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,    -1,    -1,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,     7,     8,    27,    29,    31,    33,    41,    60,    63,
      65,    66,    73,    80,    92,    98,   109,   110,   111,   119,
     130,   143,   145,   150,   180,   194,   195,   205,   206,   217,
     218,   219,   220,   222,   227,   233,   237,   241,   242,   281,
     283,   285,   290,   300,   301,   308,   309,   310,   311,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   353,   354,
     355,   356,   357,   358,   359,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   447,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   747,   748,   749,   750,
     770,   781,   784,   785,   786,   787,   788,   790,   796,   798,
     811,   887,   938,   939,   946,   947,   963,   964,   999,  1020,
    1052,  1112,  1168,  1220,  1322,  1371,  1374,  1384,  1389,  1395,
    1408,  1411,  1417,  1420,  1425,  1432,  1444,  1447,  1450,  1451,
    1453,  1456,  1457,  1459,  1460,  1463,  1464,  1467,  1685,  1687,
    1700,  1703,  1737,  1745,  1760,  1769,  1783,  1787,  1788,  1792,
    1802,  1809,  1817,  1819,  1824,  1827,  1828,  1860,  1879,  1881,
    1889,  1903,  1904,  1907,  1909,  1910,  1911,  1912,  1916,  1946,
    1953,  1955,  1964,  1967,  2007,  2009,  2014,  2015,  2016,  2017,
    2049,  2058,  2059,  2060,    49,   204,   325,   403,   452,   500,
     651,   655,   697,   727,  1323,  2021,  2022,  2023,  2024,   173,
     449,   498,  1419,  1790,   312,   337,   339,   340,   347,   352,
     354,   360,   375,   385,   400,   412,   417,   431,   445,   446,
     452,   458,   461,   464,   479,   489,   561,   575,   594,   596,
     625,   628,   638,   646,   658,   678,   681,   713,   723,   741,
     748,   875,  1881,  1888,  1898,  1904,  1905,  1906,  1907,  1908,
    1909,  1910,  1911,  1000,   519,  1412,   185,   500,   697,  1022,
    1746,    49,   114,   191,   204,   273,   426,   452,   500,   637,
     655,   697,   700,   727,   735,  1699,  1055,   873,   965,  1701,
    1820,   114,   395,   749,  1833,   264,   696,  1949,  1053,  1419,
    1221,  1113,    17,   519,  1775,   237,   247,   935,   940,   942,
    1888,   646,   727,  1949,  1057,  1704,   940,   941,   873,  1454,
     679,  1913,  1770,   940,  1954,  1738,  1888,  1452,  1054,   213,
    1862,   145,   281,   676,  1803,  2008,   170,   171,  1019,  1501,
     266,   779,  1882,   114,  1949,  1888,   744,  2011,  1686,   473,
    1888,  1419,   390,   948,  1956,   797,   590,   668,  1888,  1419,
    1810,  2011,  1888,  1825,     6,   661,   709,     6,   661,  1761,
     590,   668,   338,   339,   375,   417,   596,   613,   638,   678,
    2052,  1453,  1460,  1463,     0,    80,   782,   596,    49,    95,
     244,   280,   637,   727,   831,  1301,  1302,  1303,  1699,  2021,
    2022,  2023,  2024,    94,   122,  1470,  1471,  1681,  1448,  1445,
      83,   120,   279,  1462,  2018,  1461,  2018,   438,   449,   583,
     778,  1789,  1790,  1876,  1888,  1457,  1459,   238,   778,  1339,
    1888,   875,   754,   754,   875,    99,   111,  1698,   138,  1882,
    1888,  1893,  1060,  1061,  1064,  1087,  1888,  1698,  1363,  1364,
     251,  1488,  2025,  2026,  2021,   754,  1949,  1444,  1447,  1700,
    1703,  1737,  1745,  1786,   888,   778,   298,  1001,  1002,  1005,
    1009,   809,   810,  1882,   735,  1409,  1949,   220,    99,  1062,
    1087,    37,    38,    47,   433,   434,   741,   910,   911,   913,
     914,   921,   922,   923,   925,   931,   958,   959,  1881,  1889,
    1901,  1904,  1905,  1906,  1907,  1909,  1911,   113,   151,   466,
     608,  1748,  1758,  1759,  1698,  1689,    24,  1698,  1698,  1698,
    1698,  1698,    99,  1698,  1698,  1087,  1698,  1698,   651,  1949,
    1036,  1889,     6,     7,    41,    46,    63,    73,    98,   114,
     119,   145,   215,   233,   241,   273,   283,   284,   426,   431,
     442,   601,   605,   622,   627,   658,   690,  1893,  1968,  1972,
    1973,  1975,  1977,  1978,   994,   995,   151,   404,   465,  1706,
     462,   667,  1821,   122,  1829,  1947,    38,    87,    97,   126,
     133,   175,   225,   226,   239,   360,   434,   575,   907,   961,
     962,   964,   969,   970,   971,   972,   976,   977,   978,   979,
     980,   989,   990,   991,   992,   999,  1014,  1015,  1020,  1039,
    1045,  1052,  1891,  1892,  1949,    17,    18,    19,    20,    21,
      29,    30,    32,    39,    40,    43,    44,    45,    46,    48,
      49,    51,    52,    57,    61,    64,    84,    85,    86,    88,
      89,   100,   101,   102,   104,   105,   109,   110,   111,   119,
     121,   134,   148,   153,   154,   156,   162,   164,   167,   170,
     171,   172,   174,   175,   176,   178,   193,   197,   198,   199,
     201,   208,   219,   220,   228,   231,   251,   257,   258,   260,
     261,   262,   266,   274,   275,   276,   277,   287,   288,   289,
     295,   297,   321,   328,   336,   352,   361,   363,   364,   366,
     367,   368,   369,   370,   385,   397,   398,   399,   401,   402,
     449,   455,   457,   469,   491,   492,   496,   534,   536,   541,
     542,   543,   544,   554,   555,   571,   585,   591,   592,   599,
     606,   636,   642,   643,   649,   656,   686,   705,   706,   707,
     708,   712,   713,   727,   729,   739,   740,   742,   750,   759,
     760,   765,   770,   774,   775,   778,   779,  1463,  1469,  1495,
    1496,  1497,  1498,  1502,  1514,  1516,  1517,  1518,  1519,  1520,
    1521,  1522,  1523,  1524,  1525,  1526,  1534,  1538,  1539,  1540,
    1541,  1542,  1544,  1547,  1852,  1855,  1857,  1858,  1859,  1873,
    1880,  1881,  1888,  1898,    26,  1114,   501,   349,   356,   372,
     382,   383,   384,   392,   533,   547,   648,   685,   699,   943,
     945,   729,   936,   942,  1888,   873,  1421,   907,  1042,   151,
     404,  1707,  1744,   942,     6,   320,   605,  1965,  1966,  1973,
    1975,     6,    68,   249,   250,   259,   280,   465,   671,   672,
     673,   674,  1473,  1480,  1481,  2020,  1914,    32,    61,   352,
     452,   459,   498,   548,   585,   637,   654,   709,   741,   779,
    1265,  1881,  1886,  1888,  1902,  1904,  1905,  1906,  1908,  1909,
    1910,  1911,  1921,  1933,  1937,     6,    40,    41,    50,   114,
     128,   191,   204,   264,   331,   340,   352,   363,   387,   420,
     423,   425,   451,   452,   459,   460,   476,   498,   519,   575,
     589,   600,   603,   604,   618,   654,   661,   682,   738,  1265,
    1300,  1771,  1775,  1776,  1778,  1787,  1881,  1934,   942,  1949,
    1744,   770,  1717,  1726,  1040,  1495,  1861,  1804,  1888,  2011,
    1021,   330,  1893,  1426,  1385,   778,    10,  2012,  1495,  1567,
     791,   286,   793,  1793,   407,  1876,  1878,  1888,  1957,  1893,
     111,  1167,  1882,    94,  1390,   519,   607,   661,  1811,  1812,
     271,  2012,   737,  1826,   662,   809,   210,   301,  1375,  1376,
    1377,   662,   809,   264,  1764,  1698,  1698,    18,   104,   105,
     266,  1853,  1854,  1883,  2051,  2051,  2051,   449,  2050,  2051,
    2051,   771,   771,   777,  1888,  1167,  1167,  1167,   655,   857,
     114,   114,   114,   264,   651,   191,   204,   273,   426,  2025,
     324,   874,   874,  2021,    74,   770,   775,  1469,  1472,  1573,
    1574,  1575,  1576,  1577,  1588,  1589,  1590,  1591,  1593,  1594,
    1595,  1876,   188,   413,  1676,  1677,  1682,   299,  1618,  1470,
      92,   140,   145,   184,  1482,  1643,  1648,  1654,  1655,  1659,
     204,  1658,  1671,  1681,     6,    68,  2019,  1654,  1656,  1463,
    1466,  1467,  1655,  1657,  1465,     6,  1888,  1785,  1784,   778,
    1449,  1446,  1917,  1888,  1325,   726,  1326,   532,   701,   719,
      45,  1893,  1894,  1895,  1972,  1327,  1066,  1088,  1888,    84,
    1332,  1331,     5,    31,    73,   171,   211,   611,  1089,   873,
     264,   113,   574,  1365,  1366,  1367,   650,   426,   735,  2025,
    1893,  1396,   770,   889,  1888,  1010,    76,  1012,  1495,  1009,
     271,  1410,  1692,  1693,  1876,  1065,  1088,     5,  1889,  1023,
     912,   923,   925,    16,    17,    22,    23,    32,    58,    70,
      90,   123,   146,   147,   149,   157,   158,   159,   177,   212,
     237,   243,   268,   269,   270,   293,   294,   341,   343,   344,
     359,   396,   398,   421,   444,   455,   456,   487,   496,   542,
     543,   544,   550,   551,   567,   568,   591,   592,   610,   642,
     702,   705,   708,   731,   741,   750,   916,   958,  1227,  1229,
    1231,  1233,  1234,  1235,  1236,  1237,  1238,  1239,  1240,  1241,
    1242,  1263,  1881,  1904,  1907,  1909,  1911,   777,   777,   461,
     773,    35,   312,    94,  1749,    94,  1749,  1750,  1751,  1755,
    1756,  1888,  1758,  1888,   111,  1697,  1698,   875,   875,   875,
     875,  1888,  1088,   873,  1893,  1098,  1776,   873,  1690,  1698,
    1698,  1056,  1037,   600,  1976,   640,   640,   697,   700,   727,
     735,   770,  1494,   466,   577,  1980,   696,  1982,  1979,    50,
     735,  1981,   179,   357,   661,   271,   179,   773,   417,  1495,
     113,  1362,   380,   607,  1822,   347,   151,   379,  1835,  1876,
    1950,  1951,   298,   378,   452,  1881,  1890,  1899,  1907,  1909,
    1910,  1911,    94,    99,   554,  1888,  1890,  1890,  1890,  1890,
    1888,   298,  1890,  1888,   417,   961,   777,   785,   966,  1889,
     973,   993,  1888,    60,   339,    92,   150,   219,   300,   962,
    1892,  1418,   121,   759,   760,  1519,   770,   770,   770,   298,
    1495,  1570,  1571,   770,   770,   770,   770,   770,  1494,  1494,
    1494,   770,  1493,   770,   770,   770,   770,   770,   770,   770,
     770,   770,   770,   770,   770,   770,   770,  1495,   770,   109,
     110,   364,   770,  1568,  1569,  1873,  1880,  1898,   770,   770,
     770,   770,  1495,  1493,   770,   770,   770,   770,   770,   770,
     770,   770,   770,   770,   770,   196,   770,   770,   770,   770,
    1493,   770,   266,  1854,  1494,  1493,  1493,   770,   770,   770,
     770,   770,   770,   770,   770,   176,  1880,   770,   770,   770,
     770,   770,   770,   770,   266,   770,   770,   770,   770,   770,
     770,   770,   770,   770,   770,   770,   770,   770,   770,   770,
     770,   770,   729,   770,   770,   770,   770,   770,   729,   770,
     770,   770,   770,   770,   770,   770,   266,   770,   770,   770,
     266,   770,   770,   770,   770,   770,   770,   770,   770,   770,
     121,  1519,   121,  1519,  1519,  1222,  1463,  1495,  1860,  1888,
    1880,  1548,     9,    10,   125,   183,   185,   305,  1499,  1500,
      81,    96,   131,   168,   754,   755,   756,  1503,    15,   124,
     139,   216,   669,  1501,    69,   164,   182,   239,   240,   757,
     758,   759,   760,   761,   762,   763,   764,  1519,    34,   165,
     190,   190,   742,  1883,   778,   770,   196,  1115,    14,   271,
     773,   754,  1883,  1422,  1894,  1896,  1423,  1424,  1876,   725,
     122,  1708,  1709,  1710,  1976,   577,   179,    94,   179,  1455,
    1481,    61,  1888,  1920,  1936,   237,   637,   778,    17,    61,
     238,   754,  1266,  1267,  1720,  1893,    92,  1720,  1943,  1720,
    1893,  1923,   779,  1893,    17,    61,  1269,  1270,  1893,  1720,
     778,  1924,  1922,   662,   770,    49,   191,   204,   264,   273,
     426,   452,   651,   727,   735,   139,   299,  1782,    24,   680,
     362,   680,   680,   425,  1782,     6,  1179,  1893,  1647,  1648,
    1649,    94,   124,  1777,  1779,   362,   680,    92,   680,   696,
     668,     6,   342,   386,   388,   482,   531,   580,   670,   692,
    1765,  1766,  1767,   809,   468,   680,   810,  1649,  1782,  1779,
     501,   419,   365,   602,   696,   711,    92,  1487,   680,   732,
    1362,  1727,   773,   150,  1863,  1864,  1868,  1888,  1876,  1024,
    1029,   773,  1427,  1428,  1429,  1430,  1876,  1692,  1888,   350,
     561,   217,   561,  2013,   773,  1495,   794,    17,   252,   406,
     420,   422,   453,   468,   501,   519,   600,   607,   617,   630,
     661,   664,   680,  1794,  1799,  1800,  1881,  1949,    35,   779,
     949,   950,   951,   952,  1880,   575,   210,   360,  1501,  1888,
     789,   735,  1387,  1949,  1814,   347,  1813,   773,   646,  1888,
    2013,    92,  1378,  1379,  1378,   573,   746,   381,   773,  1378,
    1378,  1693,  1888,  1882,   773,   572,  2054,   691,  2055,   754,
     127,   632,  2053,    80,   783,  1888,   873,   873,  1167,  1167,
     817,   819,  1167,  1167,    24,  1167,  1167,   824,   826,   735,
     452,   452,  2025,  1573,  1577,  1589,  1590,  1591,  1592,  1593,
    1888,    93,  1478,    42,   116,   127,   134,   166,   228,   259,
    1584,  1585,   773,   195,  1586,  1587,   266,  1884,  1884,   779,
    1678,  1679,  1680,  1888,  1893,  1619,    99,  1622,  1618,   283,
     148,   176,   229,   276,   364,  1650,  1651,  1855,  1880,   124,
      26,  1647,  1482,  1888,  1482,  1483,  1483,  1466,  1786,  1791,
    1853,  1888,  1888,  1655,  1658,     6,    17,    61,   179,  1495,
    1945,   238,    61,  1164,  1165,  1176,  1177,  1274,   395,   877,
    1494,   779,   877,     5,  1067,  1876,   576,   394,  1084,  1084,
    1084,     4,  1894,  1895,  1896,  1988,  1992,  1876,  1367,   403,
     480,   875,  1876,   735,  1397,  1398,  1693,   890,   891,  1495,
    1495,   908,   909,   417,  1003,   799,  1692,    92,   351,   438,
     440,   530,   608,   773,  1413,  1414,  1415,  1067,  1084,   924,
     339,   914,   915,   777,   777,   770,  1247,  1249,  1247,  1248,
     378,  1247,  1256,  1257,   770,  1244,  1245,  1247,   202,  1244,
    1256,    17,   328,   346,   722,  1230,  1257,  1265,  1275,  1277,
      32,   293,  1230,  1237,  1239,  1256,  1230,  1244,   770,  1256,
    1230,  1247,  1249,  1230,  1248,   770,  1244,  1256,    32,   294,
     294,   296,  1244,  1247,   770,   920,  1248,  1248,  1248,  1247,
    1248,   196,   778,    34,  1272,  1244,   296,  1249,  1249,  1247,
    1247,  1248,   770,  1245,  1252,    61,   238,   960,    92,  1888,
      92,  1876,    14,  1747,  1695,  1696,  1877,  1888,    92,  1476,
    1477,  1618,   773,  1752,   778,  1757,    84,  1888,   875,   778,
    1098,  1971,  1973,   564,   737,  1099,  1100,   420,  1896,  1987,
    1692,  1691,  1688,   150,   124,  1038,   696,   771,   770,  1996,
    1996,  1996,  1996,  1896,  1988,   191,   204,   264,   452,  1974,
     426,   431,   442,   601,   622,   627,   658,   690,  1978,   111,
     267,  1708,   470,   727,  1495,  1823,  1433,   498,  1834,    11,
     754,  1614,  1615,  1616,   565,   737,   773,  1948,   974,   975,
     298,  1888,   554,    94,   122,   240,   974,   298,   770,   988,
     150,   777,   778,   967,  1495,   773,  1017,  1016,  1048,  1046,
    1051,  1047,  1692,   770,     6,  1558,  1617,  1558,  1558,  1495,
    1571,    76,   298,   417,  1495,  1567,  1495,    68,  1558,  1617,
     771,    57,    89,   104,   148,   176,   276,   771,  1663,  1667,
    1668,   771,  1495,  1495,  1873,   771,  1458,  1459,  1468,  1860,
      53,    54,    55,    56,   106,   107,   108,   160,   161,   232,
     306,   399,   469,   534,   536,   541,   606,   649,   739,   750,
    1611,  1612,  1495,    68,  1550,  1495,  1495,  1495,  1495,  1495,
    1611,  1495,  1880,  1569,   323,   773,   778,    68,  1558,  1495,
      68,  1558,  1495,  1495,  1495,   771,  1495,  1495,  1498,   771,
    1495,  1495,  1495,   771,   641,  1558,  1558,  1495,    68,  1558,
      25,   132,   272,  1495,  1515,  1558,  1558,  1495,  1495,    68,
    1558,  1495,  1567,  1495,   778,  1495,  1495,  1495,  1511,  1512,
    1495,  1495,  1495,  1495,  1495,  1495,  1495,  1495,  1495,  1567,
     396,   398,   705,   708,  1613,  1495,  1495,  1567,  1876,  1567,
    1495,  1495,  1495,  1567,  1567,  1567,    92,  1876,  1495,  1495,
    1495,  1567,    92,  1495,  1495,  1495,   771,  1495,  1876,  1495,
    1495,  1612,  1612,  1495,  1515,  1495,   771,   364,   778,  1874,
    1888,  1495,  1495,  1495,  1495,  1495,  1495,   771,   773,  1459,
    1495,   778,   779,  1549,  1893,    86,   175,   275,   724,  1501,
    1495,  1495,  1495,  1497,     6,   327,  1497,  1504,  1497,   770,
    1469,  1497,  1497,   139,    15,   124,   139,   216,  1498,  1498,
    1498,  1498,  1498,  1498,  1498,   121,  1498,   121,  1498,  1498,
    1498,  1498,  1498,  1271,  1893,  1519,   770,  1546,  1628,  1888,
     770,    99,  1880,  1527,   450,   484,   560,   641,  1513,   141,
     207,   497,   695,  1116,  1120,  1818,  1882,   945,   398,   705,
     708,   944,  1547,  1857,  1873,   773,   271,   773,  1948,  1043,
    1709,  1705,  1694,  1876,   773,    92,  1896,  1895,  1989,   191,
     204,   452,  1974,   761,  1485,  1486,  1488,   778,   778,  1720,
     773,  1915,  1973,  1888,  1272,  1495,  1896,   266,   571,   585,
    1944,  1945,   210,   483,  1938,  1939,  1940,  1941,   459,   498,
     654,  1935,  1720,  1945,  1888,   709,  1925,  1936,   773,  1927,
     680,   761,  1167,    24,   875,   875,  1876,   875,   875,   875,
    1876,  1896,  1876,  1487,  1487,   362,   680,  1782,   875,  1782,
    1777,   124,  1780,   501,   545,   680,  1774,  1774,  1782,  1888,
     875,  1782,  1895,  1777,  1782,  1882,   481,   693,   441,    92,
    1768,   773,   425,   680,  1876,  1779,  1777,  1777,  1495,  1782,
    1782,  1782,  1574,  1736,  1876,  1488,  1729,  1731,   770,  1724,
    1041,   773,   770,  1866,   906,   417,   779,   124,   773,   195,
    1438,  1440,  1441,   438,   608,  1386,   238,   350,   217,  1495,
     792,    61,   113,   795,  1495,  1732,   501,   501,   501,   501,
     347,   501,   809,   501,   773,  1487,  1795,   944,   954,  1893,
     773,   754,  1615,  1958,    84,   668,  1495,  1388,  1692,   271,
    1816,   809,  1812,  1888,     6,  1373,   621,   675,  1380,  1381,
    1372,   665,  1377,  1948,  1853,   588,  2056,  1893,   821,  1971,
    1988,  1893,   815,  1167,  1167,   812,  1876,  1167,   875,   825,
    1488,  2034,   861,  1488,  1167,  1167,  1167,   735,   773,   771,
     771,   771,   771,   771,   773,   771,  1573,     6,    11,    15,
      94,  1479,  1616,   127,   127,   187,  1596,   134,   228,  1584,
    1596,  1573,  1575,   770,  1478,  1683,  1893,   773,   778,  1495,
      26,   103,  1620,  1622,   565,   737,  1484,   429,  1880,   229,
     570,   773,   778,   657,  1644,  1672,  1918,  1165,    34,  1265,
     408,   163,   209,   251,   373,   385,   489,   561,   879,   886,
    1893,   614,   720,  1085,  1086,   477,  1081,  1082,  1083,  1090,
    1098,  1100,  1333,   770,  1882,   332,   526,  1075,  1076,  1077,
    1090,  1091,  1092,  1098,  1100,  1068,  1069,  1075,   471,   221,
     773,  1999,  1948,  1330,  1329,  1876,   773,   587,  1399,   771,
     773,  1011,   907,    29,   298,  1004,  1006,    71,   112,   152,
     472,   502,   503,   505,   506,   507,   508,   509,   511,   512,
     513,   514,   515,   516,   517,   518,   520,   521,   522,   619,
     620,   800,   801,   808,    92,  1416,   726,  1693,  1414,   373,
     558,   615,   721,  1078,  1079,  1080,  1090,  1094,  1095,  1096,
    1097,  1098,  1100,   285,  1063,   770,   927,  1029,    57,   148,
     176,   276,  1256,  1255,  1720,  1256,   176,   282,   307,   659,
    1246,  1246,  1275,  1276,  1277,  1266,    17,  1278,   378,  1258,
    1256,  1230,  1246,  1321,  1853,  1256,  1321,  1246,   296,  1246,
    1256,   917,   918,   919,  1889,   960,  1230,  1230,  1246,   230,
     715,  1888,    61,  1271,  1273,   214,  1243,  1276,  1278,  1230,
    1256,  1246,   176,  1246,  1495,  1495,   926,   104,   760,   934,
     935,  1660,  1662,  1586,   695,   773,  1753,   778,  1757,   200,
    1642,  1643,  1756,    94,   761,  1888,   179,  1888,  1099,   773,
    1720,  1721,   773,    28,   223,  1368,  1692,  1692,   907,   636,
    1035,  1888,  1997,  1998,   271,   301,  1970,    24,   761,  1876,
    1888,  1986,  1986,  1986,  1986,   996,  1702,  1896,  1434,  1435,
    1436,  1437,  1876,   115,   452,  1881,  1885,  1897,  1904,  1905,
    1906,  1907,  1908,  1909,  1910,  1911,   151,   210,   746,  1952,
    1662,  1951,  1495,   974,   122,   642,  1888,   974,   982,   983,
     987,  1888,   889,  1888,   910,  1029,  1036,  1039,  1042,  1040,
    1948,  1495,   771,  1559,   771,   771,   267,   417,  1495,  1495,
      11,   286,   771,   286,   773,  1535,   771,   761,   771,   773,
     773,   771,   771,  1459,    94,   771,  1537,   771,   773,   771,
     773,   773,   773,   773,   760,   773,   771,   770,  1873,  1880,
    1558,   771,   771,  1558,   771,   773,   771,   773,   771,   771,
     124,   773,   773,   773,   771,   771,    94,   773,  1558,   771,
      94,  1495,    94,  1495,    94,  1495,    94,   771,   771,   771,
     773,   771,  1558,   771,   771,   771,   771,  1880,   773,   771,
     773,   771,   773,   773,   773,   773,   773,   771,   771,   773,
     773,   773,   771,   773,   771,   771,   773,   771,   771,   771,
     771,   771,   771,   771,   771,  1876,   771,   771,   771,   773,
     771,  1876,   771,   771,   773,   771,   773,   773,   771,   773,
     773,   773,   771,   771,   773,  1880,  1888,   771,   778,   771,
     773,    11,   495,   773,  1289,   773,   771,  1611,  1611,  1567,
     771,   776,  1880,  1935,   238,    86,   175,   275,   724,   770,
      10,  1495,   424,  1497,  1497,   770,  1469,  1497,  1497,  1495,
    1495,  1629,   195,  1631,   770,   770,   778,  1488,  1531,  1532,
    1533,   365,   770,  1125,  1126,  1118,  1125,  1119,   583,  1128,
     129,   463,  1495,   754,  1896,  1896,  1424,   271,  1495,   135,
     136,   237,  1106,  1458,  1711,  1713,  1716,  1586,    98,  1973,
      94,   773,    24,  1986,  1986,  1986,  1986,   773,  1495,  1871,
    1880,  1888,  1888,  1945,  1936,    92,    92,  1720,  1720,   770,
     770,   573,   746,   495,   773,   773,   778,   778,   778,    61,
     452,   741,  1881,  1882,  1887,  1900,  1904,  1905,  1906,  1907,
    1908,  1910,  1911,  1495,  1720,  1938,  1926,  1928,  1929,   771,
    1888,   875,  1882,  1495,   875,  1782,  1782,  1882,    94,  1781,
     873,  1782,   607,  1649,  1767,  1780,  1777,  1876,  1782,  1782,
     237,  1586,  1732,   771,   773,  1725,   907,  1864,  1867,  1888,
    1865,   961,  1030,  1893,    61,  1431,  1888,  1429,  1876,  1111,
    1440,   114,   129,  1298,  1442,  1919,   793,   773,    62,  1805,
     809,  1800,  1692,  1801,   952,   955,   956,   951,   566,   567,
     643,   953,   443,   554,  1888,  1959,  1960,  1882,  1692,   438,
     608,   728,  1391,  1392,  1393,  1662,     6,  1815,   662,   773,
     725,  1382,  1762,   773,    92,  2057,  1163,  1164,   301,  1969,
    1999,   858,  1888,  1888,  1888,  1876,   814,   875,   883,   884,
     875,  2044,  1167,  1167,  1876,   875,  1888,   875,  1167,  1573,
    1573,   776,   569,   705,   709,  1474,  1475,  1521,  1475,   127,
    1596,  1596,  1588,   127,   179,   286,  1610,  1888,  1615,  1265,
    1268,  1679,  1888,  1495,  1623,  1872,  1621,   741,  1625,  1620,
    1662,  1651,  1652,   429,  1651,  1651,  1880,   539,  1645,  1872,
     770,  1945,  1721,  1721,   549,   251,   251,   650,  1882,   251,
     251,   251,  1882,  1882,  1721,   773,  1083,   155,   347,   393,
     475,   537,   556,   557,   561,   562,   563,   629,   678,   855,
     856,    49,   467,   578,   585,   593,   666,   727,   859,   860,
    1721,  1721,   773,  1077,  1070,  1071,  1090,  1091,  1092,    26,
     301,   734,  1990,   252,   355,   485,   559,   687,   747,  1984,
    1985,  1992,   301,  2002,  1324,   179,   869,  1336,   770,  2027,
    1328,  1398,    92,  1495,   267,  1007,  1006,   754,   754,   754,
     754,   754,   754,   754,   754,   754,   754,   754,   754,   754,
     754,   754,   754,   754,   754,   754,   754,   754,   754,   754,
     754,   773,   726,  1721,  1721,  1721,  1721,   773,  1080,   500,
     439,  1072,  1073,  1074,  1090,  1091,  1092,  1093,  1096,  1097,
    1098,  1100,   894,   895,   896,  1888,   125,   417,   771,   771,
     771,   771,  1888,   773,   307,   282,  1255,   771,   773,   771,
    1263,   771,   773,   960,   960,   778,   754,  1278,   186,   246,
     248,   932,   933,   934,   937,  1501,  1888,    57,    89,   148,
     176,   276,  1475,  1696,  1888,   286,  1888,   569,   140,  1653,
    1574,   778,  1757,  1876,  1973,  1178,  1893,  1896,  1948,   417,
     770,   982,   985,   771,   773,  1988,   320,  1986,   778,   778,
     271,   271,   271,   271,   908,  1711,   773,  1438,  1440,  1884,
     746,   498,   379,   122,   984,   771,   773,   968,  1018,   417,
    1049,  1013,  1044,  1890,  1044,  1044,   773,  1495,  1495,   267,
      17,    32,    58,    70,    90,   121,   123,   282,   294,   396,
     398,   551,   659,   708,   731,  1560,  1564,  1565,  1266,  1266,
    1560,  1567,   771,   121,   121,  1495,  1567,  1495,  1495,  1495,
    1495,  1495,  1495,  1495,  1498,   771,   771,  1495,  1495,  1495,
    1495,  1495,  1495,  1495,  1495,   771,  1495,    94,  1495,    94,
    1495,    94,  1495,   121,  1495,   771,  1512,  1495,  1511,  1567,
    1495,  1495,  1495,  1495,  1495,  1572,  1495,  1495,  1495,  1495,
    1567,   148,   759,  1660,  1664,   121,  1495,  1495,  1495,  1495,
    1495,   778,   778,  1888,  1495,    17,    32,  1284,  1285,  1286,
    1287,  1288,  1663,  1662,   771,  1495,   760,   760,  1887,  1495,
    1468,  1497,   771,   773,  1497,    10,  1495,   424,  1611,  1611,
    1630,  1888,    26,   771,  1543,  1566,  1567,  1880,  1495,   771,
     773,   770,  1134,  1498,  1126,   121,   140,  1160,  1663,   689,
    1129,   325,  1121,  1117,   944,   271,  1876,   417,  1714,  1715,
    1869,  1870,  1874,  1888,  1860,  1712,  1716,   577,  1987,  1895,
    1986,    94,    94,    94,    94,  1486,  1489,  1489,   778,  1720,
    1720,   784,  1896,  1945,   266,   266,   210,   626,   652,  1942,
    1940,  1939,   778,   778,  1720,  1945,  1927,   773,  1931,  1933,
    1937,   423,   738,  1660,  1665,  1772,   176,  1781,  1618,  1777,
    1740,  1741,  1874,  1476,  1489,  1488,  1728,  1730,  1732,   417,
     771,   773,    11,   777,   312,  1031,  1439,   770,  1945,  1732,
     754,    92,   301,  1796,  1797,   754,   773,    96,   131,   443,
     490,   554,   598,   754,   755,   756,  1961,  1963,  1618,    94,
    1394,  1392,  1381,   504,   808,  1383,    73,   635,  1763,  1662,
     535,   320,  2002,    91,   286,   715,  1311,   179,   179,   813,
     854,   855,   883,    11,   125,  2048,   373,   880,   881,   882,
     886,  2045,  2035,   875,   822,   226,   770,   634,   226,   770,
    1876,  1475,   266,  1498,    10,   271,  1573,  1588,   127,   127,
    1573,  1588,  1578,  1579,   771,   773,  1605,  1606,  1267,  1684,
     302,   303,   773,  1624,    12,    65,  1646,  1495,  1546,  1626,
    1627,  1625,  1652,  1484,   773,  1646,  1488,  1673,  1674,  1675,
    1273,  1267,   395,   395,   403,   480,   104,   148,   176,   276,
    1101,  1666,  1667,  1881,  1083,  1721,  1721,    26,  1721,  1723,
    1721,   155,   537,   301,  1721,  1722,  1722,   856,  1882,  1882,
    1882,  1882,  1662,  1882,  1882,   771,   773,  1101,  1101,  1077,
     773,  1071,   266,   585,  1893,  1993,  1994,   266,   266,   266,
      10,  1983,   523,   524,   527,   528,   529,  2000,  2001,   318,
    1334,     5,     7,     8,    31,    33,    39,    73,   114,   145,
     180,   184,   192,   195,   218,   254,   255,   256,   279,   304,
     325,   333,   335,   354,   361,   373,   380,   395,   405,   409,
     410,   416,   420,   428,   448,   474,   478,   488,   525,   538,
     540,   579,   585,   612,   623,   624,   625,   644,   651,   682,
     697,   698,   710,   713,  1109,  1170,  1172,  1175,  1176,  1177,
    1340,  1344,  1346,  1349,  1355,  1356,  1357,  1359,  1360,  1639,
    1881,   377,   647,   218,  1337,  1888,  2028,    11,  2027,     6,
     365,  1400,   908,  1495,   770,   770,  1662,   770,  1662,  1662,
    1882,  1882,  1665,  1882,  1662,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1662,  1882,   391,   561,   663,  1858,  1882,  1662,
     801,  1882,  1663,  1101,  1101,  1080,    99,  1721,   773,  1074,
     771,   773,    17,   293,   610,   642,   731,   958,  1228,  1229,
    1232,  1233,  1234,  1235,  1237,  1238,  1239,  1240,  1264,   928,
     929,   176,  1276,  1853,  1276,   918,  1888,   176,   773,   961,
     450,   778,  1574,  1757,  1487,   229,  1651,   224,  1754,  1618,
    1948,  1368,   150,   929,   986,    72,  1998,   301,  2004,   577,
     271,   761,   761,  1988,  1988,  1988,  1988,   997,   179,  1733,
    1436,  1876,  1440,   113,  1443,  1830,  1495,   983,   889,   339,
    1013,   150,  1495,  1495,  1248,  1248,  1244,  1252,    56,   123,
    1247,  1248,  1248,   123,  1248,  1247,   771,   771,   771,   771,
    1536,  1495,  1495,   771,   184,  1552,   771,   771,   773,   773,
     771,   773,   771,   124,  1528,  1529,   771,   771,   771,   771,
     773,   771,    92,   771,   771,   773,  1495,  1495,  1495,  1495,
     771,   771,    11,  1505,   771,    11,   771,   771,   773,   771,
     773,   771,   773,   771,   773,   771,   771,   771,   771,   148,
     176,   176,   771,   773,  1495,   771,   771,   773,   773,   771,
    1880,  1888,   778,   771,   770,  1279,  1279,    12,    65,   636,
     759,  1281,  1282,  1283,   773,   773,   771,  1495,  1495,   778,
     771,  1567,  1497,   771,   773,  1497,  1631,  1623,   184,  1545,
     771,  1489,  1533,  1122,  1123,  1124,  1888,   771,  1495,  1665,
      26,   770,  1136,   754,   770,  1126,  1896,   219,   771,   773,
     778,  1459,  1718,  1719,  1874,    94,    94,  1989,  1989,  1989,
    1989,    11,  1491,  1882,  1888,   761,  1880,  1945,  1945,   771,
     771,   374,   718,   210,  1888,  1888,  1945,  1930,  1932,    57,
      89,   148,   176,   276,  1649,  1773,  1782,   773,  1739,  1720,
    1615,  1732,   771,   773,   150,  1888,   770,   298,  1032,  1033,
     770,   203,  1607,  1608,  1609,  1888,   770,  1798,   210,   349,
     356,   372,   382,   383,   384,   392,   533,   547,   633,   648,
     685,   699,   957,   956,  1962,  1649,   546,   754,   773,   682,
     682,  1895,  1334,   395,   345,   463,   645,  1317,  1317,   179,
    1876,  1876,   135,   137,   139,  1102,  1104,  1169,  1171,  1172,
    1184,  1169,  2048,  1488,  1882,   880,   770,   901,   903,   905,
     875,   862,  2027,   829,   830,    58,   123,   212,   684,  1182,
     827,   828,   823,  1475,  1475,   179,  1581,  1588,  1588,   179,
    1583,  1495,   770,  1111,  1888,  1603,  1604,   365,  1837,  1872,
      11,   773,  1872,  1495,   771,   773,  1664,  1664,  1664,  1664,
    1664,  1664,   860,  1071,   266,    11,   286,  1991,  1995,   185,
    1984,  1662,  1662,  1662,  1858,   759,  1660,  1661,  2000,   145,
     281,   585,  1335,    36,   195,   371,   586,   694,  1188,  1196,
    1197,  1202,  1203,  1298,  1302,  1303,  1361,  1361,   195,  1361,
     195,   271,    36,    91,   195,   586,   694,  1201,  1298,  1361,
     408,  1721,   195,    26,  1721,  1111,    11,   271,   754,  1370,
    1721,  1721,  1721,  1721,   733,  1721,  1721,  1721,  1721,   195,
    1721,  1721,   408,  1721,   128,   697,   128,  1721,   195,   697,
    1721,  1721,  1721,  1721,  1361,  1721,  1721,   195,   584,   195,
     195,  1721,  1721,   411,   531,  1888,  1721,  1721,   195,  1170,
     773,  1108,  1109,  1344,   770,   778,  1187,  1204,  1875,  1888,
    1720,  1501,  2010,   329,   427,   863,   271,   409,   416,   865,
     771,   773,  2029,  2030,    11,     6,   770,  1401,  1008,   804,
     805,  1662,   806,   807,  1662,   802,   803,  1662,  1888,  1101,
    1074,   896,  1247,  1251,  1247,  1250,  1250,   920,  1250,   196,
     778,  1272,  1251,  1251,  1250,  1250,   930,   771,   933,  1888,
    1618,  1888,   429,   229,  1485,   771,  1495,   985,    98,  1988,
    1999,  1999,  1999,  1999,    76,    78,   998,   414,  1443,   493,
     113,   220,  1836,  1029,   907,  1561,  1247,  1562,  1563,   771,
    1611,  1611,    26,   235,  1551,  1495,  1495,  1567,   166,   344,
     771,   301,  1530,  1495,  1495,  1495,  1611,    58,    70,    90,
     123,   212,   282,   396,   398,   550,   551,   708,  1237,  1238,
    1506,  1507,  1508,  1509,  1560,  1495,  1495,  1495,  1495,    86,
     275,  1662,  1670,  1611,  1495,  1495,  1888,  1663,   771,  1289,
    1284,  1282,  1284,  1285,  1662,  1888,   771,  1567,   184,  1632,
      26,   771,  1491,   771,   773,  1611,  1120,   195,  1137,  1138,
    1663,  1122,  1869,   761,  1888,   771,   773,  1720,  1989,  1989,
    1882,  1888,   778,  1720,  1720,  1931,  1936,  1649,  1741,  1618,
    1732,  1605,  1489,  1732,  1458,  1034,  1033,     6,  1345,  1353,
    1354,  1888,   771,   773,  1665,  1806,  1807,   437,   145,   770,
    1882,   808,  1335,   745,  1876,   818,   820,    36,   586,  1185,
    1186,  1187,  1188,  1196,  1197,   139,  1876,  1107,  1108,   773,
    1171,  1103,  1488,   832,   902,   878,    14,   322,  1058,   179,
      11,  2040,  2041,   892,   893,   668,  2040,   892,  2027,  1580,
     286,  1582,   286,  1610,   113,   285,   448,  1598,  1599,  1602,
      79,    82,   181,   265,  1838,  1839,   142,  1840,  1646,  1628,
    1627,  1646,  1489,  1675,   585,  1882,  1993,   176,   176,   436,
     111,  1320,  1875,  1167,    93,   111,  1166,   733,    33,    91,
     203,   280,  1200,  1297,  1167,  1298,  1299,  1299,  1166,  1697,
    1419,  1697,  1345,  1265,  1697,   129,  1698,    93,  1697,   733,
     203,  1697,  1697,  1721,    61,  1888,  1419,  1640,  1641,  1874,
      61,  1662,  1669,  1110,  1876,    61,  1662,    61,  1662,    61,
    1662,  1173,    61,  1888,  1665,  1662,  1662,  1419,  1882,  1882,
    1721,  1662,  1893,  1354,   443,   490,   561,  1181,  1662,  1665,
    1665,  1697,    61,  1662,  1882,  1419,  1419,  1419,    61,   376,
     378,   415,   444,   580,   616,  1180,  1669,  1662,  1669,  1345,
       5,    73,  1357,  1183,  1185,  1888,   322,   443,  1369,   215,
    1291,  1205,   778,    61,  1666,  1882,  1888,   597,  1495,  1495,
     179,   869,   875,   179,   373,   870,  1888,  1458,  2029,  1402,
     476,   267,   771,   773,   771,   773,   771,   773,  1276,   230,
    1888,  1276,  1278,  1276,  1278,  1444,  1860,    94,   429,   577,
    1999,   301,  2003,  2003,  2003,  2003,   908,   994,  1734,   122,
     417,   417,  1276,  1276,  1276,   771,   771,  1553,  1872,  1853,
     140,  1554,  1555,  1556,   771,   773,   771,   489,   539,   607,
     771,   771,   771,   771,  1244,   123,  1248,    32,  1248,  1510,
     771,   771,   771,   771,   773,   771,   771,   771,  1280,   771,
     773,   771,    26,   207,   229,  1633,  1634,  1872,  1124,   677,
    1161,   129,   463,  1139,   771,   773,   771,   778,  1719,  1732,
     761,  1945,  1945,  1642,   771,   932,   771,   773,  1608,   771,
     773,    10,  1808,  1730,  1893,   816,   770,   770,    92,  1198,
     771,   773,  1876,  1105,  1836,  1171,  1169,   833,   204,   452,
     851,   852,   853,   895,   897,   898,   899,   879,   885,  2010,
    2046,    63,   119,   283,  1059,   647,  2029,   878,  2042,  1264,
     771,   894,  1882,  2042,   771,    11,  1495,   770,  1495,   770,
     771,  1298,  1298,  1599,    26,    26,    79,    26,  1839,   253,
     265,  1841,  1842,   770,    61,   121,   552,  1501,  1419,   770,
    1501,  1198,   770,   129,   129,  1299,  1167,  1320,  1888,  1167,
    1167,  1875,  1345,  1875,  1342,  1267,  1875,  1697,  1353,    92,
     129,  1875,  1875,  1882,  1345,   773,  1646,  1114,   770,  1663,
    1882,   301,  1204,  1345,  1350,  1345,   771,  1888,  1876,   653,
     958,  1206,  1226,  1227,  1888,  1611,   661,  1882,   412,  1338,
     301,  2031,  1405,  1888,     6,   770,  1403,   908,   805,   807,
     803,   196,   778,  1498,  2003,    98,  2000,  2005,  2006,   129,
     264,  1013,   150,   773,  1646,   771,  1557,  1651,  1495,   539,
     435,  1276,  1665,   771,  1662,  1645,   771,    15,   390,   398,
     705,   708,   717,  1635,  1636,  1857,  1646,  1662,  1121,   770,
    1127,  1140,  1888,  1138,   761,  1653,   267,  1354,  1807,   409,
     771,   576,   770,  1318,  1319,  1888,  1318,  1888,  1186,   771,
      11,  1162,  1107,   204,   452,   837,   838,   839,   845,   850,
     853,   922,   843,   981,   841,   981,   417,   853,   117,   124,
     189,   900,   771,   773,    67,  2048,   179,   863,  2043,   875,
     876,   226,   876,   226,  2029,  1610,  1610,    92,  1597,  1597,
    1853,  1853,    26,  1853,    26,    26,  1842,   266,   176,    84,
    1347,  1888,    84,  1495,  1167,  1320,  1888,   286,  1310,   715,
    1320,  1320,    73,   237,  1204,  1413,  1272,  1875,  1888,  1368,
    1341,  1641,  1801,   264,  1369,  1351,  1353,  1343,   770,  1292,
    1208,   778,  1199,  1200,  1207,   778,   864,   871,   872,    33,
     348,   498,   771,   773,  1404,   230,   715,  1888,   271,   577,
    2006,   283,  1876,  1050,  1872,   570,   773,   771,   771,   771,
     717,  1636,  1637,  1857,   642,   595,   430,  1638,   595,   770,
    1134,  1130,    61,   291,   292,   390,   466,  1141,   908,   353,
     770,  1318,   771,   773,  1646,   770,   771,   770,  1106,  1105,
     843,   841,   834,   839,   850,   845,   777,   777,   840,   777,
     840,  1490,   189,   642,   958,  1264,   899,  1025,  1026,  1488,
     868,   869,  2048,  2040,  2040,   771,   771,    99,   127,   184,
    1601,  1600,  1853,  1853,  1853,   771,   399,  1875,   583,   770,
    1348,   773,   771,  1320,  1310,   715,  1317,  1189,  1317,  1191,
    1192,    61,    61,  1369,  1419,   771,  1876,  1352,  1391,  1293,
    1888,   153,  1294,   203,   280,   304,   373,   486,   743,  1209,
    1210,  1219,  1260,  1261,  1262,  1290,  1501,  1881,  1227,    34,
      61,   175,   179,   333,   454,   653,  1213,  1215,  1253,  1254,
    1261,  1888,   677,   866,   961,   577,    33,    33,  1888,   203,
    1406,  1407,  1888,   196,  1498,  1735,  1586,  1044,  1646,  1651,
    1651,   447,    10,   447,    99,   390,   561,   704,  1132,  1133,
    1888,   771,   688,  1135,  1143,   703,   114,   373,   380,   395,
     525,   538,   558,   697,  1157,  1158,  1159,  1776,   859,   771,
    1948,  1319,   176,  1948,  1888,  1174,  1175,   848,  2048,   846,
    2048,   339,   417,   836,  1888,  1888,   876,   920,   196,   778,
     876,   910,  2036,   865,  1025,  2042,  2042,    26,    26,   770,
     770,  1200,  1663,  1137,  1888,  1195,  1193,  1317,   770,  1190,
     770,   770,   759,   760,   770,  1223,  1224,  1225,  1469,  1516,
    1856,  1881,  1111,   122,   771,   773,   451,   582,   660,   179,
    1295,   129,  1882,   694,  1261,   733,   129,   175,  1720,  1271,
    1225,   283,   326,    61,    11,   378,  1254,  1259,  1495,   418,
     867,   577,   577,   771,   773,   715,  1742,  1743,  1874,  1831,
    1637,   642,   186,   314,   771,   773,  1663,   770,  1145,  1147,
    1142,   408,  1721,  1721,   408,  1721,  1721,  1721,  1721,   770,
    1152,  1159,   420,   771,  1948,   301,   373,   488,  1305,  1309,
    1313,  1316,  1881,  1646,   771,  1306,  1308,  1313,  1315,   773,
     777,   981,   777,   981,  1029,   835,   844,   842,   230,  1888,
    1027,  1876,   870,   876,   876,  1607,  1609,   771,   771,   770,
     770,  1194,  1318,   770,  1318,  1318,  1858,  1858,  1222,   770,
    1888,    63,   283,    61,  1666,  1882,  1888,   172,   729,   642,
    1223,  1255,  1253,  1495,  1407,   773,  1720,  1268,  1131,  1133,
     770,  1146,  1147,  1148,   155,  1144,  1147,  1721,  1882,  1882,
    1721,  1666,  1666,  1663,  1893,   689,  1153,  1154,  1721,   286,
     715,  1304,  1307,  1312,  1313,  1314,   581,  1882,  1721,  1358,
    1359,  1360,  1316,  1720,  1358,  1315,  1888,   849,   847,   417,
    1490,   905,   770,   903,   904,   196,   778,   339,    92,   412,
     771,   771,  1318,  1318,   770,   771,  1318,   771,   771,   771,
    1137,    28,   223,   237,   561,  1296,  1296,   770,  1492,   417,
     678,  1214,  1743,  1732,  1832,  1135,   771,   773,   155,  1150,
    1151,  1498,  1882,  1882,  1155,   771,   773,  1178,  1317,  1317,
    1358,  1314,  1881,  1662,  1360,  1359,    61,  1666,  1882,  1888,
     771,  1025,  1025,   876,   878,   892,   226,   230,   715,  1888,
    1029,  1488,   871,   771,   771,  1318,  1304,   771,  1305,  1306,
     771,    61,   175,   319,   179,   179,   771,  1663,  1211,  1212,
    1260,  1211,   587,   683,   736,  1216,   229,  1843,  1147,   773,
    1149,  1156,  1893,  1154,  1888,  2047,  2047,   771,  2040,   196,
    1028,  2037,  1291,  1304,   771,  1304,   283,    63,   771,  1260,
    1217,  1218,  1219,   471,  1837,  1151,   771,  1157,   878,   715,
     417,    75,  1304,  1296,  1296,  1219,    26,  1840,   642,  1853,
     113,  1844,  2038,   176,   770,  1846,   446,   594,  2032,  2033,
     142,   229,  1845,   771,   779,  1847,  1848,  1874,   237,  1849,
    1893,  2039,  1893,   771,   773,  1850,  1851,  1874,   961,  1848,
     773,  1720,  1851,  1488,  1732,  1489
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   780,   781,   782,   781,   781,   783,   783,   784,   784,
     784,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   786,   787,   787,   789,   788,   790,   791,   792,   790,
     793,   794,   793,   795,   795,   797,   796,   799,   798,   800,
     800,   801,   801,   801,   801,   801,   801,   801,   801,   801,
     801,   801,   801,   801,   801,   801,   801,   801,   801,   801,
     801,   802,   802,   802,   803,   804,   804,   804,   805,   806,
     806,   806,   807,   808,   808,   808,   808,   808,   808,   808,
     809,   809,   810,   812,   813,   811,   814,   811,   815,   816,
     811,   817,   818,   811,   819,   820,   811,   821,   811,   822,
     811,   823,   811,   824,   811,   825,   811,   826,   811,   827,
     811,   828,   811,   829,   811,   830,   811,   811,   811,   811,
     811,   811,   831,   811,   832,   811,   833,   834,   835,   811,
     836,   836,   837,   837,   837,   838,   838,   839,   839,   840,
     842,   841,   844,   843,   845,   845,   845,   847,   846,   849,
     848,   850,   851,   851,   852,   852,   853,   853,   854,   854,
     855,   855,   856,   856,   856,   856,   856,   856,   856,   856,
     856,   856,   856,   856,   856,   856,   858,   857,   859,   859,
     860,   860,   860,   860,   860,   860,   860,   862,   861,   864,
     863,   863,   865,   865,   865,   865,   866,   866,   867,   867,
     868,   868,   869,   870,   870,   872,   871,   873,   874,   874,
     875,   875,   876,   876,   877,   877,   878,   878,   879,   879,
     879,   879,   879,   879,   879,   880,   880,   881,   881,   882,
     882,   884,   883,   885,   885,   886,   886,   888,   887,   889,
     889,   890,   890,   891,   891,   892,   893,   892,   894,   894,
     895,   896,   896,   896,   896,   896,   896,   897,   897,   898,
     898,   899,   899,   899,   899,   899,   899,   900,   900,   900,
     900,   900,   902,   901,   903,   904,   904,   905,   905,   906,
     906,   907,   907,   909,   908,   910,   910,   912,   911,   911,
     913,   913,   914,   914,   915,   915,   916,   916,   916,   917,
     918,   919,   919,   920,   921,   922,   922,   922,   922,   923,
     923,   923,   924,   923,   926,   925,   927,   927,   928,   930,
     929,   931,   931,   931,   931,   932,   932,   933,   934,   934,
     935,   936,   936,   937,   937,   937,   937,   937,   937,   938,
     938,   939,   940,   940,   941,   941,   942,   942,   943,   943,
     944,   944,   944,   945,   945,   945,   945,   945,   945,   945,
     945,   945,   945,   945,   945,   946,   947,   948,   948,   949,
     949,   950,   950,   951,   952,   952,   953,   953,   953,   954,
     955,   955,   956,   957,   957,   957,   957,   957,   957,   957,
     957,   957,   957,   957,   957,   957,   958,   958,   959,   959,
     960,   960,   960,   961,   961,   961,   961,   961,   961,   962,
     962,   962,   962,   962,   962,   962,   962,   962,   962,   962,
     962,   962,   963,   963,   963,   963,   965,   964,   966,   967,
     966,   968,   966,   970,   969,   971,   971,   973,   972,   972,
     975,   974,   976,   976,   976,   976,   977,   977,   977,   977,
     978,   979,   980,   981,   982,   984,   983,   986,   985,   987,
     987,   988,   988,   989,   990,   990,   990,   991,   991,   992,
     993,   993,   995,   996,   997,   994,   998,   998,   998,  1000,
     999,  1002,  1003,  1001,  1001,  1004,  1004,  1005,  1005,  1007,
    1008,  1006,  1010,  1011,  1009,  1012,  1012,  1013,  1013,  1014,
    1016,  1015,  1017,  1018,  1015,  1019,  1019,  1021,  1020,  1022,
    1023,  1020,  1024,  1026,  1027,  1028,  1025,  1030,  1029,  1031,
    1031,  1032,  1032,  1034,  1033,  1035,  1035,  1037,  1036,  1038,
    1038,  1038,  1039,  1041,  1040,  1043,  1042,  1044,  1046,  1045,
    1047,  1045,  1048,  1049,  1050,  1045,  1051,  1045,  1053,  1052,
    1054,  1052,  1055,  1056,  1052,  1057,  1052,  1058,  1058,  1059,
    1059,  1059,  1060,  1061,  1062,  1063,  1063,  1064,  1064,  1065,
    1066,  1067,  1067,  1069,  1068,  1070,  1070,  1070,  1071,  1071,
    1071,  1072,  1073,  1073,  1073,  1074,  1074,  1074,  1074,  1074,
    1074,  1074,  1074,  1075,  1076,  1076,  1076,  1077,  1077,  1077,
    1077,  1077,  1078,  1079,  1079,  1079,  1080,  1080,  1080,  1080,
    1080,  1080,  1080,  1081,  1082,  1082,  1082,  1083,  1083,  1083,
    1084,  1085,  1086,  1087,  1088,  1089,  1089,  1089,  1090,  1091,
    1092,  1093,  1094,  1095,  1096,  1097,  1098,  1099,  1099,  1100,
    1100,  1101,  1101,  1103,  1102,  1102,  1102,  1104,  1104,  1105,
    1105,  1106,  1106,  1107,  1108,  1108,  1110,  1109,  1111,  1113,
    1112,  1115,  1114,  1116,  1117,  1116,  1116,  1116,  1118,  1116,
    1116,  1119,  1116,  1120,  1120,  1121,  1121,  1122,  1122,  1123,
    1123,  1124,  1125,  1126,  1127,  1128,  1128,  1129,  1130,  1129,
    1131,  1129,  1132,  1132,  1133,  1134,  1135,  1135,  1136,  1136,
    1137,  1137,  1139,  1138,  1140,  1141,  1142,  1141,  1143,  1141,
    1141,  1141,  1141,  1144,  1144,  1145,  1145,  1146,  1146,  1148,
    1149,  1147,  1150,  1150,  1151,  1151,  1152,  1152,  1153,  1153,
    1155,  1154,  1156,  1157,  1157,  1158,  1158,  1159,  1159,  1159,
    1159,  1159,  1159,  1159,  1159,  1159,  1160,  1160,  1160,  1161,
    1161,  1162,  1162,  1163,  1163,  1164,  1164,  1165,  1165,  1166,
    1166,  1167,  1167,  1168,  1168,  1169,  1169,  1170,  1170,  1171,
    1171,  1171,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,
    1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,
    1172,  1172,  1173,  1172,  1172,  1172,  1172,  1172,  1172,  1172,
    1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,  1172,
    1172,  1174,  1174,  1175,  1176,  1177,  1178,  1179,  1180,  1180,
    1180,  1180,  1180,  1180,  1180,  1181,  1181,  1181,  1182,  1182,
    1182,  1182,  1183,  1184,  1185,  1185,  1186,  1186,  1186,  1186,
    1186,  1187,  1187,  1189,  1188,  1190,  1188,  1191,  1188,  1192,
    1188,  1193,  1188,  1194,  1188,  1195,  1188,  1196,  1197,  1198,
    1199,  1199,  1200,  1201,  1201,  1202,  1202,  1203,  1205,  1204,
    1207,  1206,  1208,  1206,  1209,  1209,  1210,  1210,  1211,  1211,
    1212,  1212,  1213,  1213,  1213,  1213,  1214,  1213,  1213,  1213,
    1215,  1215,  1216,  1216,  1216,  1216,  1217,  1217,  1218,  1218,
    1219,  1219,  1219,  1219,  1221,  1220,  1222,  1222,  1223,  1223,
    1224,  1224,  1225,  1225,  1226,  1226,  1227,  1227,  1227,  1227,
    1227,  1228,  1228,  1228,  1228,  1228,  1229,  1229,  1229,  1229,
    1229,  1229,  1229,  1229,  1229,  1229,  1230,  1230,  1230,  1230,
    1231,  1231,  1231,  1231,  1231,  1231,  1231,  1231,  1232,  1232,
    1232,  1232,  1232,  1232,  1232,  1232,  1233,  1233,  1233,  1233,
    1233,  1234,  1234,  1234,  1234,  1234,  1234,  1234,  1234,  1234,
    1234,  1234,  1234,  1234,  1234,  1234,  1234,  1235,  1235,  1236,
    1236,  1236,  1236,  1236,  1236,  1236,  1236,  1237,  1238,  1238,
    1239,  1239,  1240,  1240,  1240,  1240,  1240,  1241,  1241,  1241,
    1241,  1241,  1242,  1242,  1242,  1243,  1243,  1244,  1244,  1244,
    1245,  1246,  1246,  1246,  1246,  1246,  1246,  1247,  1247,  1247,
    1247,  1248,  1248,  1249,  1249,  1250,  1250,  1251,  1251,  1252,
    1252,  1253,  1253,  1254,  1254,  1254,  1254,  1254,  1254,  1254,
    1255,  1255,  1256,  1256,  1257,  1258,  1259,  1260,  1260,  1260,
    1261,  1261,  1261,  1261,  1261,  1261,  1262,  1262,  1263,  1264,
    1265,  1265,  1266,  1266,  1267,  1267,  1268,  1268,  1269,  1269,
    1270,  1270,  1271,  1272,  1272,  1273,  1273,  1274,  1274,  1275,
    1275,  1275,  1276,  1276,  1277,  1277,  1277,  1277,  1278,  1278,
    1280,  1279,  1281,  1281,  1282,  1283,  1283,  1283,  1283,  1284,
    1285,  1286,  1286,  1287,  1288,  1288,  1289,  1289,  1290,  1290,
    1291,  1292,  1292,  1293,  1293,  1294,  1294,  1294,  1294,  1295,
    1295,  1295,  1295,  1295,  1296,  1296,  1296,  1296,  1296,  1297,
    1297,  1298,  1298,  1299,  1299,  1300,  1300,  1300,  1301,  1301,
    1302,  1303,  1304,  1304,  1305,  1305,  1306,  1306,  1307,  1307,
    1308,  1308,  1309,  1309,  1310,  1310,  1311,  1311,  1311,  1312,
    1312,  1313,  1313,  1313,  1313,  1313,  1313,  1314,  1314,  1315,
    1316,  1316,  1317,  1317,  1317,  1318,  1318,  1319,  1319,  1320,
    1320,  1321,  1321,  1323,  1324,  1322,  1325,  1322,  1322,  1326,
    1322,  1327,  1322,  1328,  1322,  1329,  1322,  1330,  1322,  1322,
    1322,  1322,  1322,  1331,  1322,  1322,  1332,  1333,  1322,  1334,
    1334,  1334,  1335,  1335,  1335,  1335,  1335,  1336,  1336,  1336,
    1336,  1337,  1337,  1338,  1338,  1339,  1339,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1340,  1341,  1340,  1340,
    1342,  1340,  1343,  1340,  1340,  1340,  1340,  1340,  1344,  1345,
    1345,  1347,  1346,  1348,  1348,  1348,  1350,  1349,  1351,  1352,
    1351,  1353,  1353,  1354,  1355,  1355,  1356,  1357,  1357,  1357,
    1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,
    1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,  1357,
    1357,  1357,  1357,  1357,  1357,  1357,  1358,  1358,  1358,  1358,
    1358,  1359,  1359,  1360,  1360,  1361,  1361,  1362,  1362,  1364,
    1363,  1365,  1365,  1366,  1366,  1367,  1367,  1368,  1368,  1368,
    1369,  1369,  1369,  1370,  1370,  1370,  1370,  1372,  1371,  1373,
    1371,  1371,  1371,  1374,  1375,  1375,  1376,  1376,  1377,  1377,
    1377,  1379,  1378,  1380,  1380,  1381,  1381,  1381,  1382,  1382,
    1382,  1383,  1383,  1385,  1384,  1386,  1386,  1386,  1387,  1388,
    1387,  1390,  1389,  1391,  1391,  1392,  1392,  1393,  1393,  1393,
    1394,  1394,  1396,  1395,  1397,  1397,  1398,  1399,  1399,  1400,
    1400,  1401,  1402,  1401,  1403,  1404,  1403,  1405,  1405,  1405,
    1406,  1406,  1406,  1407,  1407,  1408,  1408,  1409,  1410,  1409,
    1412,  1411,  1413,  1413,  1414,  1414,  1415,  1415,  1415,  1415,
    1415,  1415,  1416,  1416,  1418,  1417,  1419,  1419,  1419,  1421,
    1420,  1420,  1422,  1422,  1423,  1423,  1424,  1426,  1425,  1427,
    1427,  1428,  1428,  1429,  1430,  1431,  1431,  1433,  1432,  1434,
    1434,  1435,  1435,  1436,  1437,  1439,  1438,  1441,  1440,  1442,
    1442,  1443,  1443,  1445,  1444,  1446,  1444,  1448,  1447,  1449,
    1447,  1450,  1450,  1452,  1451,  1454,  1455,  1453,  1456,  1457,
    1458,  1458,  1459,  1459,  1461,  1460,  1462,  1460,  1463,  1463,
    1464,  1465,  1464,  1464,  1466,  1466,  1467,  1468,  1469,  1469,
    1470,  1470,  1471,  1472,  1472,  1473,  1473,  1474,  1474,  1474,
    1475,  1475,  1475,  1476,  1477,  1477,  1478,  1478,  1479,  1479,
    1479,  1479,  1480,  1480,  1481,  1481,  1481,  1482,  1482,  1483,
    1483,  1484,  1484,  1484,  1485,  1485,  1485,  1486,  1486,  1487,
    1488,  1489,  1490,  1491,  1491,  1491,  1491,  1491,  1492,  1492,
    1492,  1493,  1493,  1493,  1494,  1494,  1495,  1495,  1495,  1495,
    1495,  1495,  1495,  1495,  1495,  1495,  1495,  1495,  1495,  1496,
    1496,  1496,  1496,  1497,  1497,  1497,  1497,  1497,  1497,  1497,
    1497,  1497,  1497,  1497,  1497,  1497,  1497,  1497,  1497,  1498,
    1498,  1498,  1498,  1498,  1498,  1498,  1498,  1498,  1498,  1498,
    1498,  1498,  1498,  1498,  1498,  1498,  1498,  1498,  1499,  1499,
    1500,  1500,  1501,  1501,  1502,  1502,  1503,  1503,  1503,  1503,
    1503,  1503,  1504,  1504,  1505,  1505,  1506,  1506,  1506,  1507,
    1507,  1507,  1507,  1507,  1507,  1508,  1508,  1508,  1510,  1509,
    1509,  1511,  1512,  1512,  1513,  1513,  1513,  1513,  1514,  1515,
    1515,  1515,  1515,  1515,  1515,  1515,  1515,  1516,  1516,  1516,
    1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,
    1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,
    1516,  1516,  1516,  1516,  1516,  1516,  1517,  1517,  1517,  1517,
    1518,  1518,  1519,  1519,  1519,  1519,  1519,  1519,  1520,  1520,
    1521,  1521,  1522,  1522,  1522,  1522,  1522,  1522,  1522,  1522,
    1522,  1522,  1522,  1522,  1522,  1522,  1522,  1522,  1522,  1522,
    1522,  1522,  1522,  1523,  1523,  1523,  1523,  1523,  1523,  1523,
    1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,
    1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,  1523,
    1523,  1523,  1523,  1523,  1523,  1524,  1524,  1524,  1524,  1524,
    1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,
    1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,
    1524,  1524,  1525,  1525,  1525,  1525,  1525,  1525,  1525,  1525,
    1525,  1527,  1526,  1526,  1528,  1528,  1529,  1529,  1530,  1530,
    1531,  1531,  1532,  1532,  1533,  1534,  1534,  1534,  1534,  1534,
    1534,  1534,  1535,  1536,  1534,  1534,  1534,  1534,  1534,  1534,
    1534,  1534,  1534,  1534,  1534,  1537,  1534,  1538,  1538,  1539,
    1539,  1539,  1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,
    1540,  1540,  1540,  1540,  1540,  1541,  1543,  1542,  1542,  1544,
    1544,  1545,  1546,  1548,  1547,  1549,  1549,  1549,  1549,  1550,
    1550,  1551,  1551,  1552,  1552,  1553,  1553,  1554,  1554,  1555,
    1556,  1557,  1557,  1557,  1559,  1558,  1560,  1561,  1560,  1562,
    1560,  1563,  1560,  1560,  1560,  1560,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1565,  1565,  1565,  1565,  1566,  1566,
    1567,  1567,  1568,  1568,  1569,  1569,  1570,  1570,  1571,  1571,
    1572,  1572,  1573,  1573,  1574,  1575,  1575,  1576,  1576,  1577,
    1578,  1577,  1579,  1577,  1577,  1580,  1577,  1581,  1577,  1577,
    1582,  1577,  1583,  1577,  1577,  1584,  1584,  1584,  1585,  1585,
    1586,  1586,  1587,  1588,  1588,  1588,  1588,  1589,  1589,  1590,
    1590,  1591,  1591,  1592,  1592,  1593,  1593,  1594,  1595,  1596,
    1596,  1597,  1597,  1597,  1597,  1598,  1598,  1600,  1599,  1601,
    1599,  1602,  1602,  1603,  1604,  1603,  1606,  1605,  1607,  1607,
    1608,  1608,  1609,  1609,  1610,  1610,  1611,  1611,  1611,  1611,
    1611,  1611,  1611,  1611,  1611,  1611,  1611,  1611,  1612,  1612,
    1612,  1612,  1612,  1612,  1612,  1612,  1612,  1613,  1613,  1613,
    1613,  1614,  1614,  1614,  1615,  1615,  1616,  1617,  1617,  1618,
    1619,  1618,  1620,  1621,  1620,  1622,  1622,  1623,  1623,  1624,
    1624,  1624,  1625,  1625,  1626,  1626,  1627,  1629,  1628,  1630,
    1630,  1631,  1631,  1632,  1632,  1633,  1633,  1634,  1634,  1635,
    1635,  1636,  1636,  1636,  1637,  1637,  1637,  1638,  1638,  1638,
    1638,  1638,  1638,  1639,  1640,  1640,  1641,  1642,  1642,  1644,
    1643,  1645,  1645,  1646,  1646,  1646,  1647,  1647,  1648,  1648,
    1648,  1649,  1650,  1650,  1650,  1651,  1651,  1651,  1651,  1651,
    1651,  1652,  1653,  1653,  1653,  1653,  1654,  1654,  1654,  1655,
    1655,  1656,  1657,  1658,  1658,  1658,  1659,  1659,  1660,  1660,
    1661,  1661,  1662,  1662,  1662,  1662,  1662,  1662,  1663,  1663,
    1663,  1663,  1663,  1664,  1664,  1664,  1664,  1665,  1665,  1665,
    1665,  1665,  1666,  1666,  1666,  1666,  1666,  1667,  1668,  1668,
    1669,  1669,  1670,  1670,  1670,  1672,  1671,  1673,  1673,  1674,
    1674,  1675,  1677,  1676,  1678,  1678,  1679,  1680,  1680,  1680,
    1681,  1683,  1684,  1682,  1682,  1682,  1686,  1685,  1688,  1687,
    1689,  1687,  1687,  1687,  1687,  1687,  1687,  1687,  1687,  1687,
    1690,  1687,  1687,  1687,  1687,  1687,  1687,  1691,  1687,  1692,
    1692,  1693,  1694,  1695,  1695,  1696,  1697,  1697,  1698,  1698,
    1699,  1699,  1701,  1702,  1700,  1704,  1705,  1703,  1706,  1706,
    1706,  1706,  1707,  1707,  1708,  1708,  1710,  1709,  1711,  1711,
    1712,  1711,  1713,  1714,  1714,  1715,  1715,  1716,  1717,  1717,
    1718,  1718,  1719,  1720,  1720,  1721,  1721,  1722,  1722,  1723,
    1723,  1725,  1724,  1727,  1726,  1728,  1728,  1729,  1729,  1730,
    1730,  1731,  1731,  1732,  1732,  1732,  1733,  1734,  1735,  1733,
    1736,  1736,  1738,  1739,  1737,  1740,  1740,  1741,  1742,  1742,
    1743,  1744,  1744,  1746,  1745,  1747,  1747,  1748,  1748,  1749,
    1750,  1751,  1752,  1751,  1753,  1751,  1754,  1754,  1755,  1755,
    1756,  1756,  1757,  1757,  1758,  1758,  1759,  1759,  1759,  1761,
    1762,  1760,  1763,  1763,  1763,  1764,  1764,  1765,  1765,  1766,
    1766,  1767,  1767,  1767,  1767,  1767,  1767,  1767,  1767,  1767,
    1768,  1768,  1770,  1769,  1771,  1771,  1771,  1771,  1771,  1771,
    1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1772,  1771,
    1773,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,
    1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,
    1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,
    1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,  1771,
    1771,  1771,  1771,  1771,  1771,  1774,  1774,  1774,  1775,  1775,
    1776,  1776,  1777,  1777,  1778,  1778,  1779,  1779,  1780,  1780,
    1781,  1781,  1782,  1782,  1782,  1784,  1783,  1785,  1783,  1786,
    1786,  1786,  1786,  1786,  1786,  1787,  1787,  1788,  1789,  1789,
    1789,  1789,  1790,  1790,  1791,  1791,  1791,  1793,  1792,  1795,
    1794,  1794,  1796,  1796,  1797,  1798,  1797,  1799,  1799,  1800,
    1800,  1800,  1800,  1800,  1800,  1800,  1800,  1800,  1800,  1800,
    1800,  1800,  1800,  1800,  1800,  1800,  1801,  1801,  1802,  1803,
    1804,  1803,  1803,  1805,  1805,  1806,  1806,  1806,  1807,  1808,
    1808,  1810,  1809,  1811,  1811,  1813,  1812,  1814,  1812,  1812,
    1815,  1815,  1816,  1816,  1817,  1818,  1817,  1820,  1819,  1821,
    1821,  1821,  1822,  1822,  1822,  1822,  1823,  1823,  1825,  1824,
    1826,  1826,  1827,  1829,  1830,  1831,  1832,  1828,  1833,  1833,
    1834,  1834,  1835,  1835,  1835,  1836,  1836,  1836,  1837,  1837,
    1838,  1838,  1839,  1839,  1839,  1839,  1840,  1840,  1841,  1841,
    1842,  1842,  1843,  1843,  1844,  1844,  1845,  1845,  1846,  1846,
    1846,  1847,  1847,  1848,  1848,  1849,  1849,  1850,  1850,  1851,
    1852,  1852,  1852,  1852,  1853,  1853,  1854,  1854,  1854,  1855,
    1855,  1855,  1856,  1856,  1857,  1857,  1857,  1857,  1857,  1857,
    1857,  1857,  1857,  1857,  1858,  1858,  1858,  1858,  1858,  1859,
    1859,  1859,  1861,  1860,  1862,  1862,  1863,  1863,  1865,  1864,
    1866,  1866,  1867,  1867,  1868,  1869,  1869,  1870,  1870,  1871,
    1871,  1872,  1873,  1873,  1873,  1873,  1873,  1874,  1874,  1874,
    1874,  1874,  1875,  1875,  1875,  1875,  1876,  1876,  1876,  1877,
    1877,  1878,  1879,  1879,  1880,  1880,  1880,  1881,  1882,  1883,
    1884,  1885,  1885,  1886,  1886,  1887,  1887,  1887,  1888,  1888,
    1889,  1889,  1890,  1890,  1891,  1891,  1892,  1893,  1893,  1893,
    1894,  1894,  1894,  1895,  1895,  1896,  1897,  1897,  1897,  1897,
    1897,  1897,  1897,  1897,  1897,  1898,  1898,  1898,  1898,  1898,
    1898,  1898,  1898,  1898,  1898,  1899,  1899,  1899,  1899,  1899,
    1899,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,  1900,
    1901,  1901,  1901,  1901,  1901,  1901,  1901,  1902,  1902,  1902,
    1902,  1902,  1902,  1902,  1902,  1902,  1903,  1903,  1903,  1903,
    1903,  1903,  1903,  1904,  1904,  1904,  1904,  1904,  1904,  1904,
    1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,
    1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,
    1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,
    1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,
    1904,  1904,  1904,  1904,  1904,  1904,  1904,  1904,  1905,  1905,
    1905,  1905,  1905,  1905,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1907,  1907,  1907,  1908,  1908,  1908,
    1909,  1909,  1909,  1910,  1910,  1910,  1910,  1910,  1910,  1910,
    1910,  1910,  1910,  1910,  1910,  1910,  1910,  1910,  1910,  1910,
    1910,  1910,  1910,  1910,  1910,  1910,  1910,  1910,  1910,  1910,
    1910,  1910,  1910,  1910,  1910,  1910,  1910,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1913,  1912,  1914,  1915,  1912,  1917,  1916,
    1918,  1916,  1919,  1916,  1920,  1920,  1922,  1921,  1923,  1921,
    1924,  1921,  1926,  1925,  1925,  1927,  1927,  1929,  1928,  1930,
    1928,  1932,  1931,  1931,  1933,  1933,  1933,  1934,  1934,  1934,
    1934,  1935,  1935,  1935,  1935,  1936,  1936,  1936,  1937,  1937,
    1937,  1937,  1937,  1937,  1937,  1937,  1937,  1937,  1937,  1937,
    1937,  1937,  1937,  1938,  1938,  1938,  1938,  1939,  1940,  1941,
    1941,  1942,  1942,  1942,  1942,  1943,  1943,  1944,  1944,  1944,
    1945,  1945,  1945,  1945,  1945,  1947,  1946,  1948,  1948,  1948,
    1949,  1949,  1950,  1950,  1951,  1952,  1952,  1952,  1952,  1952,
    1954,  1953,  1956,  1955,  1957,  1957,  1958,  1957,  1959,  1959,
    1960,  1960,  1961,  1961,  1961,  1961,  1962,  1961,  1963,  1963,
    1963,  1963,  1963,  1964,  1965,  1965,  1965,  1965,  1965,  1965,
    1965,  1965,  1966,  1966,  1967,  1968,  1968,  1968,  1968,  1968,
    1968,  1968,  1969,  1969,  1970,  1970,  1971,  1971,  1972,  1973,
    1973,  1974,  1974,  1975,  1975,  1976,  1976,  1977,  1977,  1979,
    1978,  1980,  1978,  1981,  1978,  1982,  1978,  1978,  1978,  1978,
    1978,  1978,  1978,  1978,  1978,  1978,  1978,  1978,  1978,  1978,
    1978,  1978,  1978,  1978,  1978,  1978,  1978,  1978,  1978,  1978,
    1978,  1978,  1978,  1978,  1983,  1983,  1984,  1984,  1985,  1985,
    1985,  1986,  1986,  1986,  1986,  1987,  1987,  1988,  1988,  1989,
    1989,  1990,  1990,  1991,  1991,  1992,  1992,  1992,  1992,  1993,
    1993,  1994,  1995,  1995,  1995,  1996,  1996,  1997,  1997,  1998,
    1999,  1999,  1999,  1999,  1999,  2000,  2000,  2000,  2000,  2000,
    2001,  2001,  2002,  2002,  2003,  2003,  2004,  2004,  2005,  2005,
    2006,  2006,  2008,  2007,  2009,  2010,  2010,  2011,  2011,  2012,
    2012,  2012,  2013,  2013,  2013,  2014,  2015,  2015,  2015,  2016,
    2017,  2018,  2018,  2018,  2019,  2019,  2019,  2020,  2020,  2020,
    2020,  2020,  2020,  2020,  2020,  2020,  2021,  2021,  2022,  2023,
    2024,  2024,  2024,  2025,  2025,  2026,  2026,  2027,  2027,  2028,
    2028,  2030,  2029,  2031,  2031,  2031,  2031,  2032,  2032,  2033,
    2033,  2035,  2036,  2037,  2038,  2039,  2034,  2041,  2040,  2043,
    2042,  2045,  2046,  2044,  2047,  2047,  2048,  2048,  2049,  2049,
    2049,  2049,  2049,  2049,  2050,  2050,  2051,  2051,  2051,  2052,
    2052,  2052,  2053,  2053,  2053,  2054,  2054,  2055,  2056,  2055,
    2057,  2057,  2058,  2058,  2059,  2059,  2060
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     0,     5,     3,     0,     0,     6,
       0,     0,     3,     1,     3,     0,     3,     0,     6,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     5,     5,     5,
       1,     0,     1,     3,     1,     0,     1,     3,     1,     0,
       1,     3,     1,     3,     3,     3,     3,     3,     3,     3,
       0,     1,     1,     0,     0,     8,     0,     8,     0,     0,
      16,     0,     0,    15,     0,     0,    15,     0,     6,     0,
      10,     0,    11,     0,     5,     0,     6,     0,     5,     0,
      11,     0,    14,     0,    11,     0,    14,    10,     9,     6,
       4,     3,     0,     3,     0,    13,     0,     0,     0,    16,
       1,     3,     1,     1,     2,     1,     2,     1,     2,     0,
       0,     8,     0,     6,     4,     4,     1,     0,     5,     0,
       5,     2,     0,     1,     1,     2,     3,     3,     0,     1,
       1,     2,     3,     2,     1,     3,     2,     1,     3,     3,
       3,     1,     1,     1,     1,     3,     0,    12,     1,     3,
       2,     2,     2,     2,     2,     2,     2,     0,    12,     0,
       6,     2,     0,     1,     3,     1,     0,     2,     0,     2,
       0,     1,     4,     0,     2,     0,     2,     0,     0,     1,
       3,     1,     0,     1,     0,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     1,     2,     1,     1,     2,     0,
       1,     0,     2,     1,     2,     3,     3,     0,     4,     0,
       3,     0,     1,     3,     1,     0,     0,     2,     3,     1,
       1,     2,     6,     8,     4,     6,     3,     0,     1,     3,
       1,     3,     7,     9,     5,     7,     4,     0,     1,     1,
       1,     2,     0,     4,     0,     1,     3,     1,     1,     0,
       3,     2,     3,     0,     2,     0,     1,     0,     3,     1,
       2,     3,     2,     3,     0,     1,     1,     3,     5,     1,
       2,     1,     3,     3,     1,     3,     5,     5,     4,     1,
       4,     2,     0,     6,     0,     6,     0,     3,     0,     0,
       3,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       3,     0,     1,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       1,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       0,     2,     2,     1,     1,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     5,     1,     0,
       3,     0,     5,     0,     2,     1,     1,     0,     3,     1,
       0,     2,     1,     2,     3,     4,     1,     2,     3,     4,
       2,     2,     2,     0,     0,     0,     3,     0,     3,     1,
       3,     0,     3,     3,     3,     4,     5,     2,     4,     2,
       1,     3,     0,     0,     0,     7,     0,     2,     2,     0,
       6,     0,     0,     4,     1,     1,     2,     1,     2,     0,
       0,     6,     0,     0,     6,     0,     2,     0,     1,     1,
       0,     6,     0,     0,     9,     0,     2,     0,     5,     0,
       0,     7,     0,     0,     0,     0,     7,     0,     4,     0,
       2,     1,     2,     0,     5,     0,     1,     0,     3,     5,
       3,     5,     3,     0,     6,     0,     6,     1,     0,     5,
       0,     5,     0,     0,     0,    11,     0,     5,     0,     3,
       0,     3,     0,     0,     8,     0,     3,     1,     1,     1,
       1,     1,     2,     4,     5,     0,     4,     4,     4,     3,
       3,     2,     2,     0,     2,     1,     2,     3,     1,     1,
       1,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     0,     1,     1,
       1,     1,     1,     0,     5,     3,     1,     2,     4,     0,
       4,     1,     4,     1,     0,     1,     0,     4,     0,     0,
       3,     0,     6,     6,     0,     4,     2,     2,     0,     3,
       2,     0,     3,     0,     1,     0,     3,     0,     1,     1,
       3,     1,     4,     3,     3,     0,     2,     0,     0,     7,
       0,    10,     1,     3,     1,     1,     0,     2,     0,     3,
       1,     3,     0,     6,     1,     0,     0,     4,     0,     3,
       1,     1,     1,     1,     1,     1,     3,     1,     3,     0,
       0,     5,     1,     3,     1,     1,     0,     3,     1,     3,
       0,     4,     1,     0,     1,     2,     1,     3,     4,     3,
       3,     3,     3,     4,     4,     3,     0,     4,     2,     0,
       2,     0,     1,     0,     1,     1,     2,     1,     1,     0,
       3,     0,     3,     1,     3,     0,     1,     1,     2,     1,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     0,     6,     1,     1,     3,     4,     4,     2,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       1,     0,     1,     2,     4,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     3,     1,     1,     1,     1,
       2,     1,     2,     0,     9,     0,    10,     0,     9,     0,
       9,     0,    10,     0,    11,     0,    10,     2,     7,     7,
       0,     1,     4,     0,     1,     0,     1,     2,     0,     4,
       0,     3,     0,     3,     0,     1,     2,     1,     0,     1,
       2,     1,     0,     1,     2,     3,     0,     6,     5,     5,
       0,     2,     0,     1,     1,     1,     0,     1,     2,     1,
       1,     2,     2,     1,     0,     3,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     3,     3,     2,
       1,     1,     3,     3,     3,     3,     0,     1,     2,     2,
       3,     3,     2,     3,     3,     4,     3,     3,     3,     3,
       2,     3,     3,     3,     2,     2,     3,     1,     2,     2,
       2,     2,     3,     3,     2,     3,     2,     2,     3,     3,
       2,     3,     2,     2,     2,     2,     2,     5,     5,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     2,     1,     2,     3,     2,     1,     1,     1,
       1,     1,     1,     1,     2,     0,     3,     0,     1,     1,
       5,     0,     1,     1,     1,     2,     2,     3,     3,     3,
       3,     0,     1,     0,     1,     0,     1,     0,     1,     0,
       1,     2,     1,     1,     2,     4,     1,     3,     2,     1,
       0,     2,     0,     1,     2,     2,     2,     2,     2,     1,
       1,     3,     3,     3,     3,     2,     1,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     0,     2,     1,     1,
       1,     1,     1,     0,     2,     1,     1,     0,     1,     2,
       1,     1,     0,     1,     1,     2,     1,     2,     0,     1,
       0,     4,     1,     1,     1,     0,     1,     2,     1,     1,
       2,     1,     3,     3,     1,     1,     0,     2,     0,     1,
       5,     0,     3,     3,     1,     0,     2,     2,     2,     0,
       3,     3,     6,     6,     1,     1,     2,     2,     2,     2,
       2,     1,     1,     0,     1,     1,     1,     1,     0,     1,
       1,     1,     0,     1,     0,     1,     0,     1,     1,     2,
       1,     2,     1,     2,     0,     2,     0,     2,     2,     2,
       2,     3,     2,     3,     3,     3,     3,     1,     1,     1,
       1,     3,     1,     1,     1,     4,     2,     1,     4,     0,
       1,     1,     3,     0,     0,     8,     0,     5,     7,     0,
       5,     0,     5,     0,    10,     0,     9,     0,    11,     3,
       4,     3,     3,     0,     8,     9,     0,     0,     7,     0,
       2,     2,     0,     2,     3,     3,     5,     0,     3,     1,
       4,     0,     3,     0,     2,     0,     1,     0,     2,     2,
       2,     2,     1,     1,     1,     4,     4,     0,     6,     4,
       0,     5,     0,     6,     4,     3,     1,     7,     2,     1,
       1,     0,     6,     0,     3,     2,     0,     5,     0,     0,
       6,     1,     3,     1,     1,     3,     3,     3,     2,     2,
       4,     4,     2,     7,     6,     5,     5,     4,     5,     4,
       4,     2,     2,     7,     6,     3,     5,     1,     1,     1,
       1,     1,     3,     3,     3,     5,     0,     1,     1,     2,
       2,     3,     3,     3,     3,     0,     1,     0,     1,     0,
       2,     0,     1,     2,     1,     1,     1,     0,     1,     1,
       0,     2,     1,     0,     1,     1,     1,     0,     6,     0,
       5,     4,     4,     3,     0,     1,     1,     3,     3,     2,
       2,     0,     2,     1,     3,     0,     1,     1,     0,     2,
       4,     1,     3,     0,     5,     0,     1,     1,     3,     0,
       4,     0,     4,     0,     1,     1,     2,     1,     1,     1,
       0,     2,     0,     5,     1,     3,     2,     0,     3,     1,
       4,     1,     0,     4,     1,     0,     4,     0,     1,     3,
       0,     1,     3,     1,     1,     2,     6,     3,     0,     4,
       0,     3,     0,     1,     1,     2,     1,     1,     1,     1,
       1,     2,     0,     2,     0,     6,     0,     1,     1,     0,
       4,     4,     3,     5,     1,     3,     4,     0,     6,     1,
       1,     1,     3,     2,     3,     1,     1,     0,     6,     1,
       1,     1,     3,     3,     4,     0,     6,     0,     2,     0,
       4,     0,     2,     0,     3,     0,     4,     0,     3,     0,
       4,     1,     1,     0,     3,     0,     0,     5,     6,     7,
       1,     2,     1,     1,     0,     3,     0,     3,     3,     3,
       1,     0,     4,     3,     1,     1,     1,     1,     1,     4,
       0,     1,     2,     1,     1,     0,     1,     0,     1,     1,
       2,     1,     2,     9,     0,     1,     0,     2,     3,     1,
       4,     4,     2,     1,     1,     1,     1,     3,     5,     0,
       1,     0,     2,     1,     3,     1,     1,     3,     4,     0,
       0,     0,     0,     0,     2,     2,     1,     1,     0,     2,
       3,     0,     2,     3,     0,     2,     3,     3,     3,     2,
       3,     4,     3,     4,     3,     4,     3,     4,     1,     3,
       3,     6,     1,     3,     4,     5,     7,     6,     8,     5,
       6,     4,     3,     5,     4,     6,     3,     4,     1,     3,
       3,     3,     3,     3,     3,     3,     5,     5,     5,     6,
       6,     3,     3,     3,     3,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       2,     1,     1,     1,     2,     1,     2,     2,     0,     3,
       1,     4,     1,     3,     1,     1,     1,     1,     3,     1,
       4,     4,     4,     3,     3,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     6,     4,
       4,     7,     6,     3,     4,     6,     6,     4,     4,     4,
       4,     4,     4,     6,     8,    10,     1,     1,     3,     1,
       1,     3,     1,     2,     2,     2,     2,     2,     1,     3,
       4,     6,     4,     6,     2,     2,     4,     4,     4,    10,
       6,     8,     6,     4,     4,     6,     4,     3,     4,     1,
       4,     3,     4,     6,     8,     2,     2,     8,     8,     6,
       8,     6,     6,     6,     6,     2,     6,     6,     8,     8,
       6,     8,     6,     2,     8,     8,     4,     2,     2,     2,
       6,     6,     4,     4,     8,     4,     4,     4,     4,     3,
       8,     6,     8,     4,     6,     4,     6,     4,     4,     4,
       6,     8,     4,     3,     6,     4,     6,     5,     8,     7,
      10,     1,     6,     4,     4,     4,     4,     4,     6,     4,
       6,     0,     5,     6,     2,     3,     0,     4,     0,     3,
       0,     1,     1,     3,     4,     4,     5,     4,     4,     4,
       5,     4,     0,     0,     7,     4,     5,     4,     5,     4,
       4,     4,     4,     4,     5,     0,     9,     3,     3,     1,
       1,     1,     3,     3,     3,     3,     3,     4,     4,     4,
       6,     4,     6,     4,     6,     5,     0,     7,     4,     4,
       4,     4,     1,     0,     3,     3,     1,     3,     5,     0,
       1,     0,     2,     0,     3,     4,     2,     0,     1,     1,
       2,     1,     3,     3,     0,     3,     2,     0,     4,     0,
       4,     0,     4,     2,     1,     1,     1,     1,     2,     1,
       2,     2,     1,     2,     1,     2,     2,     3,     0,     1,
       1,     3,     1,     3,     1,     3,     4,     5,     1,     3,
       3,     3,     1,     1,     1,     1,     4,     1,     3,     3,
       0,     6,     0,     8,     4,     0,     8,     0,    10,     6,
       0,     8,     0,    10,     6,     1,     2,     1,     1,     2,
       0,     1,     5,     1,     1,     1,     1,     1,     3,     1,
       3,     3,     3,     3,     3,     3,     3,     5,     3,     0,
       1,     0,     2,     3,     3,     1,     1,     0,     7,     0,
       7,     1,     2,     0,     0,     2,     0,     2,     0,     1,
       1,     1,     1,     3,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     0,     1,     2,     0,     1,     0,
       0,     3,     0,     0,     3,     0,     4,     4,     2,     0,
       1,     1,     0,     2,     3,     1,     3,     0,     7,     0,
       1,     0,     3,     0,     3,     0,     3,     1,     1,     1,
       4,     2,     2,     2,     1,     2,     2,     0,     3,     2,
       2,     3,     3,     3,     3,     1,     2,     0,     1,     0,
       4,     4,     2,     0,     1,     1,     0,     1,     2,     5,
       4,     1,     1,     3,     3,     1,     3,     1,     1,     1,
       1,     1,     0,     2,     3,     4,     1,     2,     1,     0,
       1,     1,     1,     0,     2,     2,     2,     1,     0,     1,
       2,     2,     2,     1,     2,     2,     2,     2,     1,     1,
       1,     1,     1,     2,     1,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     6,     0,     1,     3,
       1,     3,     0,     2,     3,     1,     1,     2,     1,     3,
       2,     0,     0,     7,     2,     1,     0,     3,     0,     8,
       0,     8,     4,     4,     5,     6,     4,     4,     5,     5,
       0,     6,     4,     4,     5,     6,     4,     0,     6,     1,
       3,     1,     2,     1,     3,     1,     0,     2,     0,     2,
       0,     1,     0,     0,     8,     0,     0,     6,     0,     1,
       1,     1,     1,     1,     2,     1,     0,     2,     1,     2,
       0,     3,     3,     0,     1,     3,     1,     1,     3,     1,
       3,     1,     3,     1,     1,     0,     1,     1,     1,     1,
       1,     0,     4,     0,     4,     0,     1,     0,     1,     3,
       1,     5,     3,     1,     1,     1,     0,     0,     0,     7,
       5,     1,     0,     0,    11,     3,     1,     3,     3,     1,
       3,     0,     1,     0,     3,     0,     3,     2,     3,     3,
       2,     5,     0,     5,     0,     6,     0,     2,     1,     3,
       2,     4,     0,     2,     0,     2,     1,     1,     1,     0,
       0,     7,     0,     2,     2,     0,     1,     0,     1,     1,
       3,     1,     1,     2,     2,     2,     1,     1,     1,     1,
       0,     3,     0,     3,     2,     4,     4,     3,     4,     4,
       1,     3,     3,     3,     3,     6,     2,     2,     0,     6,
       0,     7,     5,     2,     1,     1,     1,     5,     5,     2,
       2,     1,     4,     3,     2,     3,     2,     2,     1,     4,
       4,     3,     3,     3,     2,     3,     2,     3,     3,     3,
       3,     4,     3,     2,     3,     3,     3,     3,     4,     3,
       3,     4,     3,     3,     3,     1,     1,     1,     1,     1,
       0,     1,     0,     2,     0,     1,     1,     1,     0,     2,
       0,     2,     0,     3,     3,     0,     4,     0,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     2,
       1,     1,     0,     3,     0,     1,     1,     0,     4,     0,
       4,     1,     0,     1,     4,     0,     3,     3,     1,     2,
       2,     2,     2,     3,     3,     2,     1,     1,     1,     1,
       2,     1,     1,     1,     1,     2,     0,     1,     2,     2,
       0,     3,     1,     0,     5,     0,     1,     3,     1,     0,
       3,     0,     3,     3,     1,     0,     4,     0,     3,     2,
       0,     1,     0,     2,     5,     0,     6,     0,     5,     0,
       1,     1,     0,     1,     1,     2,     1,     2,     0,     3,
       0,     4,     2,     0,     0,     0,     0,    22,     1,     1,
       0,     1,     0,     1,     1,     0,     1,     1,     0,     2,
       2,     1,     3,     4,     3,     3,     0,     2,     2,     1,
       3,     3,     0,     4,     0,     3,     1,     1,     0,     3,
       2,     3,     1,     1,     2,     0,     2,     3,     1,     5,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       2,     2,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     1,     1,     1,     1,     1,     2,
       2,     2,     0,     4,     0,     1,     1,     3,     0,     7,
       0,     3,     1,     3,     1,     1,     1,     3,     5,     3,
       5,     1,     1,     3,     4,     5,     4,     1,     3,     4,
       4,     5,     1,     5,     3,     2,     1,     3,     2,     2,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       1,     3,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     0,     0,     7,     0,     4,
       0,     6,     0,     7,     1,     3,     0,     3,     0,     3,
       0,     3,     0,     3,     2,     0,     2,     0,     2,     0,
       4,     0,     3,     1,     1,     1,     1,     0,     1,     1,
       1,     0,     2,     2,     2,     3,     5,     5,     3,     5,
       5,     4,     6,     8,     8,     2,     3,     3,     3,     5,
       2,     3,     3,     1,     1,     3,     3,     1,     3,     2,
       2,     2,     2,     2,     1,     1,     3,     1,     4,     4,
       1,     1,     1,     1,     1,     0,     5,     0,     2,     1,
       1,     1,     1,     3,     3,     1,     1,     2,     2,     2,
       0,     3,     0,     3,     3,     2,     0,     6,     1,     2,
       1,     1,     1,     1,     1,     1,     0,     5,     1,     1,
       1,     1,     1,     3,     6,     6,     6,     6,     7,     7,
       5,     3,     4,     1,     3,     8,     8,     8,     8,     9,
       6,     4,     0,     3,     0,     3,     1,     3,     2,     1,
       1,     0,     1,     1,     2,     0,     1,     1,     3,     0,
       3,     0,     3,     0,     3,     0,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     3,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     2,     2,     0,     1,     3,     1,     2,     2,
       2,     1,     3,     3,     1,     1,     3,     1,     3,     1,
       3,     1,     1,     1,     1,     4,     5,     4,     1,     3,
       1,     2,     0,     2,     5,     0,     3,     3,     1,     1,
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     1,     0,     2,     0,     2,     0,     3,     2,     1,
       2,     1,     0,     3,     1,     0,     1,     0,     1,     0,
       3,     2,     0,     1,     2,     4,     4,     5,     4,     2,
       3,     2,     1,     1,     0,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     3,
       3,     3,     3,     0,     1,     3,     3,     0,     3,     1,
       3,     0,     3,     0,     3,     4,     4,     1,     1,     0,
       2,     0,     0,     0,     0,     0,    19,     0,     2,     0,
       4,     0,     0,     8,     0,     1,     1,     1,     4,     4,
       3,     4,     3,     3,     0,     3,     1,     3,     5,     1,
       1,     1,     0,     1,     1,     0,     2,     0,     0,     3,
       0,     2,     6,     3,     4,     4,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (thd, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256



/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)

/* This macro is provided for backward compatibility. */
#ifndef YY_LOCATION_PRINT
# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (thd);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep, thd);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, THD *thd)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                                              , thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, THD *thd)
{
  YYUSE (yyvaluep);
  YYUSE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yystacksize);

        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 1725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!thd->bootstrap &&
              (!(thd->lex->lex_options & OPTION_LEX_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 24728 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3:
#line 1734 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 24755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 1759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 24764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 1842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_deallocate_prepare((yyvsp[0].ident_sys));
          }
#line 24772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 1854 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "PREPARE..FROM"; }
#line 24778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 1856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_prepare((yyvsp[-3].ident_sys), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 24788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 1865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_execute((yyvsp[-1].ident_sys), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 24797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 77:
#line 1870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "EXECUTE IMMEDIATE"; }
#line 24803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 78:
#line 1872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= NULL; }
#line 24809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 1874 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_execute_immediate((yyvsp[-2].item), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 24818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 1881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 24824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 1883 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "EXECUTE..USING"; }
#line 24830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 1885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[0].item_list);
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 24839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 1893 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 24848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 84:
#line 1898 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (((yyval.item_list)= (yyvsp[-2].item_list))->push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 24857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 1909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 24866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 1914 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 24876 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 1925 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 24884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 1929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 24890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 1939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 24898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 1943 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 24906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 1947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 24914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 94:
#line 1951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 24922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 1955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 24930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 1959 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 24944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 1969 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 1974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 24961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 1978 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 24969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 1982 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 24977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 1986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 24985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 1990 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 24993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 103:
#line 1994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 25002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 1999 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 25010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2003 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 25018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2008 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 25050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 2036 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 25058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 2040 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 25066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 2044 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 25074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 114:
#line 2059 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 25082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2072 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 25090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2085 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 25098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 25106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2096 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 25125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2111 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 25133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 25143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 25153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 25163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2133 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 25173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 25182 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2151 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 25194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
            if (lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-2].num), (yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
               MYSQL_YYABORT;
          }
#line 25210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2176 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!lex->first_select_lex()->
                add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                  TL_WRITE, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->create_info.default_table_charset= NULL;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 25231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 25241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2199 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           LEX *lex= thd->lex;
           if (lex->main_select_push())
             MYSQL_YYABORT;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (!lex->first_select_lex()->
               add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                 TL_WRITE, MDL_EXCLUSIVE))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 25275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2229 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->first_select_lex()->table_list.first->db.str,
                       lex->first_select_lex()->table_list.first->
                         table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 25304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 25313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2261 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-7].key_type), &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-8].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 25324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 25341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2279 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 25352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2287 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2291 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 25369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2297 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 25380 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2305 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2309 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 25397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2314 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 25409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2323 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                     DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 25421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2331 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2336 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 25440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2343 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 153:
#line 2347 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 25458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_procedure_start((yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 25475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_create_routine_finalize();
          }
#line 25483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2366 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 25493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 25501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2377 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-6].object_ddl_options) | (yyvsp[-2].object_ddl_options), (yyvsp[-4].sp_aggregate_type), (yyvsp[-1].spname)))
              MYSQL_YYABORT;
          }
#line 25510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2384 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 25519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-6].object_ddl_options) | (yyvsp[-2].object_ddl_options), (yyvsp[-4].sp_aggregate_type), (yyvsp[-1].spname)))
              MYSQL_YYABORT;
          }
#line 25528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2398 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 25537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-6].object_ddl_options) | (yyvsp[-2].object_ddl_options), (yyvsp[-4].sp_aggregate_type), (yyvsp[-1].spname)))
              MYSQL_YYABORT;
          }
#line 25546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2411 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 25555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2417 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-6].object_ddl_options) | (yyvsp[-2].object_ddl_options), (yyvsp[-4].sp_aggregate_type), (yyvsp[-1].spname)))
              MYSQL_YYABORT;
          }
#line 25564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 25573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_udf_function((yyvsp[-9].object_ddl_options) | (yyvsp[-5].object_ddl_options), (yyvsp[-7].sp_aggregate_type), (yyvsp[-4].ident_sys),
                                              (Item_result) (yyvsp[-2].num), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 25583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2438 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-8].object_ddl_options) | (yyvsp[-6].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 25593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 25603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2451 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 25611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 25619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2458 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 25625 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25631 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE,
                                                &sp_handler_package_spec,
                                                (yyvsp[-3].spname), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_c_chistics(Lex->sp_chistics);
          }
#line 25646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2477 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-8].spname), (yyvsp[0].spname), (yyvsp[-5].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 25655 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE_BODY,
                                                &sp_handler_package_body,
                                                (yyvsp[-3].spname), (yyvsp[-8].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_c_chistics(Lex->sp_chistics);
            Lex->sp_block_init(thd);
          }
#line 25671 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2497 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 25680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2502 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 25690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2508 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-10].spname), (yyvsp[0].spname), (yyvsp[-7].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 25699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_add_empty(thd)))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init(0);
          }
#line 25709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock_handlers)= (yyvsp[-1].spblock_handlers); }
#line 25715 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2533 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2547 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2551 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex)= new (thd->mem_root)
                           sp_lex_local(thd, thd->lex))))
              MYSQL_YYABORT;
            thd->m_parser_state->m_yacc.reset_before_substatement();
          }
#line 25744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2562 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_FUNCTION;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_function,
                                                        NOT_AGGREGATE)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
            (void) is_native_function_with_warn(thd, &(yyvsp[0].ident_sys));
          }
#line 25763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2579 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-7].lex);
            (yyval.lex)= (yyvsp[-6].lex);
          }
#line 25774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2589 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_PROCEDURE;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_procedure,
                                                        DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
          }
#line 25792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2604 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-5].lex);
            (yyval.lex)= (yyvsp[-4].lex);

          }
#line 25804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2617 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 25816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2626 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 25828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).init(); }
#line 25834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2639 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 25846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2647 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->lex->sp_body_finalize_function(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 25857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 25869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->lex->sp_body_finalize_procedure(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 25880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2690 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 25891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2697 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 25902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2718 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 25917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2723 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 25927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2729 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 25937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2735 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 25949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2743 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 25959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2749 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 25969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 25981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2763 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 25993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2771 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 26005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 2779 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 26017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 2787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 26029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 2795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 26041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 2803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 26057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 2815 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 26074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 2831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 26084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 2838 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 26090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 2848 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 26099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 2853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
          }
#line 26108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 2858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 26117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 2863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 26126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 2868 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 26135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 2873 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 26144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 2878 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 26152 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 2885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 26173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 2906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 26185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 2917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 26194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 2924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 26202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 2930 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 2932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 2938 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 26228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 2944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 2953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 26249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 2960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 26257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 2968 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 26265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 2974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 2980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 26282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 2989 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 2991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 26297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 2998 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 26334 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3031 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* return back to the original memory root ASAP */
            if (Lex->sp_body_finalize_event(thd))
              MYSQL_YYABORT;
          }
#line 26344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3040 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->first_select_lex()->db= null_clex_str;
           lex->account_options.reset();
         }
#line 26358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3052 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_aggregate_type)= NOT_AGGREGATE; }
#line 26364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3053 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_aggregate_type)= GROUP_AGGREGATE; }
#line 26370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3058 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3063 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spname)= NULL; }
#line 26394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3071 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spname)= (yyvsp[0].spname); }
#line 26400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3081 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 26430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3089 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 26436 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3091 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 26442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3093 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 26448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3095 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 26454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3097 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 26460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3099 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 26466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3104 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 26472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3106 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 26478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3111 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 26490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3116 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 26496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.init(); }
#line 26502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3126 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 26508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 26514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3131 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_SUID; }
#line 26520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_NOT_SUID; }
#line 26526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 26535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3141 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3157 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 26549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 26557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3169 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
            Lex->sphead->m_param_end= Lex->sphead->m_param_begin;
          }
#line 26566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3174 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
          }
#line 26574 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3178 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 26582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3190 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 3198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar))))
              MYSQL_YYABORT;
          }
#line 26600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-3].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3218 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3223 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 26645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3242 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].spvar)->mode= (yyvsp[-1].spvar_mode);
            if (unlikely(Lex->sp_param_fill_definition((yyvsp[-2].spvar))))
              MYSQL_YYABORT;
          }
#line 26655 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3248 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-8].spvar)->mode= (yyvsp[-7].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-8].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3260 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].spvar)->mode= (yyvsp[-3].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-4].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3272 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].spvar)->mode= (yyvsp[-2].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyvsp[-3].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 26705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3280 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 26711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 26717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3282 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 26723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 26729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3284 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 26735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3289 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 26743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3294 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 26751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3301 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= Lex->sphead->m_param_end=
              YYLIP->get_cpp_tok_start() + 1;
          }
#line 26760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3318 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3323 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3328 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 26780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 26789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).init();
          }
#line 26797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3343 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[0].spblock); }
#line 26803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3348 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->sp_add_instr_cpush_for_cursors(thd, Lex->spcont)))
              MYSQL_YYABORT;
          }
#line 26812 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[0].spblock));
          }
#line 26820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3360 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 26826 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 26834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 26840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3370 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 26848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).init(); }
#line 26854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3382 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3388 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3394 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3403 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spvar_definition)= Lex->row_field_name(thd, (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spvar_definition_list)= Row_definition_list::make(thd->mem_root, (yyvsp[0].spvar_definition))))
              MYSQL_YYABORT;
          }
#line 26902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (((yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list))->append_uniq(thd->mem_root, (yyvsp[0].spvar_definition)))
              MYSQL_YYABORT;
          }
#line 26911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3427 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 26917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3432 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 26925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-2].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-2].num));
          }
#line 26937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3451 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 26947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3459 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 26957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3467 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 26967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3477 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 26978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 3484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_condition_value *spcond= new (thd->mem_root)
                                        sp_condition_value_user_defined();
            if (unlikely(!spcond) ||
                unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-1].ident_sys), spcond)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 26992 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 3494 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 27000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-4].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, false)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3512 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 27023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3517 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 27034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 3532 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 27045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 3542 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 27056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 3549 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            Lex->pop_select(); //main select
            if (unlikely((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd)) ||
                unlikely((yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 27069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 3560 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 3561 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 3562 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 3563 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 3569 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 3571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 27105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 3576 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 27121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 3591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 3603 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 3622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 27160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 3623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 27166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3628 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 27174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3632 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 27184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3644 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3650 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 27224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 27233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 27242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 3679 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue)))
              MYSQL_YYABORT;
          }
#line 27251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_condition_value *cond;

            /* SIGNAL foo cannot be used outside of stored programs */
            if (unlikely(lex->spcont == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            cond= lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely(cond == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(!cond->has_sql_state()))
              my_yyabort_error((ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0)));
            (yyval.spcondvalue)= cond;
          }
#line 27270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3702 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 27282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3709 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3714 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 27296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3722 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 27308 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 27322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 400:
#line 3747 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 3749 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 27350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 3767 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 403:
#line 3773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 27362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 3775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 27368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 405:
#line 3777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 27374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 406:
#line 3779 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 27380 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 3781 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 27386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 3783 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 27392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 3785 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 27398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 3787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 27404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 3789 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 27410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 3791 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 27416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 3793 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 27422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 3795 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 27428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 3800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 27437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 3808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 27453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 3823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 27459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 3825 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 27465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 3830 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 27475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 3836 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 27485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 3845 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 3852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 27506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 3861 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 27516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 3870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 27525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 3875 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 27535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 3884 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 27541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 3886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 27547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 3888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 27553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 3897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 3902 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 3909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 27580 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 3918 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 27590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 3927 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 27596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 3929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 27602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 3931 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 27608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 3933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 27614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 3935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 27620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 3937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 27626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 3939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 27632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 3941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 27638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 3943 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 27644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 3945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 27650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 3947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 27656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 3949 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 27662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 3951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 27668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 3957 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 27677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 3965 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 27693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 3977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 27709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 3991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = NULL; }
#line 27715 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 3992 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 27721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 3993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 27727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 27733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4018 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 27739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4030 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 27749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4036 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->do_cont_backpatch(); }
#line 27755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // Direct procedure call (without the CALL keyword)
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            /*
              We should not push main select here, it will be done or not
              done by the statement, we just provide only new LEX for the
              statement here as if it is start of parsing new statement.
            */
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 27791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_proc_stmt_statement_finalize(thd, yychar == YYEMPTY) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 27801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4085 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd);
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 27811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4091 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            Lex->pop_select(); //main select
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, lex->spcont,
                                                          (yyvsp[0].item), lex)) ||
                unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4101 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 27837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4111 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd);
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 27847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
            Lex->pop_select(); //main select
          }
#line 27856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 27865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4130 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 27874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_exit_statement(thd, (yyvsp[0].item)) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 27884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4141 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item)) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 27894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4150 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 27903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 27912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4160 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_continue_statement(thd, (yyvsp[0].item)) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 27922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4166 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_continue_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item)) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 27932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 4176 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 4184 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 4192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 4200 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex)= thd->lex;
          }
#line 27967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 4206 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 27978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 4216 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 27989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 4223 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            Lex->pop_select(); //main select
            if ((yyval.assignment_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 507:
#line 4237 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= FOR_LOOP_BOUND;
          }
#line 28015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 4244 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            Lex->pop_select(); //main select
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= NO_MATTER;
          }
#line 28030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 4258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 28040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 4264 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 28049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 4271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= NULL; }
#line 28055 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 512:
#line 4272 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 28061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 4277 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 28070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 4285 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 4290 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4295 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4304 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->sp_add_agg_cfetch()))
             MYSQL_YYABORT;
         }
#line 28112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 4312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 28131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 4330 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;
            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 28150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 4345 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;
            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 28169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 4362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd);
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 28179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 4368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
            if (unlikely(i == NULL) ||
                unlikely(sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0))) ||
                unlikely(sp->add_cont_backpatch(i)) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 4385 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, ctx);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0));
          }
#line 28216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 4397 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 28226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 4412 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 28280 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 4465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 28298 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 4481 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $2 */
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 28308 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 4487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_expr((yyvsp[0].item))))
              MYSQL_YYABORT;

            Lex->pop_select(); //main select
            if (Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 4496 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 4498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 28333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 4513 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 28343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 4519 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), true)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 4532 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 28368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 4540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 28378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 4546 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), false)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 4557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 28401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 4565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 28416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 4579 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 28422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 4580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 28428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 4585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 28438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 4595 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 4603 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-2].spblock_handlers)), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 28457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 4609 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 28465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 4613 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 4621 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].spblock).hndlrs+= (yyvsp[-2].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-5].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 28484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 4635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 4644 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-1].spblock_handlers)))))
              MYSQL_YYABORT;
          }
#line 28505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 4649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 28515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 4655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 4662 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].spblock).hndlrs+= (yyvsp[-1].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-4].spblock))))
              MYSQL_YYABORT;
          }
#line 28534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 4670 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_instr_addr)= Lex->sphead->instructions(); }
#line 28540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 4674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 28548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 4678 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 4684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock))))
              MYSQL_YYABORT;
          }
#line 28567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 4695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_executable_section(thd, (yyvsp[-1].sp_instr_addr))))
              MYSQL_YYABORT;
          }
#line 28576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 4700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_exceptions(thd, (yyvsp[-3].sp_instr_addr), (yyvsp[0].num))))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init((yyvsp[0].num));
          }
#line 28586 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 4708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 28592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 4709 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[0].num); }
#line 28598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 4713 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 4714 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) + 1; }
#line 28610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 4719 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 28619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 4726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 28628 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 4734 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 4735 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= -1; }
#line 28640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 4740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 28649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 4745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-2].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 28659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 4755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 28667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 4759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 28678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 4766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 28688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 4775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 28703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 4789 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sp_while_loop_expression(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
            if (lex->main_select_push(true))
               MYSQL_YYABORT;
          }
#line 28718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 4800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 28727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 4808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd);
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 28737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 4814 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, lex->spcont, (yyvsp[-2].item), lab->ip, lex);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
#line 28757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 4833 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 28766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 4841 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 28775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 4846 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 4848 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 28793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 4856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 4858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 28808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 4863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 28819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 4872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 28828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 4877 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-7].for_loop))))
              MYSQL_YYABORT;
          }
#line 28837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 4882 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 28846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 4887 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28852 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 4892 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 28861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 4897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 4901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 28881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 4909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 4913 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 28900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 4920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 28911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 4929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 28923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 4937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 28932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 4942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 4949 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 28946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 4951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 28952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 4956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 28958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 4958 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 28964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 4960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 28970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 4994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 4996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
          }
#line 28985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 5006 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 28993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5012 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 29001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 5035 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 5129 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 29016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 5137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 29025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 5145 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 29034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 5153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 5166 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 5179 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 29071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 5184 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 29080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 5189 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 29089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 5197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 29098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 5205 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 29107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 5213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 29116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 5221 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 29125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 5229 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 29134 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 5237 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 29143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 5245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP"));
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 29154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 5255 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->ts_comment != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT"));
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 29165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 5265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->storage_engine != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE, MYF(0),
                                "STORAGE ENGINE"));
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 29177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 5281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 29186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 5286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->alter_tablespace_info->wait_until_completed)))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT"));
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 29197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 5295 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 29203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 5297 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ident_sys).to_size_number(&(yyval.ulonglong_number)))
              MYSQL_YYABORT;
          }
#line 29212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 5309 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.option_list= NULL; }
#line 29218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 5310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 5311 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 5313 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->first_select_lex()->
              add_table_to_list(thd, (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 29245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 5326 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[0].table); }
#line 29251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 5327 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[-1].table); }
#line 29257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 5331 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 5337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_insert_select((yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 29272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 5342 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *first_select= (yyvsp[-1].select_lex_unit)->first_select();
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to(first_select);
            if (Lex->parsed_insert_select(first_select))
              MYSQL_YYABORT;
          }
#line 29284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 5353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 29298 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 5389 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 5395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 29319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 5410 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 29335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 5425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            DBUG_ASSERT(Lex->part_info->table);
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 29354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 5440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 29362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 5447 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->safe_to_cache_query= 1; }
#line 29368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 5453 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 29379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 5460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= HASH_PARTITION; }
#line 29385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 5461 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29391 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 5463 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 29397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 5465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 29403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 5467 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 29411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 5471 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 29420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 5476 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 29426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 5478 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 29435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 5486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 5488 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->linear_hash_ind= TRUE;}
#line 29447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 5493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 29453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 5495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 29471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 5511 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 5512 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 5516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29489 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 5517 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 5522 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 29510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 5536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 29520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 5546 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 29532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 5557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 29541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 5565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 5567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 29561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 5579 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 5581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 29573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 5582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 5585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 29589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 5590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 5594 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 5595 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29607 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 5600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 29622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 5614 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 29635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 5625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 5627 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 29654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 5639 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 29668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 5649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 29691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 5670 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 5671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 5676 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 29723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 5695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 5700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 29741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 5711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 29761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 5727 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 29778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 5739 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29784 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 5741 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 29801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 5753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 5755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
          }
#line 29816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 5760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
          }
#line 29825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 5765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 29846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 5785 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 29868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 5802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 5807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 29905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 5834 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 29918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 5845 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 5846 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 5851 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 29944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 5860 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 5862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 29975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 5885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 5886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 5891 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 30002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 5902 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 30020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 5920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 30038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 5934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 30065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 5959 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 5960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 5965 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 30114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 5997 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 30130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6011 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6015 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6021 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 30160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 30170 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6029 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 30180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6035 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 30186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6037 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 30192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6039 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 30198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 30204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6043 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 30210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6045 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 30216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           partition_info *part_info= Lex->part_info;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-2].item), (yyvsp[-1].interval), (yyvsp[0].ulong_num))))
             MYSQL_YYABORT;
         }
#line 30232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         partition_info *part_info= Lex->part_info;
         if (unlikely(part_info->vers_set_limit((yyvsp[0].ulonglong_number))))
         {
           my_error(ER_PART_WRONG_VALUE, MYF(0),
                    Lex->create_last_non_select_table->table_name.str,
                    "LIMIT");
           MYSQL_YYABORT;
         }
       }
#line 30247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6072 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           (yyval.ulong_num)= thd->query_start();
         }
#line 30255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           /* only allowed from mysql_unpack_partition() */
           if (unlikely(!Lex->part_info->table))
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].kwd).pos());
             MYSQL_YYABORT;
           }
           (yyval.ulong_num)= (ulong)(yyvsp[0].ulong_num);
         }
#line 30269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6093 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6097 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6102 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6107 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6108 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6113 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= FALSE;
          }
#line 30325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= TRUE;
          }
#line 30333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 30341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6128 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 30349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 30357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 30365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6162 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 30384 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 30393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 30402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6187 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 30411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 30420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 6197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 30429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6202 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 30438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6207 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 30457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6222 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 30467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6228 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 30486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6243 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 30495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6248 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 30514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 6263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 30524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 6269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 30546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 6287 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 30555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6292 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 30564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6297 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 30573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 30582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 30591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 30600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 6317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->first_select_lex()->table_list.save_and_clear(&Lex->save_list);
          }
#line 30608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 6321 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->first_select_lex()->table_list.first;
            lex->first_select_lex()->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 30634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6345 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 30643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 6350 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 30652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 6355 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 30661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 6360 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.tablespace= (yyvsp[0].ident_sys).str;}
#line 30667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 6362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_DISK;}
#line 30673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 6364 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 30679 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 6366 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 30689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 6372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 30698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 6377 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 30707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 6382 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 6391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 6400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->create_info.option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 30743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 6406 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 6412 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
	  }
#line 30762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 6426 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (DBUG_EVALUATE_IF("sysvers_force", 0, 1))
              {
                my_error(ER_VERS_NOT_SUPPORTED, MYF(0), "CREATE TEMPORARY TABLE");
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 30782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 6445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.add_table_option_default_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 30791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 6453 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if (unlikely((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                         cinfo->default_table_charset && (yyvsp[0].charset) &&
                         !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                           (yyvsp[0].charset)))))
              MYSQL_YYABORT;

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 30807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 6468 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 30818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 6478 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 30830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 6488 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 30836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 6489 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 30842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 6490 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 30848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 6491 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 30854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 6492 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 30860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 6493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 30866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 6494 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 30872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 6498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 30878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 6499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 30884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 6500 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 30890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 6504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 30896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 6505 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 30902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 6506 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 30908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 6507 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 30914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 6513 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 30922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 6520 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 30930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 6531 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 6535 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 6540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[0].create_field); }
#line 30948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 6542 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[-1].create_field); }
#line 30954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 6547 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 6552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 6554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 6559 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 6561 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 6566 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 6568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 6573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 6577 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 6582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 6585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 6590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 6592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 31064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 6602 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Key *key= (new (thd->mem_root)
                       Foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                   &lex->last_key->columns,
                                   &(yyvsp[0].table)->db,
                                   &(yyvsp[0].table)->table,
                                   &lex->ref_list,
                                   lex->fk_delete_opt,
                                   lex->fk_update_opt,
                                   lex->fk_match_option,
                                    (yyvsp[-6].object_ddl_options)));
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            /*
              handle_if_exists_options() expectes the two keys in this order:
              the Foreign_key, followed by its auto-generated Key.
            */
            lex->alter_info.key_list.push_back(key, thd->mem_root);
            lex->alter_info.key_list.push_back(Lex->last_key, thd->mem_root);
            lex->option_list= NULL;

            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_ADD_FOREIGN_KEY;
          }
#line 31094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 6631 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 31102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 6639 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_period((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 31111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 6647 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_period((yyvsp[-5].ident_sys), (yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys)))
              MYSQL_YYABORT;
          }
#line 31120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 6654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 31126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 6655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 31132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 6660 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 31143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 6669 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 6670 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 6674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 31161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 6675 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 31167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 6679 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 31173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 6684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str), NULL);
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 31193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 6700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 31216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 6721 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->set_attributes((yyvsp[0].Lex_field_type), Lex->charset); }
#line 31222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 6724 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->set_handler(&type_handler_longlong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
          }
#line 31232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 6733 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 6734 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 6738 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 6743 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 6744 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31262 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 6748 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 6753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31274 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 6758 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
           Lex->last_field->flags&= ~NOT_NULL_FLAG; // undo automatic NOT NULL for timestamps
         }
#line 31283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 6764 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
          }
#line 31292 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 6769 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
          }
#line 31301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 6776 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 6777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 6782 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 31321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 6786 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 31329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 6790 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 31337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 6794 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 31345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 6800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 6801 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 6805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 6811 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 31373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 6817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 31383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 6822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 31389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 6824 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 31397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 6831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 31412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 6842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
            Lex->pop_select(); //main select
          }
#line 31424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 6854 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 31435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 6864 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 31447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 6872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex))))
              MYSQL_YYABORT;
            Virtual_column_info *v= add_virtual_expression(thd, item);
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 31461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 6888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 31470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 6896 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 31478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 6900 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 31487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 6925 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].const_simple_string)); }
#line 31493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 6926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 31499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 6928 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).length() && !(yyvsp[-1].Lex_length_and_dec).dec())
            {
              int err;
              ulonglong tmp_length= my_strtoll10((yyvsp[-1].Lex_length_and_dec).length(), NULL, &err);
              if (unlikely(err || tmp_length > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if (tmp_length > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 31519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 6944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].const_simple_string));
          }
#line 31527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 6948 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 31535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 6952 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 31543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 6956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 31549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 6958 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].Lex_length_and_dec).length() != 0)
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 31560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 6965 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 31566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 6967 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 31572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 6980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
          }
#line 31580 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 6984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 6989 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].const_simple_string));
          }
#line 31598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 6994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 6998 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7007 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7012 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7021 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7025 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7030 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7035 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7039 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7043 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7048 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7053 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7062 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].const_simple_string))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].const_simple_string), NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%lu)", length);
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].const_simple_string));
          }
#line 31732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7079 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 31738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 7081 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].const_simple_string));
          }
#line 31749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].const_simple_string));
          }
#line 31760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 7095 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].const_simple_string));
          }
#line 31768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_tiny_blob);
          }
#line 31777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7108 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 31786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7113 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 31795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 31804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 7123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->last_field->geom_type= (yyvsp[-2].geom_type);
            (yyval.Lex_field_type).set(&type_handler_geometry, (yyvsp[-1].Lex_length_and_dec));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 31819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 31828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 31837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 7144 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 31846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31852 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 7151 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_tiny_blob); }
#line 31858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 7153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string)); }
#line 31864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7157 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 31876 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 31882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 7163 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_utf8mb4_bin;
            (yyval.Lex_field_type).set(&type_handler_json_longtext);
          }
#line 31897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7171 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_enum); }
#line 31903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_set); }
#line 31909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRY; }
#line 31915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7178 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 31921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7179 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POINT; }
#line 31927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7180 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOINT; }
#line 31933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7181 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_LINESTRING; }
#line 31939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTILINESTRING; }
#line 31945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7183 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POLYGON; }
#line 31951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7184 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOLYGON; }
#line 31957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7188 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 7197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7202 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7204 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7205 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7206 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7210 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_long; }
#line 32023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7211 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_tiny; }
#line 32029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 7212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_short; }
#line 32035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 7213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_int24; }
#line 32041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 7214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_longlong; }
#line 32047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 7219 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 32057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 7224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 32063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 7225 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 32069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 7230 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->srid= 0; }
#line 32075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 7233 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 32083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 7239 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0);  }
#line 32089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 7240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), 0); }
#line 32095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 7241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 32101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 7245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 32107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 7249 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32113 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 7250 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 7251 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG;}
#line 32125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 7252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 7253 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 7254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 32143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 7258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 7259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 7260 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 7261 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 32167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 7265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) 0; /* use default length */ }
#line 32173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 7266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 32179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 7270 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) "1"; }
#line 32185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 7271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 32191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 7292 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set("4000", "4000"); }
#line 32197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 7293 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 32203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 7297 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set("2000", "2000"); }
#line 32209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 7298 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 32215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 7302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0); }
#line 32221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 7303 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 32227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 7308 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 7313 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags&= ~ NOT_NULL_FLAG; }
#line 32239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 7314 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->default_value= (yyvsp[0].virtual_column); }
#line 32245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 7316 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
          }
#line 32256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 7322 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 32262 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 7324 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 7330 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name,Lex->charset->csname));
            Lex->last_field->charset= (yyvsp[0].charset);
          }
#line 32283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 7340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= NULL; }
#line 32289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 7341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 32295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 7345 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 7346 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 7351 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 7359 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 7367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 7376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 32343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 7380 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 7391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 7400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 7409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->last_field->option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 32389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 7415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 7421 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 32413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 7434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 32423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 7440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 32433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 7450 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[-1].Lex_field_type)));

          if ((yyvsp[0].charset))
          {
            if (unlikely(!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
          Lex->last_field->set_attributes((yyval.Lex_field_type), Lex->charset);
        }
#line 32448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 7464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[-1].Lex_field_type)));
            
          if ((yyvsp[0].charset))
          {
            if (unlikely(!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
          Lex->last_field->set_attributes((yyval.Lex_field_type), Lex->charset);
        }
#line 32463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 7477 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 7478 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 7483 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 32484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 7487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 32490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 7491 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 32496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 7492 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 7496 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 32508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 7497 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 32514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 7502 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,MYF(0))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 32525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 7508 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 32531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 7512 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 32537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 7513 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 7518 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str))))
              MYSQL_YYABORT;
          }
#line 32552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 7525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 7526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 32564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 7530 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 32570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 7531 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 7535 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 7536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32588 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 7540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 32594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 7541 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1; }
#line 32600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 7543 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 32609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 7550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, false); }
#line 32615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 7551 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 7555 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(&my_charset_bin, false); }
#line 32627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 7556 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[-1].charset), (yyvsp[0].num)); }
#line 32633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 7557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, true); }
#line 32639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 7558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[0].charset), true); }
#line 32645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 7562 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 32651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 7563 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 32657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 7568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 32669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 7576 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 32675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 7580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 7581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 32687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 7585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 32693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 7588 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 7589 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 7590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 32711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 7591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 32717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 7596 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 32726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 7604 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 32734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 7610 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 7611 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 32746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 7616 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 32757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 7625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 7626 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 7630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 7631 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 7645 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 32789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 7652 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ref_list.empty(); }
#line 32795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 7658 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 32806 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 7665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 32819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 7677 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 32825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 7679 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 32831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 7681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 32837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 7683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 32843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 7688 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 7694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 7700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 7707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 7714 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 32893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 7722 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 32899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 7723 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 32905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 7724 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 32911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 7725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 32917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 7726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 32923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 7730 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::PRIMARY; }
#line 32929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 7731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 32935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 7735 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 7736 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 7740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 7745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 7746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 7747 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 7751 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 32977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 7752 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 32983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 7756 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::FULLTEXT;}
#line 32989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 7761 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 33002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 7772 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 7773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 7777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 7778 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 7782 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 7783 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 33038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 7802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 33044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 7803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 7808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 33056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 7809 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 7810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 33068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 7815 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 33074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 7817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 33080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 7822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 33089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 7827 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 33095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 7829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 7837 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 7845 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                  engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->option_list,
                                      &Lex->option_list_last, thd->mem_root);
          }
#line 33129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 7851 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 33139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 7870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 33150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 7879 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 33156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 7880 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 33162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 7881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 33168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 7886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 33176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 7890 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 33184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 7897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 33194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 7903 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 33207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 7914 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 33213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 7915 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 33219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 7920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 33225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 7922 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 33231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 7931 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR;
            Lex->first_select_lex()->order_list.empty();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 33251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 7947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!Lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                    TL_READ_NO_INSERT, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            Lex->first_select_lex()->db=
              (Lex->first_select_lex()->table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 33266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 7958 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
            Lex->pop_select(); //main select
          }
#line 33281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 7969 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 33292 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 7976 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 33306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 7986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 33318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 7994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->sp_chistics.init();
          }
#line 33332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 8004 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 8014 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->sp_chistics.init();
          }
#line 33360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 8024 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 8034 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 33385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 8041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 8052 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 33406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 8059 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 8065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 33439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 8088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();

            Lex->pop_select(); //main select
          }
#line 33459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 8104 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 33468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 8109 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 33477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 8114 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 33486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 8119 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 33495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 8124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 33505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 8128 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 33511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 8132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-6].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 33520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 8137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 33536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 8149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!(lex->create_info.seq_create_info= new (thd->mem_root)
                                                     sequence_definition()) ||
                !lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_SEQUENCE,
                                    TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 33550 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 8159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 33564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 8171 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 8173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.account_locked= ACCOUNTLOCK_LOCKED;
          }
#line 33578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 8177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.account_locked= ACCOUNTLOCK_UNLOCKED;
          }
#line 33586 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 8182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 8184 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NOW;
          }
#line 33600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 8188 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NEVER;
          }
#line 33608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 8192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_DEFAULT;
          }
#line 33616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 8196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_INTERVAL;
            if (!(Lex->account_options.num_expiration_days= atoi((yyvsp[-1].lex_str).str)))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "DAY", (yyvsp[-1].lex_str).str));
          }
#line 33626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 8204 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 8205 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 8206 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 8207 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 8211 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 8213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 33669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 8224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 8225 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 8229 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_sys)= Lex_ident_sys(); }
#line 33687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 8236 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 8244 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 8266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 33721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 8273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 33731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 8280 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 8293 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 33761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 8304 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 8316 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 8328 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 33801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 8335 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 8347 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_alter_table_exchange_partition((yyvsp[-1].table)))
              MYSQL_YYABORT;
          }
#line 33824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 8355 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 33832 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 8362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 33840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 8371 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 33856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 8383 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 8389 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 33871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 8394 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 33879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 8401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 33892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 8414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 33900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 8418 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 33908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 8422 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 33917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 8429 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 8430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 8435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 33939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 8457 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 33950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 8464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 8469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 33967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 8474 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_period_info &period= Lex->create_info.period_info;
            period.create_if_not_exists= Lex->check_exists;
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
          }
#line 33977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 8480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 8487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 33996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 8491 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 34005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 8497 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 8505 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 8512 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 34041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 8522 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 34056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 8533 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 34070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 8543 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 34085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 8554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 34099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 8564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 34109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 8570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 34119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 8576 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (check_expression((yyvsp[0].virtual_column), &(yyvsp[-3].lex_str), VCOL_DEFAULT))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str).str, (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 34130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 8583 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str).str, (Virtual_column_info*) 0,
                                             (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 34140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 8589 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->first_select_lex()->db= (yyvsp[0].table)->db;
            if (lex->first_select_lex()->db.str == NULL &&
                lex->copy_db_to(&lex->first_select_lex()->db))
              MYSQL_YYABORT;
            if (unlikely(check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length,
                                          FALSE)) ||
                ((yyvsp[0].table)->db.str && unlikely(check_db_name((LEX_STRING*) &(yyvsp[0].table)->db))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str));
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
#line 34158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 8603 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].charset))
            {
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (unlikely(!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
            if (unlikely(Lex->create_info.add_alter_list_item_convert_to_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_CONVERT_TO;
          }
#line 34176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 8617 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 34185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 8622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 34193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 8626 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 34202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 8633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 34211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 8638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 34220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 8643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 34228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 8647 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Alter_drop *ad= new Alter_drop(Alter_drop::PERIOD, (yyvsp[0].ident_sys).str, (yyvsp[-2].num));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            Lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            Lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 34240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 8666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.set_requested_algorithm(
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 34249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 8671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 8679 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 34267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 8684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 8691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 8692 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 8696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 34294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 8697 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 34300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 8701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 34306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 8715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 34312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 8717 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 34321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 8724 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_DEFAULT; }
#line 34327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 8725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_RESTRICT; }
#line 34333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 8726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_CASCADE; }
#line 34339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 8730 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 34345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 8732 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 34354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 8737 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 34364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 8745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 8746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 8747 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 8748 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 8753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 34399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 8760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 8762 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 34416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 8768 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 8770 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 34433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 8777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 34444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 8787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 34461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 8803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 8807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 8814 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 8818 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 8825 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 34501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 8829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 34509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 8833 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 34517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 8839 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt= 0; }
#line 34523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 8841 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 8850 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 8851 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 34541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 8852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_IO; }
#line 34547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 8856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 8858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 34566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 8867 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 34574 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 8879 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 8886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 8890 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= 0; }
#line 34597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 8891 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_QUICK; }
#line 34603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 8892 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_EXTEND; }
#line 34609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 8898 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 34615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 8904 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 8914 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 8924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 34647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 8925 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 8929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 8930 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 8934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 34671 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 8935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 34677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 8936 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 34683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 8940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 8941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 34695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 8946 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 8956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 8976 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 8978 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 34735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 8985 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 8987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 8991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 8993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 34764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 9001 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 9005 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 9007 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 34787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 9015 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 9020 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 9022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 34808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 9027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 34817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 9035 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 9042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 34833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 9049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 34844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 9059 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 34855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 9067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 34865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 9077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 34871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 9082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 9092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 9104 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 34905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 9105 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 9109 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 9110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 9114 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 34929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 9115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_FAST; }
#line 34935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 9116 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_MEDIUM; }
#line 34941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 9117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 34947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 9118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 34953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 9119 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 34959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 9123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 9124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 34971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 9129 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 9139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 9149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 9150 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 9151 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 9156 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 35025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 9162 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 35033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 9166 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 35041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 9173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 9179 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 35061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 9193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 35077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 9208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.reset();
          }
#line 35085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 9212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 35095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 9231 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 9242 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 9252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 35125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 9253 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 35131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 9258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
            if (lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 35143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 9266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 35151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 9283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 9294 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 35175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 9305 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 35183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 9312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->first_select_lex()->alloc_index_hints(thd);
            Lex->first_select_lex()->set_index_hint_type(INDEX_HINT_USE,
                                                         INDEX_HINT_MASK_ALL);
          }
#line 35193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 9321 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 35199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 9327 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 9328 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 35211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 9337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 35222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 9344 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause(NULL);
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 35233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 9351 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 35244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 9358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex_unit)->first_select());
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 35256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 9370 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 35265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 9375 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
           }
#line 35279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 9386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 35288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 9391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            unit->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 35304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 9406 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 35310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 9407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 35316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 9412 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_TVC_start())
              MYSQL_YYABORT;
	  }
#line 35325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 9417 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex)= Lex->parsed_TVC_end()))
	      MYSQL_YYABORT;
	  }
#line 35334 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 9425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel;
            LEX *lex= Lex;
            if (!(sel= lex->alloc_select(TRUE)) ||
                  lex->push_select(sel))
              MYSQL_YYABORT;
            sel->init_select();
            sel->braces= FALSE;
          }
#line 35348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 9435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= SELECT_LIST;
          }
#line 35356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 9439 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 35364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 9451 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 35372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 9464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 35380 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 9522 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].select_lex_unit)->set_with_clause(NULL);
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 35389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 9528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].select_lex_unit)->set_with_clause((yyvsp[-1].with_clause));
            (yyvsp[-1].with_clause)->attach_to((yyvsp[0].select_lex_unit)->first_select());
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 35399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 9541 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 35405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 9542 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 35411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 9557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].select_lex_unit)->first_select()->next_select())
            {
              if (Lex->parsed_multi_operand_query_expression_body((yyvsp[0].select_lex_unit)))
                MYSQL_YYABORT;
            }
          }
#line 35423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 9565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[0].order_limit_lock))
              (yyval.select_lex_unit)= (yyvsp[-2].select_lex_unit);
            else
              (yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock));
          }
#line 35434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 9572 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->push_select(!(yyvsp[0].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[0].select_lex_unit)->first_select() : (yyvsp[0].select_lex_unit)->fake_select_lex);
          }
#line 35443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 9577 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body_ext_parens((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock))))
               MYSQL_YYABORT;
          }
#line 35452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 9585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit); }
#line 35458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 9587 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= (yyvsp[-1].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[-1].select_lex_unit)->fake_select_lex : (yyvsp[-1].select_lex_unit)->first_select();
            sel->braces= true;
            (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit);
          }
#line 35469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 9602 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->push_select((yyvsp[0].select_lex));
            if (!((yyval.select_lex_unit)= Lex->create_unit((yyvsp[0].select_lex))))
              MYSQL_YYABORT;
          }
#line 35479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 9609 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].select_lex_unit)->first_select()->next_select())
            {
              Lex->pop_select();
            }
          }
#line 35490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 9616 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body((yyvsp[-3].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-2].unit_operation).unit_type,
                                                                (yyvsp[-2].unit_operation).distinct,
                                                                TRUE)))
              MYSQL_YYABORT;
          }
#line 35502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 9626 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body_ext_parens(
                                                                (yyvsp[-2].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-1].unit_operation).unit_type,
                                                                (yyvsp[-1].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 35514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 9642 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 35520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 9644 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex_unit)->first_select(); }
#line 35526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 9653 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex);}
#line 35532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 9658 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              YYABORT;
          }
#line 35541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 9699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[0].select_lex_unit)->fake_select_lex)
              (yyvsp[0].select_lex_unit)->first_select()->braces= false;
            else
              (yyvsp[0].select_lex_unit)->fake_select_lex->braces= false;
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              YYABORT;
          }
#line 35554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 9708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to((yyvsp[-1].select_lex_unit)->first_select());
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[-1].select_lex_unit))))
              YYABORT;
          }
#line 35565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 9727 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 35575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 9742 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 35585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 9751 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_UNDEFINED;
          }
#line 35593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 9755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 35601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 9759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 35609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 9766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= type_handler_datetime2.create_literal_item(thd,
                                                      (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                      YYCSCL, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 35622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 9775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 35630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 9779 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 35638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 9787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(0 == strcasecmp((yyvsp[-4].ident_sys).str, "SYSTEM_TIME")))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-5].simple_string));
              MYSQL_YYABORT;
            }
            Lex->period_conditions.init(SYSTEM_TIME_FROM_TO,
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[-2].item)),
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item)),
                                        (yyvsp[-4].ident_sys));
          }
#line 35654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 9802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 35662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 9806 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 35670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 9813 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 35678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 9817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 35686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 9824 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 35694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 9828 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 35702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 9832 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 35710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 9836 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 35718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 9849 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_NO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));
            Select->options|= OPTION_NO_QUERY_CACHE;
          }
#line 35731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 9858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_TO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));
            Select->options|= OPTION_TO_QUERY_CACHE;
          }
#line 35744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 9871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= TRUE;
          }
#line 35754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 9877 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= FALSE;
          }
#line 35764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 9886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).empty();
        }
#line 35772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 9890 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock)= (yyvsp[0].select_lock);
        }
#line 35780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 9897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).empty();
        }
#line 35788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 9901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= (yyvsp[0].ulong_num);
        }
#line 35797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 9906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= 0;
        }
#line 35806 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 9916 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root)
                          Item_field(thd, &thd->lex->current_select->context,
                                     NULL, NULL, &star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 35821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 9930 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 35830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 9935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 35853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 9956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 35861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 9962 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 35869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 9968 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 35877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 9974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr_rtrim();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 35888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 9983 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_clex_str;}
#line 35894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 9984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 35900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 9985 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 35906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 9986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 35912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 9987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 35918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 9991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 35924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 9992 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 35930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 9993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 35936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 9997 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 35942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 9998 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 35948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 9999 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 35954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 10003 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 10004 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10061 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10068 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 36079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 10111 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 10117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 10123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 10129 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 10135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 10141 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 10147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 10153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 10159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 10169 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 10175 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 10181 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 10191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-2].item), (yyvsp[0].select_lex));
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 36209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 10197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-3].item), (yyvsp[0].select_lex));
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 36222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 10206 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 10212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 10220 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 10226 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 10235 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 10241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 10249 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 10259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-2].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 36313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 10265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= true;
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 36324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 10272 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 10279 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= true;
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 36347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 10287 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 10293 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 10306 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36380 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 10312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36390 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 10318 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 10324 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 10330 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 10337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 10343 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 10349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 10355 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 10362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 10368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 10374 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 10380 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 10386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 10392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 10398 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 10404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 10410 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 10439 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 36557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 10440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 36563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 10441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 36569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 10442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 36575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 10443 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 36581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 10444 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 36587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 10448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 10449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 10454 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
            Lex->charset= NULL;
	  }
#line 36608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 10458 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 36614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 10462 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 36620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 10463 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 36626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 10464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 36632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 10468 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 36638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 10469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 36644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 10470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 36650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 10471 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 36656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 10472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 36662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 10473 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 36668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 10477 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 36674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 10478 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, 0, (yyvsp[0].const_simple_string)); }
#line 36680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 10479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, 0, (yyvsp[0].const_simple_string)); }
#line 36686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 10484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 36692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 10486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
          }
#line 36700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 10490 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
            Lex->charset= national_charset_info;
          }
#line 36709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 10498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
     LEX *lex= Lex;
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= lex->charset;
     if ((yyvsp[0].Lex_dyncol_type).length())
       (yyval.dyncol_def)->len= strtoul((yyvsp[0].Lex_dyncol_type).length(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).dec())
       (yyval.dyncol_def)->frac= strtoul((yyvsp[0].Lex_dyncol_type).dec(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 36733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 10521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 36744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 10528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 36753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 10536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 36759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 10537 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 36765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 10538 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 36771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 10539 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 36777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 10544 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 36786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 10552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 36792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 10553 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 36798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 10554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 36804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 10555 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 36810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 10556 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 36816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 10557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 36822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 10558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 36828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 10559 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 36834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 10597 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_param); }
#line 36840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 10600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!Lex->select_stack_top)
            {
              my_error(ER_INVALID_GROUP_FUNC_USE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 36852 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 10608 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!Lex->select_stack_top)
            {
               my_error(ER_WRONG_PLACEMENT_OF_WINDOW_FUNCTION, MYF(0));
               MYSQL_YYABORT;
            }
          }
#line 36864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 10617 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 10624 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 10630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 36894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 10635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 36908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 10645 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 36917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 10650 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 36926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 10655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 36936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 10661 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 36945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 10666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 10672 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 36970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 10683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 10690 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 36990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 10695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 36999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 10700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 37008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 10705 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 37017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 10710 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 37026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 10715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 10720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 37044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 10729 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 37050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 10731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_query_expression(thd, (yyvsp[0].select_lex)->master_unit())))
              MYSQL_YYABORT;
          }
#line 37059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 10740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
#line 37068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 10749 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 37078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 10755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 10759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 10765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 10771 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 10781 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 10790 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 10797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 10811 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 10817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 10823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 10832 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 10841 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 10847 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 10853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 10859 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 10865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 10880 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 10891 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 10897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 10903 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 10909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 10915 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 10921 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 10929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 10936 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 10940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim(thd))))
              MYSQL_YYABORT;
          }
#line 37357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 10945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 37369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 10953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 10974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37390 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 10981 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 10987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 10994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11001 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11007 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11013 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11019 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11025 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11031 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_decode_oracle(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11037 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11043 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11056 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11062 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11069 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 11080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37562 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 11085 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11090 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37580 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 11095 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (thd->mem_root) Item_func_sysdate_local(thd, (yyvsp[0].num));
            else
              (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 11113 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37612 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 11119 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 11125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 37631 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11130 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 11144 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 11152 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 11159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 11166 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 11173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 11180 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type).length(), (yyvsp[-1].Lex_cast_type).dec(),
                                        lex->charset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 11197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 11203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 11209 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 11215 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 11221 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 11228 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 11234 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 11240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 11249 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 11260 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 11267 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 11273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 11279 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 11286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 37867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 11294 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 11300 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 11306 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 11311 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 11317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 11325 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 11331 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 11337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 11343 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 11349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 11357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 11369 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 11376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 38013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 11391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                 Item_func::SP_CONTAINS_FUNC));
          }
#line 38023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 11397 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 38034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 11404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 38045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 11411 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 38056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 11418 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 38067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 11425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 38078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 11432 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_point(thd, (yyvsp[-3].item), (yyvsp[-1].item)));
          }
#line 38086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 11436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 38097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 11443 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                    Item_func::SP_WITHIN_FUNC));
          }
#line 38106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 11460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 38129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 11479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, &(yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 38182 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 11528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 11536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 38197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 11538 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_BOOL; }
#line 38203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 11542 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 38209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 11543 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 38215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 11547 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 38221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 11548 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 38227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 11552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 38233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 11553 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 38239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 11558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 38250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 11565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 11573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 38287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 11600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 11606 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 11612 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 11618 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 11624 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 11630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 11639 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 11645 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 38366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 11647 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr--; }
#line 38372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 11649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 11655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 11666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 11672 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 11678 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 11684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 11690 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 11696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 11702 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 11708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 11714 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 11720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 38488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 11724 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->select_limit,
                                        sel->offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 38510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 11745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 38522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 11754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 38541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 11774 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            ((Item_sum *) (yyvsp[0].item))->mark_as_window_func_sum_expr();
          }
#line 38549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 11779 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item* item = (Item*)(yyvsp[0].item);
            /* Only UDF aggregate here possible */
            if ((item == NULL) ||
                (item->type() != Item::SUM_FUNC_ITEM)
                || (((Item_sum *)item)->sum_func() != Item_sum::UDF_SUM_FUNC))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            ((Item_sum *) (yyvsp[0].item))->mark_as_window_func_sum_expr();
          }
#line 38567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 11796 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 11803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 11810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 11817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38607 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 11824 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 11831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 11838 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 11845 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 11852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 11859 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38671 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 11870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 11877 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 11888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 11900 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 38724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 11918 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 38730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 11920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 38738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 11924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38756 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 11941 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 11947 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 11956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 38785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 11965 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 38795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 11974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 38804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 11979 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 38812 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 11986 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 38826 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 11996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 38838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12004 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 38847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12009 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 38856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12017 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 38878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 38884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12037 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 38893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 38902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12054 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 38920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12059 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 38928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12066 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 38939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12073 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 38950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 38961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 38974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12101 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 38983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12109 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string)); Lex->charset= &my_charset_bin; }
#line 38989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12111 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 38995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12113 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12119 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 39025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= national_charset_info;
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string), 0);
          }
#line 39034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12128 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 39046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12133 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 39064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12136 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 39076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 39082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 39088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 39094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12143 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 39100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12144 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_time2, 0, (yyvsp[0].const_simple_string)); }
#line 39106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12145 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_datetime2, 0, (yyvsp[0].const_simple_string)); }
#line 39112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_cast_type).set(&type_handler_interval_DDhhmmssff, 0, (yyvsp[0].const_simple_string));
          }
#line 39120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 39126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12154 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 39132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 39141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12171 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 39156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 39162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 12177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 12184 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39182 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 12192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 12201 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 39206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12221 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;

          }
#line 39229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12230 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-2].item_list);
            if (unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12243 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 39264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 39270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 39276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)=(yyvsp[0].table_list);
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 12278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 12292 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 39304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12299 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 12309 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 39329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 12317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
          }
#line 39339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 12323 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 39349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 12329 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 39361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 12340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 12350 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 39387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 12358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 12364 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 39407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 12370 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 39420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 12382 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 39434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 12392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 39447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 12401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 39457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 12407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 39468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 12414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 39482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 12427 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 12428 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 12429 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39500 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 12433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = (yyvsp[0].num); }
#line 39506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 12434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 12442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string_list)= 0;}
#line 39518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 12448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-2].string_list);
            Select->parsing_place= Select->save_parsing_place;
            Select->save_parsing_place= NO_MATTER;
          }
#line 39528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 12456 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 12457 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 12459 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyvsp[0].table_list)->nested_join->nest_type= 0;
            (yyval.table_list)= (yyvsp[0].table_list);
          }
#line 39549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 12463 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 12467 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 12468 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 39567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 12472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 12473 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 39579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 12477 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 39585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 12479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.table_list)= Select->end_nested_join(thd)))
              MYSQL_YYABORT;
          }
#line 39594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 12487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Select->init_nested_join(thd))
              MYSQL_YYABORT;
            Select->add_joined_table((yyvsp[-2].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list)->embedding;
          }
#line 39606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 12495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list);
          }
#line 39615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 12502 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 39621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 12504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(thd)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 12518 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            if ((yyvsp[-2].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 39652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 12536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.table_list)= Lex->parsed_derived_table((yyvsp[-2].select_lex)->master_unit(), (yyvsp[-1].num), (yyvsp[0].lex_str_ptr))))
              MYSQL_YYABORT;
          }
#line 39661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 12544 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 12545 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 12550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= thd->variables.old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 39681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 12553 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 39687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 12554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 39693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 12555 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 39699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 12559 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 39705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 12560 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 39711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 12565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 39719 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 12570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 39727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 12583 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->alloc_index_hints(thd); }
#line 39733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 12587 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {  Select->clear_index_hints(); }
#line 39739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 12592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, NULL, 0); }
#line 39745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 12593 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 12598 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 39757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 12600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 39763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 12610 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 39778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 12621 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 39793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 12634 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 12635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 39805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 12636 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 39811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 12637 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 39817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 12638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 39823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 12639 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 39829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 12640 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 39835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 12641 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 39841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 12642 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 39847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 12643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 39853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 12644 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 39859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 12645 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 39865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 12649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 39871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 12650 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 39877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 12651 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 39883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 12652 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 39889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 12653 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 39895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 12654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 39901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 12655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 39907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 12656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 39913 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 12657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 39919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 12661 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 39925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 12662 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 39931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 12663 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 39937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 12664 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 39943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 12674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)=0; }
#line 39949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 12675 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)= (yyvsp[0].lex_str_ptr); }
#line 39955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 12680 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 39965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 12693 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->where= 0; }
#line 39971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 12695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_WHERE;
          }
#line 39979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 12699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 39991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 12711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_HAVING;
          }
#line 39999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 12715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 40011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 12735 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 40020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 12740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 40029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 12747 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 12749 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 40056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 12766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 40075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 12788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 12791 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 12801 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 40100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 12813 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 40106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 12817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 40112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 12821 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 12823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 40128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 12831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 40134 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 12836 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 40140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 12837 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->order_list= *((yyvsp[0].select_order)); }
#line 40146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 12841 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40152 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 12843 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 40167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 12856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 40173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 12857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 40179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 12862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 40193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 12872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 40203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 12881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 12888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 12895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40236 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 12904 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 40242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 12906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40253 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 12913 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 40264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 12922 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 12924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 40276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 12926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 40282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 12928 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 40288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 12930 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 12932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 40300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 12950 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 40310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 12963 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_order)= NULL; }
#line 40316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 12965 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_order)= (yyvsp[0].select_order); }
#line 40322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 12970 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->where= "ORDER clause";
          }
#line 40330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 12974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= (yyvsp[0].select_order);
          }
#line 40338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 12981 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= (yyvsp[-3].select_order);
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item),(bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 40348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 12987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= new (thd->mem_root) SQL_I_List<ORDER>();
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item), (bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 40358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 12995 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =  1; }
#line 40364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 12996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =1; }
#line 40370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 12997 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =0; }
#line 40376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_limit).empty(); }
#line 40382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13004 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_limit)= (yyvsp[0].select_limit); }
#line 40388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13009 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit->basic_const_item() ||
                (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13017 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit)= (yyvsp[-3].select_limit);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= 0;
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= 1;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 40419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13032 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->explicit_limit= (yyvsp[0].select_limit).explicit_limit;
            Select->select_limit= (yyvsp[0].select_limit).select_limit;
            Select->offset_limit= (yyvsp[0].select_limit).offset_limit;
          }
#line 40429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= 1;
          }
#line 40439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= (yyvsp[-2].item);
            (yyval.select_limit).explicit_limit= 1;
          }
#line 40449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13053 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[0].item);
            (yyval.select_limit).explicit_limit= 1;
          }
#line 40459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13062 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 40468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 40477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13072 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 40485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 13097 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex=Lex;
            lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 40524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 13105 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 40533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 13110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
#line 40544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 13116 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 40550 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 13117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 40556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 13122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock);
            (yyval.order_limit_lock)->lock.empty();
          }
#line 40565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 13127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= (yyvsp[-1].order_limit_lock);
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 40574 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 13132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit.empty();
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 40587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 13143 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyval.order_limit_lock)= NULL;
          }
#line 40596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 13147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock); }
#line 40602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 13160 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock).empty();
          }
#line 40610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 13164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 40618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 13168 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                "<select expression> INTO <destination>;",
                                "'SELECT <select list> INTO <destination>"
                                " FROM...'");
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 40632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 13182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= (yyvsp[-1].select_order);
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 40644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 13190 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_order_limit_lock *op= (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            op->order_list= NULL;
            op->limit= (yyvsp[0].select_limit);
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 40658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 13208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 13209 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 13213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 13214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 40682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 13215 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 13216 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 13217 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 13218 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 13222 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 13223 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 40718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 13224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 13225 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 13226 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 40736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 13230 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 13231 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 13232 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 13233 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 13237 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 13238 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 13239 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 13240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40784 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 13241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 13245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 13246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 13247 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 40808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 13248 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 13249 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 40820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 13254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 40826 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 13263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 40832 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 13264 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 40838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 13268 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 40844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 13269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1; }
#line 40850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 13270 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 40856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 13275 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           NULL, NULL, &(yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so disallow any subqueries further.
              Alow subqueries back once the parameters are reduced.
            */
            Lex->clause_that_disallows_subselect= "PROCEDURE";
            Select->options|= OPTION_PROCEDURE_CLAUSE;
          }
#line 40884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 13299 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Subqueries are allowed from now.*/
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 40893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 13306 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 13307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 13317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 40916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 13326 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 40928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 13334 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 13339 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 13343 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 40961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 13363 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 40969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 13367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 40978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 13372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 40987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 13380 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 13385 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
          }
#line 41008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 13396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 41014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 13399 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 41033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 13414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 41041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 13425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            if (lex->main_select_push(true))
              MYSQL_YYABORT;
            mysql_init_select(lex);
          }
#line 41053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 13433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->insert_list= (yyvsp[0].item_list);
            Lex->pop_select(); //main select
          }
#line 41062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 13445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 13452 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 13454 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 41088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 13459 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 41110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 13477 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 41120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 13483 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE"));
            lex->spname= (yyvsp[0].spname);
          }
#line 41132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 13491 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE_BODY, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE BODY"));
            lex->spname= (yyvsp[0].spname);
          }
#line 41144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 13499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_name *spname;
            if (unlikely((yyvsp[-2].ident_sys).str && check_db_name((LEX_STRING*) &(yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-3].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), true);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 13513 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            LEX_CSTRING db= {0, 0};
            sp_name *spname;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (thd->db.str && unlikely(lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-1].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&db, &(yyvsp[0].ident_sys), false);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 41181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 13528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->set_command(SQLCOM_DROP_PROCEDURE, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 13536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 41201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 13540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 41209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 13544 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 13551 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 13553 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 41235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 13558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 41245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 13564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 41254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 13569 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 41263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 13574 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 41272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 13580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 13588 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 13598 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!thd->lex->current_select_or_default()->
                                           add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 41303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 13610 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 41317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 13628 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 41331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 13641 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 41340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 13646 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 41349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 13654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 41357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 13658 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 41365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 13664 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 41371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 13665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 41377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 13673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
          }
#line 41391 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 13684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true);
            Lex->current_select= Lex->first_select_lex();
          }
#line 41400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 13689 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 41411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 13699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
          }
#line 41425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 13709 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-1].lock_type), true);
            Lex->current_select= Lex->first_select_lex();
          }
#line 41434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 13714 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 41445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 13724 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 41458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 13732 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 13734 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         // QQ: why was +1?
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 41475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 13740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 41481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 13744 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 41487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 13746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 41497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 13754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 13755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 13759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->save_parsing_place= Select->parsing_place;
          }
#line 41517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 13763 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            //lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 41528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 13772 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 13773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 13775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
            lex->current_select->parsing_place= NO_MATTER;
          }
#line 41553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 13788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->parsing_place= AFTER_LIST;
          }
#line 41561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 13800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 41567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 13801 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 41573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 13807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 13822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 13831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 13832 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 13836 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 13837 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 13841 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 13842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 13846 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 13847 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 13852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 41647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 13857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 13867 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 41667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 13872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 13881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 13886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 13892 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 13897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 13905 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 41720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 13913 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 41732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 13923 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 41738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 13925 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 13931 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 13940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates= DUP_UPDATE; }
#line 41764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 13942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 41772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 13946 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= NO_MATTER;
          }
#line 41780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 13954 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            (yyval.table_list)->period_conditions= Lex->period_conditions;
          }
#line 41797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 13966 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 41803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 13973 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 41816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 13983 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *slex= Lex->first_select_lex();
            if (slex->table_list.elements > 1)
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (slex->get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1);
          }
#line 41839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].select_order))
              Select->order_list= *((yyvsp[-1].select_order));
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 41851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14018 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))) ||
                unlikely(add_value_to_list(thd, (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 41861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 14032 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 14041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 41878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->ignore= 0;
            lex->first_select_lex()->order_list.empty();
          }
#line 41900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 41908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14069 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 41916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 14075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_table()->vers_conditions= Lex->vers_conditions;
            Lex->pop_select(); //main select
          }
#line 41931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 14085 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 41947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 14100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].num))
            Lex->last_table()->period_conditions= Lex->period_conditions;
          }
#line 41956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 14112 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].select_order))
              Select->order_list= *((yyvsp[-2].select_order));
            Lex->pop_select(); //main select
          }
#line 41966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2322:
#line 14118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 41976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 14124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 41988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 14132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 41998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 14138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 42010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2330:
#line 14159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 14174 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 14191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 14192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 14196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 14197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 14201 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_QUICK; }
#line 42078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 14202 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 42084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 14203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 42090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 14208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->first_select_lex()->options= 0;
            lex->sql_cache= LEX::SQL_CACHE_UNSPECIFIED;
            lex->first_select_lex()->order_list.empty();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 14219 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 42117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2341:
#line 14226 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 42123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 14250 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 42131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 14254 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 42139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 14258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 42147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 14262 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 42155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 14266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 42163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2356:
#line 14270 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 42171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2357:
#line 14274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 42179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2358:
#line 14278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 42187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2359:
#line 14282 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 42195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2360:
#line 14289 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= 0;
    }
#line 42203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2361:
#line 14293 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 42211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2362:
#line 14302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 42226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2363:
#line 14313 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 42235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2364:
#line 14321 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 42246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2365:
#line 14328 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
#line 42258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2366:
#line 14336 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
#line 42270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2367:
#line 14344 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
#line 42282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2368:
#line 14352 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
#line 42294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2369:
#line 14360 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->first_select_lex()->db= (yyvsp[-1].lex_str);
            if (prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 42306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 14368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2371:
#line 14375 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2372:
#line 14382 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 42338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2373:
#line 14388 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 42344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2374:
#line 14390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= NULL; }
#line 42350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2375:
#line 14392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 42363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2376:
#line 14401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 42371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2377:
#line 14405 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 42379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2378:
#line 14409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 42388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2380:
#line 14415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 42397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2382:
#line 14421 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 42410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2383:
#line 14430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 42421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2384:
#line 14437 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 42430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2385:
#line 14442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 42439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2386:
#line 14447 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 42448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2387:
#line 14452 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 42457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2388:
#line 14457 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 42466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2389:
#line 14462 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 42472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2390:
#line 14464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 42478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2391:
#line 14466 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 42484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2392:
#line 14468 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 42495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2393:
#line 14475 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 42507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2394:
#line 14483 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 42513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2395:
#line 14485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 42525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2396:
#line 14493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 42536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2397:
#line 14500 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 42547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2398:
#line 14507 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 42559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2399:
#line 14515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 42569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2400:
#line 14521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 42578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2401:
#line 14526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 42590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2402:
#line 14534 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 42602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2403:
#line 14542 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 42614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2404:
#line 14550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 42622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2405:
#line 14554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 1;
          }
#line 42631 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2406:
#line 14559 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
            lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            lex->verbose= 0;
          }
#line 42642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2407:
#line 14566 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 0;
          }
#line 42651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2408:
#line 14571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 42662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2409:
#line 14578 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 42673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2410:
#line 14585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 42683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2411:
#line 14591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 42693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2412:
#line 14597 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 42703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2413:
#line 14603 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 42715 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2414:
#line 14611 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 42724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2415:
#line 14616 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2416:
#line 14623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2417:
#line 14630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2418:
#line 14637 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2419:
#line 14644 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 42777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2420:
#line 14649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 42786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2421:
#line 14654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 42795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2422:
#line 14659 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 42804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2423:
#line 14664 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_EXPLAIN)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 42815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2424:
#line 14671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 42838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2425:
#line 14693 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 42844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2426:
#line 14695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 42850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2427:
#line 14697 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 42856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2432:
#line 14711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 42862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2433:
#line 14712 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 42868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2434:
#line 14716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->verbose=0; }
#line 42874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2435:
#line 14717 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->verbose=1; }
#line 42880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2438:
#line 14726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 42886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2439:
#line 14727 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 42892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2440:
#line 14731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 42898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2441:
#line 14732 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 42904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2442:
#line 14736 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 42910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2443:
#line 14738 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 42922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2444:
#line 14746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 42933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2445:
#line 14757 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->first_select_lex()->db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 42950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2446:
#line 14770 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 42959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2447:
#line 14775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_NORMAL; }
#line 42965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2448:
#line 14777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->first_select_lex()->options|= SELECT_DESCRIBE;
          }
#line 42974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2457:
#line 14799 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->analyze_stmt= true;
          }
#line 42982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2458:
#line 14805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED; }
#line 42988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2459:
#line 14807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_EXTENDED2; }
#line 42994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2460:
#line 14808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 43000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2461:
#line 14809 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2462:
#line 14813 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2463:
#line 14815 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), "EXPLAIN",
                               (yyvsp[0].lex_str).str));
          }
#line 43026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2464:
#line 14827 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2465:
#line 14828 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->wild= (yyvsp[0].string); }
#line 43038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2466:
#line 14830 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 43050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2467:
#line 14844 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 43061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2468:
#line 14850 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2469:
#line 14855 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 43081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2470:
#line 14865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2471:
#line 14867 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2472:
#line 14871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2473:
#line 14873 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Don't try to flush views. */
            tables->required_type= TABLE_TYPE_NORMAL;
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 43115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2474:
#line 14888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 43121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2475:
#line 14890 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 43135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2476:
#line 14898 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2478:
#line 14904 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2479:
#line 14909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 43153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2480:
#line 14911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 43159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2481:
#line 14913 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 43165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2482:
#line 14915 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 43171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2483:
#line 14917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 43177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2484:
#line 14919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 43189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2485:
#line 14927 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 43195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2486:
#line 14929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 43201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2487:
#line 14931 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 43207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2488:
#line 14933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 43216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2489:
#line 14938 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 43222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2490:
#line 14940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 43234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2491:
#line 14948 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_MASTER; }
#line 43240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2492:
#line 14950 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 43246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2493:
#line 14952 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 43252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2494:
#line 14954 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SSL;}
#line 43258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2495:
#line 14956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 43276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2496:
#line 14972 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2497:
#line 14973 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2498:
#line 14977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2499:
#line 14982 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          int type;
          if (unlikely(Lex->sphead))
            my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP STAGE"));
          if ((type= find_type((yyvsp[0].ident_sys).str, &backup_stage_names,
                               FIND_TYPE_NO_PREFIX)) <= 0)
            my_yyabort_error((ER_BACKUP_UNKNOWN_STAGE, MYF(0), (yyvsp[0].ident_sys).str));
          Lex->sql_command= SQLCOM_BACKUP;
          Lex->backup_stage= (backup_stages) (type-1);
          break;
        }
#line 43310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2500:
#line 14994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 43319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2501:
#line 14999 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL, 0,
                                                    TL_READ, MDL_SHARED_HIGH_PRIO)))
             MYSQL_YYABORT;
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
            Lex->pop_select(); //main select
          }
#line 43331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2502:
#line 15007 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    /* Table list is empty for unlock */
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
          }
#line 43340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2503:
#line 15014 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2504:
#line 15016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2508:
#line 15026 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 43369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2509:
#line 15041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num)= 0;}
#line 43375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2510:
#line 15042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num)= REFRESH_CHECKPOINT; }
#line 43381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2511:
#line 15047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 43390 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2512:
#line 15052 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2515:
#line 15061 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 43402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2516:
#line 15063 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2517:
#line 15065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 43417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2519:
#line 15070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE;}
#line 43423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2520:
#line 15074 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 43429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2521:
#line 15075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 43435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2522:
#line 15079 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 15081 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 43449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 15088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_purge_to((yyvsp[0].lex_str));
          }
#line 43457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2525:
#line 15092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "PURGE..BEFORE"; }
#line 43463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2526:
#line 15094 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_purge_before((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 43473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 15106 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 43485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 15114 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->kill_signal= (killed_state) ((yyvsp[-2].num) | (yyvsp[-1].num));
          }
#line 43493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 15120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 43499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2530:
#line 15121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 43505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 15122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 43511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 15126 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 43517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2533:
#line 15127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 43523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2534:
#line 15128 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_QUERY; }
#line 43529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2535:
#line 15130 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
          }
#line 43538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2536:
#line 15138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 43546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2537:
#line 15142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 43555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2538:
#line 15150 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 43561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 15151 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 15155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->is_shutdown_wait_for_slaves= false; }
#line 43573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 15157 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->is_shutdown_wait_for_slaves= true;
        }
#line 43581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 15165 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->first_select_lex()->db= (yyvsp[0].ident_sys);
          }
#line 43591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2543:
#line 15176 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
          }
#line 43609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2544:
#line 15190 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 43624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2545:
#line 15201 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 43641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2546:
#line 15214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 43647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2547:
#line 15218 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
            Lex->mark_first_table_as_inserting();
          }
#line 43658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2548:
#line 15227 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 43664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2549:
#line 15228 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 43670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2550:
#line 15232 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=0;}
#line 43676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2551:
#line 15233 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1;}
#line 43682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2552:
#line 15237 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 43688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2553:
#line 15239 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 43700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2554:
#line 15246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 43706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2555:
#line 15250 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_ERROR; }
#line 43712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2556:
#line 15251 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_REPLACE; }
#line 43718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2557:
#line 15252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 43724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2562:
#line 15267 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 43733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2563:
#line 15272 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 43744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2564:
#line 15279 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 43753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2565:
#line 15284 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 43762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2570:
#line 15302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 43771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2571:
#line 15307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 43780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2572:
#line 15314 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2573:
#line 15316 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->line_term = (yyvsp[0].string); }
#line 43792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2575:
#line 15322 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 43801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2576:
#line 15329 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2577:
#line 15330 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2578:
#line 15334 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2579:
#line 15335 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2580:
#line 15336 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2581:
#line 15341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 43837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2582:
#line 15343 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 43843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2583:
#line 15347 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.item)= (yyvsp[0].item);}
#line 43849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2584:
#line 15349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2585:
#line 15357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2586:
#line 15358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2589:
#line 15368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 43883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2590:
#line 15381 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 43892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2591:
#line 15386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 43901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2592:
#line 15391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 43910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2593:
#line 15396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 43919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2594:
#line 15404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 43931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2595:
#line 15411 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 43937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2596:
#line 15417 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 43949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2597:
#line 15425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 43961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2598:
#line 15433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 43977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2599:
#line 15448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 43988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2600:
#line 15455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 43998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2601:
#line 15461 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 44009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2602:
#line 15470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 44015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2603:
#line 15472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 44024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2604:
#line 15479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 44030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2605:
#line 15480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 44036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2606:
#line 15481 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 44042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2607:
#line 15483 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 44060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2608:
#line 15497 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2609:
#line 15503 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2610:
#line 15509 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2611:
#line 15515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2612:
#line 15521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2613:
#line 15527 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_string_with_introducer *item_str;
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, NULL, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(),
                                           (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 44130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2614:
#line 15546 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2615:
#line 15556 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2616:
#line 15566 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 44168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2617:
#line 15572 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2618:
#line 15579 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 44189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2619:
#line 15589 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_newdate.create_literal_item(thd,
                                                           (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                           YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 44200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2620:
#line 15596 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_time2.create_literal_item(thd,
                                                         (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                         YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 44211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2621:
#line 15603 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_datetime2.create_literal_item(thd,
                                                             (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                             YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 44222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2622:
#line 15613 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             lex->derived_tables|= DERIVED_WITH;
             lex->curr_with_clause= with_clause;
             with_clause->add_to_list(Lex->with_clauses_list_last_next);
             if (lex->current_select &&
                 lex->current_select->parsing_place == BEFORE_OPT_LIST)
               lex->current_select->parsing_place= NO_MATTER;
          }
#line 44240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2623:
#line 15627 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 44249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2624:
#line 15635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 44255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2625:
#line 15636 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 44261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2628:
#line 15649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_str_list)= new List<LEX_CSTRING> (Lex->with_column_list);
            if (unlikely((yyvsp[0].lex_str_list) == NULL))
              MYSQL_YYABORT;
            Lex->with_column_list.empty();
          }
#line 44272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2629:
#line 15656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            const char *spec_start= (yyvsp[-2].kwd).pos() + 1;
            With_element *elem= new With_element((yyvsp[-6].lex_str_ptr), *(yyvsp[-5].lex_str_list), (yyvsp[-1].select_lex_unit));
	    if (elem == NULL || Lex->curr_with_clause->add_with_element(elem))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[0].kwd).pos(),
                                        spec_start - query_start))
              MYSQL_YYABORT;
	  }
#line 44289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2630:
#line 15673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 44295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2631:
#line 15675 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 44301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2632:
#line 15681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
	  }
#line 44310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2633:
#line 15686 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
          }
#line 44319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2634:
#line 15695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 44329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2635:
#line 15709 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2636:
#line 15710 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2637:
#line 15715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2638:
#line 15720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2639:
#line 15728 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2640:
#line 15733 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2641:
#line 15740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2642:
#line 15746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2643:
#line 15751 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2644:
#line 15756 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2645:
#line 15762 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2646:
#line 15767 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2647:
#line 15775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2648:
#line 15780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2649:
#line 15785 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2650:
#line 15790 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2651:
#line 15796 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 44475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 15803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 15805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 44496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 15816 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 44508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 15823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 15828 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 15834 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 15840 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 15850 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 15856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2661:
#line 15865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING db={(char*) any_db,3};
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 44576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2666:
#line 15881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 44582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 15886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 44591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2668:
#line 15894 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 44600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 15902 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 44609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2670:
#line 15910 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 44618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2672:
#line 15919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2674:
#line 15928 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 15937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2677:
#line 15942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 44654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2679:
#line 15952 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2681:
#line 15961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2683:
#line 15971 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 44681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 15978 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 44687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 15979 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 44693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 15984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_goto_label(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[-1].ident_sys);
          }
#line 44703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 15992 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 44709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2688:
#line 15993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 44715 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2689:
#line 15994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 44721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2690:
#line 15999 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 44736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2691:
#line 16010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 44769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 16039 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->auth= new (thd->mem_root) USER_AUTH();
          }
#line 44780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 16050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 44790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3183:
#line 16673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->main_select_push(true))
              MYSQL_YYABORT;
            lex->set_stmt_init();
            lex->var_list.empty();
            if (sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 16683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 44814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 16689 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->set_stmt_init();
          }
#line 44824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 16695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
            Lex->pop_select(); //main select
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 44839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 16706 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44845 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 16711 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            if(sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 16719 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 16725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            if (sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 16733 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->var_list.is_empty());
            if (unlikely(lex->set_variable(&(yyvsp[-5].ident_sys), &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 44891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 16741 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!lex->is_trigger_new_or_old_reference(&(yyvsp[-3].ident_sys))))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-4].kwd).pos());
              MYSQL_YYABORT;
            }
            lex->set_stmt_init();
            lex->var_list.empty();
            if (sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 16754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING tmp= { (yyvsp[-5].ident_sys).str, (yyvsp[-5].ident_sys).length };
            if (unlikely(Lex->set_trigger_field(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 16775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 16781 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= OPT_DEFAULT;
          }
#line 44936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 16785 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 16790 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 44953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 16800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 16806 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 16820 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 16825 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 16830 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 44998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 16835 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 16844 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 16852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 16853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3216:
#line 16854 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3217:
#line 16858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 16859 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 16860 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 16861 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 16865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 45063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 16866 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 16867 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3224:
#line 16868 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3225:
#line 16874 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3226:
#line 16879 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, Lex->option_type, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3227:
#line 16884 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3228:
#line 16893 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3229:
#line 16898 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3230:
#line 16903 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3231:
#line 16908 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3232:
#line 16913 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable((yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3233:
#line 16918 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-5].var_type), &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3234:
#line 16923 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-5].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3235:
#line 16928 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 45189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3236:
#line 16942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 45204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3237:
#line 16953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (unlikely(!my_charset_same(cs2, cs3)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new (thd->mem_root) set_var_collation_client(cs3, cs3, cs3);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3238:
#line 16972 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3239:
#line 16990 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3240:
#line 17002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_str));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3241:
#line 17010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].kwd), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 45286 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3242:
#line 17015 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_password *var= (new (thd->mem_root)
                                    set_var_password(lex->definer));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 45302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3247:
#line 17038 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3248:
#line 17057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3249:
#line 17074 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 45347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3250:
#line 17075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 45353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3251:
#line 17079 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 45359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3252:
#line 17080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 45365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3253:
#line 17081 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 45371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3254:
#line 17082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 45377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3255:
#line 17087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING pw= { STRING_WITH_LEN("password") };

            if (unlikely(spc && spc->find_variable(&pw, false)))
              my_yyabort_error((ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str));
            if (unlikely(!(lex->definer= (LEX_USER*)
                           thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            lex->definer->user= current_user;
            lex->definer->auth= new (thd->mem_root) USER_AUTH();
          }
#line 45395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3256:
#line 17100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer= (yyvsp[-1].lex_user); }
#line 45401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3257:
#line 17105 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer->auth= new (thd->mem_root) USER_AUTH();
            Lex->definer->auth->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 45410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3258:
#line 17110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer->auth= new (thd->mem_root) USER_AUTH();
            Lex->definer->auth->pwtext= (yyvsp[-1].lex_string_with_metadata);
          }
#line 45419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3259:
#line 17115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer->auth= new (thd->mem_root) USER_AUTH();
            Lex->definer->auth->pwtext= (yyvsp[-1].lex_string_with_metadata);
            Lex->definer->auth->auth_str.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            Lex->definer->auth->auth_str.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 45431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3260:
#line 17125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 45437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3261:
#line 17126 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=0; }
#line 45443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3262:
#line 17128 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3263:
#line 17134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3264:
#line 17140 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3265:
#line 17151 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 45485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3266:
#line 17159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3267:
#line 17164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3268:
#line 17166 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 45507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3269:
#line 17172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 45517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3270:
#line 17180 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 45523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3271:
#line 17181 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 45529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3274:
#line 17191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Lex->current_select_or_default()->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 45549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3275:
#line 17209 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 45555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3276:
#line 17210 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 45561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3277:
#line 17212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 45569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3278:
#line 17216 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 45575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3279:
#line 17217 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 45581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3280:
#line 17222 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 45593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3281:
#line 17230 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3282:
#line 17239 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 45608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3283:
#line 17244 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 45616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3284:
#line 17251 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
              MYSQL_YYABORT;
          }
#line 45629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3285:
#line 17260 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 45642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3286:
#line 17269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->clause_that_disallows_subselect= "HANDLER..READ";
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 45663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3287:
#line 17286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->clause_that_disallows_subselect= NULL;
            if (!lex->current_select->explicit_limit)
            {
              Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
              if (one == NULL)
                MYSQL_YYABORT;
              lex->current_select->select_limit= one;
              lex->current_select->offset_limit= 0;
              lex->limit_rows_examined= 0;
            }
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 45688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3288:
#line 17309 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ident= null_clex_str; }
#line 45694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3289:
#line 17310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ident= (yyvsp[-1].ident_sys); }
#line 45700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3290:
#line 17314 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 45706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3291:
#line 17315 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 45712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3292:
#line 17319 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 45718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3293:
#line 17320 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 45724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3294:
#line 17321 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RPREV;  }
#line 45730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3295:
#line 17322 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RLAST;  }
#line 45736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3296:
#line 17324 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 45748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3297:
#line 17332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3298:
#line 17336 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 45760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3299:
#line 17337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 45766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3300:
#line 17338 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 45772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3301:
#line 17339 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 45778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3302:
#line 17340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 45784 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3303:
#line 17347 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3304:
#line 17352 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
#line 45800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3305:
#line 17358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 45810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3306:
#line 17364 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                         TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 45820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3307:
#line 17371 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 45830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3308:
#line 17378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 45840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3309:
#line 17384 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 45848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3310:
#line 17388 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 45859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3311:
#line 17395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3312:
#line 17404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3313:
#line 17406 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3314:
#line 17411 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3315:
#line 17417 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
#line 45897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3316:
#line 17424 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 45907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3317:
#line 17431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 45917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3318:
#line 17438 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 45927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3319:
#line 17445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 45937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3320:
#line 17451 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 45948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3321:
#line 17458 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3322:
#line 17469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer = 0; }
#line 45966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3323:
#line 17470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer = (yyvsp[0].lex_user); }
#line 45972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3324:
#line 17474 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; }
#line 45978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3325:
#line 17475 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; }
#line 45984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3326:
#line 17480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3327:
#line 17485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3328:
#line 17493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
            (yyval.lex_user)->auth= NULL;
          }
#line 46013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3329:
#line 17503 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            CHARSET_INFO *cs= system_charset_info;
            /* trim end spaces (as they'll be lost in mysql.user anyway) */
            (yyvsp[0].lex_str).length= cs->cset->lengthsp(cs, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
            if (unlikely((yyvsp[0].lex_str).length == 0))
              my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host= empty_clex_str;
            (yyval.lex_user)->auth= NULL;

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  cs, 0)))
              MYSQL_YYABORT;
          }
#line 46036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3333:
#line 17530 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3334:
#line 17532 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 46051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3339:
#line 17550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = SELECT_ACL;}
#line 46057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3340:
#line 17551 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3341:
#line 17553 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = INSERT_ACL;}
#line 46069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3342:
#line 17554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3343:
#line 17556 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = UPDATE_ACL; }
#line 46081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3344:
#line 17557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3345:
#line 17559 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = REFERENCES_ACL;}
#line 46093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3346:
#line 17560 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3347:
#line 17561 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_ACL;}
#line 46105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3348:
#line 17562 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3349:
#line 17563 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= INDEX_ACL;}
#line 46117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3350:
#line 17564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_ACL;}
#line 46123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3351:
#line 17565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_ACL;}
#line 46129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3352:
#line 17566 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DROP_ACL;}
#line 46135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3353:
#line 17567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= EXECUTE_ACL;}
#line 46141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3354:
#line 17568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= RELOAD_ACL;}
#line 46147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3355:
#line 17569 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHUTDOWN_ACL;}
#line 46153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3356:
#line 17570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= PROCESS_ACL;}
#line 46159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3357:
#line 17571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= FILE_ACL;}
#line 46165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3358:
#line 17572 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3359:
#line 17573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_DB_ACL;}
#line 46177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3360:
#line 17574 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SUPER_ACL;}
#line 46183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3361:
#line 17575 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TMP_ACL;}
#line 46189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3362:
#line 17576 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= LOCK_TABLES_ACL; }
#line 46195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3363:
#line 17577 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_SLAVE_ACL; }
#line 46201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3364:
#line 17578 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_CLIENT_ACL; }
#line 46207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3365:
#line 17579 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_VIEW_ACL; }
#line 46213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3366:
#line 17580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_VIEW_ACL; }
#line 46219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3367:
#line 17581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_PROC_ACL; }
#line 46225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3368:
#line 17582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_PROC_ACL; }
#line 46231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3369:
#line 17583 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_USER_ACL; }
#line 46237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3370:
#line 17584 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= EVENT_ACL;}
#line 46243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3371:
#line 17585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= TRIGGER_ACL; }
#line 46249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3372:
#line 17586 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 46255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3373:
#line 17587 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_HISTORY_ACL; }
#line 46261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3374:
#line 17591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3375:
#line 17592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3378:
#line 17602 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.x509_subject.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->account_options.x509_subject= (yyvsp[0].lex_string_with_metadata);
          }
#line 46284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3379:
#line 17609 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.x509_issuer.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->account_options.x509_issuer= (yyvsp[0].lex_string_with_metadata);
          }
#line 46295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3380:
#line 17616 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.ssl_cipher.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->account_options.ssl_cipher= (yyvsp[0].lex_string_with_metadata);
          }
#line 46306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3381:
#line 17626 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->copy_db_to(&lex->first_select_lex()->db)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3382:
#line 17636 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->first_select_lex()->db= (yyvsp[-2].ident_sys);
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3383:
#line 17645 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->first_select_lex()->db= null_clex_str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 46346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3384:
#line 17654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!lex->first_select_lex()->
                         add_table_to_list(thd, (yyvsp[0].table),NULL,
                                           TL_OPTION_UPDATING)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 46360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3385:
#line 17667 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3386:
#line 17672 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3387:
#line 17680 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3388:
#line 17685 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3389:
#line 17693 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3390:
#line 17698 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3395:
#line 17709 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-3].lex_user)->auth->pwtext= (yyvsp[0].lex_string_with_metadata);
          }
#line 46424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3396:
#line 17715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-4].lex_user)->auth->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 46434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3397:
#line 17721 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= (yyvsp[0].user_auth);
          }
#line 46443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3398:
#line 17726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
          }
#line 46451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3399:
#line 17733 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.user_auth)= (yyvsp[-2].user_auth);
            DBUG_ASSERT((yyval.user_auth)->next == NULL);
            (yyval.user_auth)->next= (yyvsp[0].user_auth);
          }
#line 46461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3400:
#line 17739 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.user_auth)= (yyvsp[0].user_auth);
          }
#line 46469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3401:
#line 17746 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.user_auth)= (yyvsp[0].user_auth);
          (yyval.user_auth)->plugin= (yyvsp[-1].lex_str);
        }
#line 46478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3402:
#line 17754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
        }
#line 46487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3403:
#line 17759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->auth_str= (yyvsp[0].lex_str);
        }
#line 46497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3404:
#line 17765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
        }
#line 46507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3405:
#line 17774 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 46516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3406:
#line 17778 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 46522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3409:
#line 17788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            String *new_str= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,(yyvsp[0].ident_sys).length,system_charset_info);
            if (unlikely(new_str == NULL))
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.c_ptr(), new_str->c_ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= (new (thd->mem_root)
                                LEX_COLUMN(*new_str,lex->which_columns));
              if (unlikely(col == NULL))
                MYSQL_YYABORT;
              lex->columns.push_back(col, thd->mem_root);
            }
          }
#line 46552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3411:
#line 17818 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 46560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3412:
#line 17822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_ANY;
          }
#line 46568 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3413:
#line 17826 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_X509;
          }
#line 46576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3414:
#line 17830 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_NONE;
          }
#line 46584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3415:
#line 17837 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.questions=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 46593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3416:
#line 17842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.updates=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 46602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3417:
#line 17847 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.conn_per_hour= (yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 46611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3418:
#line 17852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.user_conn= (yyvsp[0].num);
            Lex->account_options.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 46620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3419:
#line 17857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.max_statement_time= (yyvsp[0].item_num)->val_real();
            Lex->account_options.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 46629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3420:
#line 17864 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3421:
#line 17865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3422:
#line 17869 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3424:
#line 17875 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3425:
#line 17876 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3426:
#line 17880 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3427:
#line 17881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46671 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3428:
#line 17885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3429:
#line 17886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3430:
#line 17890 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3431:
#line 17891 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3432:
#line 17896 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 46705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3433:
#line 17901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3434:
#line 17906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_COMPOUND;
            if (Lex->sp_body_finalize_procedure(thd))
              MYSQL_YYABORT;
          }
#line 46721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3435:
#line 17914 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 46727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3436:
#line 17915 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 46733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3437:
#line 17919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3438:
#line 17920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3439:
#line 17925 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3440:
#line 17926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3441:
#line 17927 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3442:
#line 17932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3443:
#line 17933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3444:
#line 17934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3445:
#line 17939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3446:
#line 17951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3447:
#line 17960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3448:
#line 17966 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3449:
#line 17975 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3450:
#line 17984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3451:
#line 17997 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= UNION_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 46853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3452:
#line 17999 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= INTERSECT_TYPE; (yyval.unit_operation).distinct= 1; }
#line 46859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3453:
#line 18001 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= EXCEPT_TYPE; (yyval.unit_operation).distinct= 1; }
#line 46865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3454:
#line 18008 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 46871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3455:
#line 18009 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 46877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3456:
#line 18010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 46883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3457:
#line 18014 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 46889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3458:
#line 18016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 46899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3459:
#line 18021 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 46905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3460:
#line 18022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 46911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3461:
#line 18023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_SMALL_RESULT; }
#line 46917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3462:
#line 18024 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_BIG_RESULT; }
#line 46923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3463:
#line 18025 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_BUFFER_RESULT; }
#line 46929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3464:
#line 18026 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_FOUND_ROWS; }
#line 46935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3465:
#line 18027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_ALL; }
#line 46941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3468:
#line 18043 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 46956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3469:
#line 18057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->account_options.reset();
          }
#line 46965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3470:
#line 18070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 46971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3471:
#line 18071 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 46977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3472:
#line 18072 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 46983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3473:
#line 18076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 46989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3474:
#line 18077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 46995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3475:
#line 18081 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 47001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3476:
#line 18082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 47007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3477:
#line 18087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3478:
#line 18088 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 47019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3479:
#line 18093 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3480:
#line 18099 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 47039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3481:
#line 18107 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 47049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3482:
#line 18114 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_create_view((yyvsp[-1].select_lex_unit), (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 47058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3483:
#line 18121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 47064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3484:
#line 18122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3485:
#line 18123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3486:
#line 18124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 47082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3487:
#line 18135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 47088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3488:
#line 18137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 47094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3489:
#line 18142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 47104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3490:
#line 18149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 47113 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3491:
#line 18158 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 47122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3492:
#line 18167 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 47130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3493:
#line 18173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 47138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3494:
#line 18178 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 47146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3495:
#line 18182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 47171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3496:
#line 18203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $20 */
            LEX *lex= Lex;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            if (lex->sp_body_finalize_trigger(thd))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[-9].table), (LEX_CSTRING*) 0,
                                    TL_OPTION_UPDATING, TL_READ_NO_INSERT,
                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
#line 47194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3497:
#line 18230 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str,
                                 thd->variables.collation_database);
          }
#line 47205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3498:
#line 18237 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->fill_field_definition(thd,
                                                            Lex->last_field)))
              MYSQL_YYABORT;
          }
#line 47215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3499:
#line 18246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sphead->set_c_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 47225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3500:
#line 18253 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
          }
#line 47234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3501:
#line 18261 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[0].spname),
                                                         &sp_handler_procedure,
                                                         DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
          }
#line 47245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3502:
#line 18269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->set_c_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 47254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3503:
#line 18276 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_procedure_standalone(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 47263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3504:
#line 18284 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 47269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3505:
#line 18285 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 47275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3508:
#line 18297 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 47283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3509:
#line 18301 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 47291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3510:
#line 18305 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 47299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3511:
#line 18309 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 47307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3512:
#line 18313 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 47315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3513:
#line 18317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 47324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3514:
#line 18324 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 47330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3515:
#line 18326 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 47347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3516:
#line 18342 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 47358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3517:
#line 18349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 47369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3518:
#line 18356 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 47380 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3519:
#line 18365 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3520:
#line 18366 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3521:
#line 18367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3522:
#line 18371 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3523:
#line 18372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_JOIN;        }
#line 47410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3524:
#line 18373 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_RESUME;      }
#line 47416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3525:
#line 18377 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3526:
#line 18378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_ONE_PHASE;   }
#line 47428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3527:
#line 18383 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 47434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3528:
#line 18385 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_SUSPEND;     }
#line 47440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3530:
#line 18390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47446 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3531:
#line 18391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 47452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3532:
#line 18396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_install_plugin((yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 47461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3533:
#line 18401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_install_plugin((yyvsp[0].lex_str));
          }
#line 47469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3534:
#line 18408 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_uninstall_plugin_by_name((yyvsp[-1].object_ddl_options), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 47478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3535:
#line 18413 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_uninstall_plugin_by_soname((yyvsp[-1].object_ddl_options), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 47487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3536:
#line 18422 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            YYERROR;
          }
#line 47495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;


#line 47499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (thd, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (thd, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
